test_data/LibEST_semeru_format/test/us903.c "unit test user stori server simpl enrol august copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif ifndef win static char test outfil filenam max test hdr defin cacert est cacert crt defin explicit_cert us903 cert pem defin us903_explicit_key us903 key pem defin us903_cacert est cacert crt defin us903_trusted_cert trustedcert crt defin est privat estservercertandkey pem els static char test5_outfil filename_max us903 test5 hdr defin us903_cacert est cacert crt defin us903_explicit_cert us903 cert pem defin us903_explicit_key us903 key pem defin us903_cacert est cacert crt defin us903_trusted_cert trustedcert crt defin est privat estservercertandkey pem endif static unsign char cacert null static int cacerts_len defin us903_retry_interv 3600 defin us903_tcp_port 29001 follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin us903_pkcs10_rsa2048 miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x follow csr generat use follow openssl command use cat req file openssl req newkey 256parm keyout eckey pem keyform pem req outform pem defin us903_pkcs10_dsa1024 miicfj ccaj0caqawf delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax arbg nvbao mck rtqunvb xbhbnkx anbg nvbas mbk rtqw9i eqma4g a1ueaww hzhnh igrv ztea mbg gcsq gsib3dqejarylzhnh qgrv zs5jb20wgg g2miib yhko zizjg eatccar4cg yeaq ifbyk7r eaa ulipb1gc hhc0ctx6g0dh bfd opng bse tp5uf5lw8qm6o cxst u3n yejalm mvkj fwbgv bws8a jbnj09d ddn8sp kegc g0m zpqd mys6 b4qjjq5yax atvi ggm1efdhc 6ezm2t3cg qklwo5a bzqcc cfqdc1ol bfu ohj xaw ee5epjk rjw kbg lctj vfnj ao8x smamw nora nfdi zceam d4838n cgaj vrqi db1q5akk lyxo jx1yv7g nba bnuys3waqdu nso1htu eur2cbh u5i kbwpj6miwl d3u cru4ui bf9xbi ana rid8ct2kchhwy4ok qmu yoz4 mqqm a4geaakbg duw r7h3u4cfu ttr i50m1txhl vz3ton vix ehpu aoux atvkth jta cbkc0ehii1b nug bub xfpk rt3qrlf0 pzgi 0tov o9p kjqiw0c10l nkfb evdl xyt akj xub hmi nog3195 t7o kxhmt1a ucro aaw cqyhko zizjg eaw adat uah pcq qg3g kuupkdw bncm zfz wdqjs cfah0 nzn9hujl xna ta1ohjm pmc jsx follow csr generat use follow openssl command use cat dsa req file openssl req newkey dsa dsaparm keyout dsakey pem keyform pem dsa req outform pem defin miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq29i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k defin us903_pkcs10_corrupt miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq39i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k follow valid csr alreadi contain challeng password collect use estserv dumpbin function csr never work sinc valu stale defin miibcj cb3aibadarmq8w dqydvqqdew zurvnuq04wg z8w dqyjko zihvc naqebbqad y0amigjao gbapdhvrk vb3 fhl isr zgixld ryrd50s2v fs8m w5w wvx ds3x nzc ktqg7juy w8nyofnwx0ozh ce87xp2h7t 84zu ktlu3bjgq1xg nuu8a1ht10wiy8u2r ekmh qwpvt56uy5p hzuqmql o0qlm m58wn49ih mbaagg bgkqhki g9w0bcqcx yrujd gn1zunuwyd2vu aow dqyjko zihvc naqef bqadg yeayenrskmf rixcp kbv l3vn w5n4hc ltw i9hcbr744swfqaw uxd2j n99agbr tgh inwg2c7vz g6ok9fti nr9h 5slyhf sfjbu iv65r nvf lr9n9m2q9jlf7p4ayf wxd2q d2xotzw2t4tr gzgka2jr b40 defin us903_enroll_url_ba https :// 127 29001 well known est simpleenrol defin us903_pkcs10_ct content type applic pkcs10 defin us903_uidpwd_good estus estpwd static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv static file outfil static size_t write_func void ptr size_t size size_t nmemb void userdata size_t written written fwrite ptr size nmemb outfil return written static void us903_clean void static int us903_start_serv int manual_enrol int nid int st_start us903_tcp_port us903 test realm us903_cacert us903_trusted_cert est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us903_init_suit void int est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us903_cacert cacert cacerts_len return us903_clean (); start instanc est server automat enrol enabl us903_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us903_destory_suit void st_stop (); free cacert return simpl enrol rsa 2048 test case use libcurl test simpl enrol 2048 bit rsa csr http basic authent use static void us903_test1 void long log_func_nm curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_rsa2048 us903_uidpwd_good us903_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol prime 256 test case use libcurl test simpl enrol 256 bit csr http basic authent use static void us903_test2 void long log_func_nm curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_uidpwd_good us903_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol dsa prime 1024 test case use libcurl test simpl enrol 1024 bit dsa csr http basic authent use static void us903_test3 void long log_func_nm curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_dsa1024 us903_uidpwd_good us903_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol corrupt pkcs10 test case use libcurl test simpl enrol usinga corrupt csr http basic authent use static void us903_test4 void long log_func_nm curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_corrupt us903_uidpwd_good us903_cacert curlauth_bas null null null sinc csr valid server respond 400 cu_assert 400 simpl enrol manual enrol test case verifi server send appropri retri respons static void us903_test5 void long log_func_nm stop est server st_stop (); restart server manual enrol enabl us903_start_serv outfil fopen test5_outfil ""); curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_rsa2048 us903_uidpwd_good us903_cacert curlauth_bas null null write_func fclose outfil sinc server seen csr past respond retri 202 respons cu_assert 202 verifi retri valu grep test5_outfil retri 3600 ""); cu_assert avoid wait full retri period sinc simul manual enrol wait second tri enrol cert sleep curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_rsa2048 us903_uidpwd_good us903_cacert curlauth_bas null null null enrol request succeed time simul manual enrol automat enrol second attempt cu_assert 200 stop est server st_stop (); restart server manual enrol disabl us903_start_serv simpl enrol check fail curl test case verifi server verifi client csr sinc curl set est enrol fail static void us903_test6 void long log_func_nm st_enable_pop (); send valid enrol request use curl curl includ curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_rsa2048 us903_uidpwd_good us903_cacert curlauth_bas null null null server respond failur code cu_assert 400 st_disable_pop (); simpl enrol check succeed estclient test case verifi server verifi client csr use estclient sinc support static void us903_test7 void long est_ctx c_ctx evp_pkey new_pkey unsign char pkcs7 int pkcs7_len unsign char attr_data int attr_len int http_status log_func_nm test case requir enabl st_enable_pop (); creat client context c_ctx est_client_init cacert cacerts_len est_cert_format_pem cu_assert c_ctx null c_ctx return specifi user password sinc server run basic authent mode est_client_set_auth c_ctx estus estpwd null null cu_assert est_err_non est_client_set_serv c_ctx 127 us903_tcp_port null get keypair use enrol new_pkey generate_private_key (); c_ctx attr_data attr_len cu_assert est_err_non attempt enrol csr est_client_enrol c_ctx us903 test7 pkcs7_len new_pkey cu_assert est_err_non check http status code receiv server 200 http_status c_ctx cu_assert http_status 200 client librari obtain new client certif retriev librari pkcs7 malloc pkcs7_len pkcs7 return c_ctx pkcs7 cu_assert est_err_non clean est_destroy c_ctx evp_pkey_fre new_pkey free pkcs7 disabl futur test case st_disable_pop (); simpl enrol use non default ecdh curv test case verifi function work static void us903_test8 void long log_func_nm stop est server st_stop (); restart server use secp384r1 curv us903_start_serv nid_secp384r1 curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_pkcs10_rsa2048 us903_uidpwd_good us903_cacert curlauth_bas ecdh ecdsa aes256 gcm sha384 null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol disabl csr contain valid test case ensur server handl scenario csr includ valid even server request use cisco est client generat csr contain valid way includ valid use curl sinc tls channel bind inform known advanc follow includ never use applic use hack est_ctx valu mid way test includ ""../../ src est est_locl static void us903_test9 void est_ctx ctx int unsign char cacert int caclen evp_pkey new_pkey unsign char pkcs7 int pkcs7_len unsign char attr_data int attr_len log_func_nm make sure est server disabl st_disable_pop (); read cert caclen read_binary_fil us903_cacert cacert cu_assert cacerts_len init client context ctx est_client_init cacert caclen est_cert_format_pem use simpl http auth identifi est_client_set_auth ctx estus estpwd null null cu_assert est_err_non est_client_set_serv ctx 127 us903_tcp_port null creat space hold cert generat privat key new_pkey generate_private_key (); ctx attr_data attr_len cu_assert est_err_non attempt enrol ctx csr_pop_requir hack test attempt need forc challeng password csr est_client_enrol ctx test case9 pkcs7_len new_pkey cu_assert est_err_non pkcs7 malloc pkcs7_len ctx pkcs7 free pkcs7 est_destroy ctx simpl enrol disabl csr contain invalid test case ensur server handl scenario csr includ invalid even server request static void us903_test10 void long log_func_nm make sure est server disabl st_disable_pop (); curl_http_post us903_enroll_url_ba us903_pkcs10_ct us903_uidpwd_good us903_cacert curlauth_bas null null null enrol request fail sinc invalid expect 400 respons cu_assert 400 simpl enrol enabl csr contain invalid client use cert contain cmc test case ensur server disabl check client use cert contain cmc indic client static void us903_test11 void long log_func_nm make sure est server disabl st_enable_pop (); us903_enroll_url_ba us903_pkcs10_ct us903_uidpwd_good us903_explicit_cert us903_explicit_key us903_cacert null even though valu match csr enrol succeed sinc client use certif expect 200 respons cu_assert 200 main function set run test return cue_success success run anoth cunit error code failur int us903_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us903_srv_simpenrol us903_init_suit us903_destory_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit enrol rsa cert us903_test1 null cu_add_test suit enrol ecdsa cert us903_test2 null cu_add_test suit enrol dsa cert us903_test3 null cu_add_test suit enrol corrupt ecdsa cert us903_test4 null cu_add_test suit enrol retri manual approv us903_test5 null cu_add_test suit enrol fail curl us903_test6 null cu_add_test suit enrol succeed estclient us903_test7 null cu_add_test suit non default ecdh curv us903_test8 null cu_add_test suit enrol disabl csr includ valid us903_test9 null cu_add_test suit enrol disabl csr includ invalid us903_test10 null cu_add_test suit enrol enabl use cert csr includ invalid us903_test11 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us3496.c "unit test uri path segment extens support march copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util ifdef cunit includ cunit basic includ cunit autom endif includ util test util includ server includ src est est locl extern char tst srvr path seg enrol extern char tst srvr path seg auth static int path segment support max command line length generat system command defin est max cmd_len 256 certif use verifi est server grab server directori defin client_ut_cacert ""../../ exampl server est cacert crt defin client_ut_cacert est cacert crt defin client_ut_pubkey ""./ defin us3496_server_port 29496 defin us3496_server_ip 127 defin us3496_uidpwd_good estus estpwd defin us3496_uid estus defin us3496_pwd estpwd ifndef win32 defin us3496_cacert est cacert crt defin us3496_trust_cert trustedcert crt defin est privat estservercertandkey pem els defin us3496_cacert est cacert crt defin us3496_trust_cert trustedcert crt defin est privat estservercertandkey pem static critical_sect logger_critical_sect static void us3496_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif defin us3496_enroll_url_ba https :// 127 29496 well known est cacert somestr simpleenrol defin us3496_pkcs10_ct content type applic pkcs10 defin miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x static int x509 cur_cert int openssl_cert_error static void us3496_clean void static int us3496_start_serv int manual_enrol int nid int st_start us3496_server_port us3496 test realm us3496_cacert us3496_trust_cert est exampl cnf manual_enrol nid sleep return static int path_seg_support void est_ctx ectx unsign char cacert null int cacerts_len est_error est_err_non sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_serv ectx us3496_server_ip us3496_server_port test_seg ""); est_err_non return els return return routin call cunit initi test suit generat keypair use est client suit static int us3496_init_suit void int char cmd est_ut_max_cmd_len printf start est client proxi path segment unit test ""); check see path segment support compil path_segment_support printf uri path segment support build est rebuild use uripars dir ""); return gen keypair use est client test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey client_ut_pubkey printf (""% cmd system cmd start server test need talk server us3496_clean (); start instanc est server us3496_start_serv sleep return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us3496_destroy_suit void st_stop (); return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv test case test set server valid paramet path segment static void us3496_test1 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port null cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment valid static void us3496_test2 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port somestr ""); cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment contain segment fail static void us3496_test3 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port somestring1 somestring2 ""); cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey valid charact defin ""@% ~!$&'()*+,;="" static void us3496_test4 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment invalid invalid charact static void us3496_test5 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port someinvalid string ""); cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment long 129 defin static void us3496_test6 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment equal oper cacert static void us3496_test7 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port cacert ""); cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment contain oper cacert case front string static void us3496_test8 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port cacert server ""); cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment empti string fail static void us3496_test9 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port """"); cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment contain :'. pass static void us3496_test10 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port ""-. ~:@!$&'()*+,;=""); cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey pass path segment long 129 defin path_segment_max static void us3496_test11 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3496_server_ip us3496_server_port path_segment_max cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us3496_add_suit void cu_error code cu_error ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us3496_init_suit us3496_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us3496_logger_stderr endif check see path segment support compil path_seg_support ()) printf uri path segment support build est rebuild use uripars dir ""); path_segment_support return path_segment_support path_segment_support add test suit note order import must test fread fprintf null cu_add_test suit est client set server correct paramet path segment us3496_test1 null cu_add_test suit est client set server correct paramet valid path segment us3496_test2 null cu_add_test suit est client set server correct paramet multi segment path segment us3496_test3 null cu_add_test suit est client set server correct paramet valid path segment valid char us3496_test4 null cu_add_test suit est client set server correct paramet invalid path segment us3496_test5 null cu_add_test suit est client set server correct paramet path segment long us3496_test6 null cu_add_test suit est client set server correct paramet path segment equal oper string us3496_test7 null cu_add_test suit est client set server correct paramet path segment contain oper string us3496_test8 null cu_add_test suit est client set server correct paramet path segment empti string us3496_test9 null cu_add_test suit est client set server correct paramet path segment contain colon us3496_test10 null cu_add_test suit est client set server correct paramet path segment max length us3496_test11 cu_error cu_get_error (); printf (""% cu_error cu_cleanup_registri (); printf (""% cu_get_error_msg ()); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us899.c "unit test user stori client simpl enrol septemb copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ test util includ server includ openssl ssl includ openssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin server port defin server defin us899_uid estus defin us899_pwd estpwd follow cert use fqdn test ifndef win32 defin us899_cacert est cacert crt defin us899_trust_cert trustedcert crt defin us899_server_certkey est privat estservercertandkey pem defin us899 cert_cn_mismatch pem defin us899 key_cn_mismatch pem defin us899 cert_cn_mismatch_ip pem defin us899 key_cn_mismatch_ip pem defin us899 cert_cn_match_wc pem defin us899 key_cn_match_wc pem defin us899 cert_cn_mismatch_wc pem defin us899 key_cn_mismatch_wc pem defin us899 cert_san_match pem defin us899 key_san_match pem defin us899 cert_san_mismatch pem defin us899 key_san_mismatch pem defin us899 cert_san_mismatch_ip pem defin us899 key_san_mismatch_ip pem defin us899 cert_san_match_ip pem defin us899 key_san_match_ip pem defin us899 cert_san_match_wc pem defin us899 key_san_match_wc pem defin us899 cert_san_mismatch_wc pem defin us899 key_san_mismatch_wc pem els defin us899_cacert est cacert crt defin us899_trust_cert trustedcert crt defin us899_server_certkey est privat estservercertandkey pem defin us899 cert_cn_mismatch pem defin us899 key_cn_mismatch pem defin us899 cert_cn_mismatch_ip pem defin us899 key_cn_mismatch_ip pem defin us899 cert_cn_match_wc pem defin us899 key_cn_match_wc pem defin us899 cert_cn_mismatch_wc pem defin us899 key_cn_mismatch_wc pem defin us899 cert_san_match pem defin us899 key_san_match pem defin us899 cert_san_mismatch pem defin us899 key_san_mismatch pem defin us899 cert_san_mismatch_ip pem defin us899 key_san_mismatch_ip pem defin us899 cert_san_match_ip pem defin us899 key_san_match_ip pem defin us899 cert_san_match_wc pem defin us899 key_san_match_wc pem defin us899 cert_san_mismatch_wc pem defin us899 key_san_mismatch_wc pem static critical_sect logger_critical_sect static void us899_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif defin us899_valid_csr_pem ""----- begin certif request -----\ miibh dcb7g ibadbfmqsw cqydvqqgew jbvtetmbega1uecaw ku29t zs1td gf0zteh mb8ga1uecgw ysw50zxju zxqg v2lk z2l0ci bqd hkg thrk migf ma0gcsq gsib3dqeb aquaa4gnadcbi qkbg qc13w eg36v by8mq uu80skvkx0zct0lc18ka msdlw ml2ir clezbj jye sxw z9q xy4rt1v fdrrtl57 qtg t5kz ki2d2yuz dg6w qqx 4t99s lxc utf ipiaq atuqx h7fo0ti9w lsw6aqft9hib yprjz6z ha24l xwd7w aqabo aaw dqyjko zihvc naqefbqadg yeajw fazo pga4gkn7aeitep 3qj n45lszr vjmw4jl8ovm patn frqym82r vkb7sq4ddo9n dj9tg z450oq iwbuj geu uux jsj3v gxi 8ne ty4gmm nwiwh skmkqh7yvl bvgkw nfu q8m d90pr fmld hbzxcaekr ----- end certif request -----"" note array generat use xdd req der req static unsign char us899_valid_csr_d 0x30 0x82 0x01 0xa8 0x30 0x82 0x01 0x11 0x02 0x01 0x00 0x30 0x68 0x31 0x0b 0x30 0x09 0x06 0x03 0x55 0x04 0x06 0x13 0x02 0x55 0x53 0x31 0x0b 0x30 0x09 0x06 0x03 0x55 0x04 0x08 0x0c 0x02 0x6e 0x63 0x31 0x0c 0x30 0x0a 0x06 0x03 0x55 0x04 0x07 0x0c 0x03 0x73 0x73 0x73 0x31 0x0c 0x30 0x0a 0x06 0x03 0x55 0x04 0x0a 0x0c 0x03 0x64 0x64 0x64 0x31 0x0d 0x30 0x0b 0x06 0x03 0x55 0x04 0x0b 0x0c 0x04 0x66 0x6a 0x6a 0x64 0x31 0x0c 0x30 0x0a 0x06 0x03 0x55 0x04 0x03 0x0c 0x03 0x31 0x32 0x37 0x31 0x13 0x30 0x11 0x06 0x09 0x2a 0x86 0x48 0x86 0xf7 0x0d 0x01 0x09 0x01 0x16 0x04 0x6e 0x6f 0x6e 0x65 0x30 0x81 0x9f 0x30 0x0d 0x06 0x09 0x2a 0x86 0x48 0x86 0xf7 0x0d 0x01 0x01 0x01 0x05 0x00 0x03 0x81 0x8d 0x00 0x30 0x81 0x89 0x02 0x81 0x81 0x00 0xb9 0x9f 0xdd 0xd0 0xa4 0xdf 0x06 0x50 0xf5 0x4e 0x85 0x80 0xeb 0x2a 0x1e 0xff 0x3c 0x0f 0x0d 0x98 0x6e 0xfe 0x08 0x74 0xf4 0xce 0xf5 0xfd 0xf9 0x2f 0x86 0x20 0xf7 0xcc 0x08 0x05 0xce 0x98 0x69 0x5c 0x8c 0xbd 0x20 0xa7 0x28 0xf7 0xe4 0x22 0xfa 0xaf 0xe4 0x15 0xc4 0xb9 0x85 0xcb 0x0f 0x11 0xc6 0x55 0x0d 0x31 0x5c 0xfb 0x5e 0xcf 0x8e 0xd1 0xde 0x77 0x15 0x2c 0x8c 0x4e 0x88 0x4e 0x21 0xb6 0x69 0x9c 0xa7 0x7d 0x06 0xc5 0x75 0x3f 0xdc 0x18 0xf6 0x00 0x51 0xd5 0x00 0x47 0x62 0xfc 0x95 0xc8 0xd4 0xef 0x31 0x4a 0xb0 0x15 0xa9 0x50 0x04 0x6e 0x13 0x14 0xd4 0xbb 0x56 0x22 0x6f 0x3b 0x91 0xb6 0xeb 0xba 0x25 0x8f 0x12 0xea 0xfd 0xd4 0xd0 0x6d 0x02 0x03 0x01 0x00 0x01 0xa0 0x00 0x30 0x0d 0x06 0x09 0x2a 0x86 0x48 0x86 0xf7 0x0d 0x01 0x01 0x05 0x05 0x00 0x03 0x81 0x81 0x00 0x3b 0xa5 0xb4 0x97 0x6c 0xea 0xe4 0x9f 0xeb 0x56 0xca 0x7a 0x7f 0xfa 0x53 0x8d 0xee 0x6f 0x7e 0xa1 0x08 0x65 0xe0 0x05 0x5b 0x0e 0x5a 0x92 0xdb 0x3c 0xc5 0x6d 0x0d 0xcd 0x2c 0xcd 0x4d 0x10 0x2a 0x92 0x78 0x1d 0xfb 0x92 0x66 0x33 0x18 0xdd 0xf8 0x78 0xc5 0x1a 0x03 0xf9 0x58 0x9f 0x32 0x49 0xde 0xd2 0x26 0x78 0x80 0x87 0x18 0xf3 0x6d 0xc3 0x35 0x5d 0x21 0x8b 0x4c 0x8c 0x87 0xef 0xb1 0xfc 0x2c 0xec 0xdb 0xd6 0x00 0xe5 0x21 0xfa 0x34 0x5a 0x3c 0xc3 0x82 0x52 0x6f 0x81 0x2a 0x05 0xcc 0xdc 0x8a 0x51 0xf6 0x65 0x1d 0xc5 0x64 0x86 0xc1 0x28 0xf5 0x0c 0x8f 0x09 0xd4 0x84 0x8f 0x69 0x04 0x24 0x65 0xf4 0x47 0x6c 0x90 0x57 0x3c 0x04 0x4d 0x52 static unsign int 428 leav may need test case static file outfil static size_t write_func void ptr size_t size size_t nmemb void userdata size_t written written fwrite ptr size nmemb outfil return written endif static void us899_clean void static int us899_start_serv int manual_enrol int nid int st_start us899_server_port us899_server_certkey us899_server_certkey us899 test realm us899_cacert us899_trust_cert est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us899_init_suit void int ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us899_logger_stderr endif read certif cacerts_len read_binary_fil us899_cacert cacert cacerts_len return us899_clean (); start instanc est server automat enrol enabl us899_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us899_destroy_suit void st_stop (); free cacert return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey static int populate_x509_csr x509_req req evp_pkey pkey char x509_name subj setup version number x509_req_set_vers req printf (""\ unabl set x509 version ""); return add common name entri subj req subj mbstring_asc unsign char printf (""\ unabl creat x509 common name entri ""); return set public key request x509_req_set_pubkey req pkey printf (""\ unabl set x509 public key ""); return return sign x509 certif request use digest key pass return open ssl error code x509_req_sign_ctx (); static int sign_x509_req x509_req evp_pkey pkey const evp_md int evp_pkey_ctx pkctx null evp_md_ctx mctx evp_md_ctx_init mctx evp_digest sign init mctx pkctx null pkey return encod use der asn set modifi flag x509_req open ssl keep cach copi der encod data case set flag tell open ssl run asn encod rather use cach copi req_info enc modifi x509_req_sign_ctx mctx evp_md_ctx_cleanup mctx return function perform basic simpl enrol use uid pwd identifi client server use varieti test case modul static void us899_simple_enrol char char server est_error expected_enroll_rv est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null unsign char attr_data null int attr_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx server us899_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert expected_enroll_rv use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert expected_enroll_rv retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx simpl enrol basic test perform simpleenrol use user password identifi client server ident certif use client static void us899_test1 void log_func_nm us899_simple_enrol tc899 us899_server_ip est_err_non simpl enrol csr basic test perform simpleenrol use user password identifi client server ident certif use client test case use altern enrol method csr provid applic layer rather libest generat csr static void us899_test2 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null x509_req csr unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null generat csr csr x509_req_new (); cu_assert csr null populate_x509_csr csr key us899 tc2 ""); get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use altern api enrol exist csr ectx csr pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup x509_req_fre csr evp_pkey_fre key new_cert free new_cert est_destroy ectx simpl enrol csr null basic test perform simpleenrol use user password identifi client server ident certif use client test case use altern enrol method csr provid applic layer rather libest generat csr attempt pass null csr fail static void us899_test3 void est_ctx ectx evp_pkey key int int pkcs7_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null use altern api enrol null csr ectx null pkcs7_len key cu_assert est_err_no_csr cleanup evp_pkey_fre key est_destroy ectx simpl enrol csr corrupt test check x509_req helper function work propleri static void us899_test4 void x509_req csr unsign char badreq bogus request log_func_nm first tri pem decod csr badreq est_cert_format_pem cu_assert csr null next tri der decod csr badreq est_cert_format_d cu_assert csr null next tri invalid format csr badreq 999 cu_assert csr null next tri invalid csr length csr badreq 999999 est_cert_format_pem cu_assert csr null next tri valid pem encod csr csr unsign char us899_valid_csr_pem strlen us899_valid_csr_pem est_cert_format_pem cu_assert csr null csr x509_req_fre csr next tri valid der encod csr csr unsign char us899_valid_csr_d est_cert_format_d cu_assert csr null csr x509_req_fre csr attempt enrol newli creat csr alreadi sign via static void us899_test5 void est_ctx ectx evp_pkey key int int pkcs7_len x509_req csr unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null generat new csr csr x509_req_new (); cu_assert csr null populate_x509_csr csr key us899 tc5 ""); cu_assert csr null sign csr sign_x509_req csr key evp_sha256 ()); get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use altern api enrol exist csr pass ectx csr pkcs7_len key cu_assert est_err_non cleanup x509_req_fre csr evp_pkey_fre key est_destroy ectx simpl enrol fqdn mismatch hostnam test confirm mismatch host name server cert result auth failur tls layer client side static void us899_test6 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 us899_server_ip simpl enrol fqdn mismatch ipv4 address test confirm mismatch address server cert result auth failur tls layer client side note test may redund sinc address match logic occur nsname use instead common name static void us899_test7 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 us899_server_ip simpl enrol fqdn match wildcard test confirm wildcard match logic work cert use wildcard pattern cisco com server address localhost cisco com static void us899_test8 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com est_err_non simpl enrol fqdn mismatch wildcard test confirm wildcard match logic work cert use wildcard pattern googl com server address localhost cisco com static void us899_test9 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com simpl enrol fqdn match hostnam subject alt name test confirm match host name server cert subject alt name ext result auth success static void us899_test10 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com est_err_non simpl enrol fqdn mismatch hostnam subject alt name test confirm mismatch host name server cert subject alt name ext result auth failur static void us899_test11 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com simpl enrol fqdn mismatch ipv4 address subject alt name test confirm mismatch ipv4 address server cert subject alt name ext result auth failur static void us899_test12 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 us899_server_ip simpl enrol fqdn match ipv4 address subject alt name test confirm match ipv4 address server cert subject alt name ext result auth success static void us899_test13 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 us899_server_ip est_err_non simpl enrol fqdn match hostnam subject alt name wildcard test confirm hostnam match wildcard pattern server cert subject alt name ext result auth success static void us899_test14 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com est_err_non simpl enrol fqdn mismatch hostnam subject alt name wildcard test confirm hostnam mismatch wildcard pattern server cert subject alt name ext result auth fail static void us899_test15 void int log_func_nm stop exist server test case need server use differ cert st_stop (); spin new instanc est server use certif contain bogus hostnam st_start us899_server_port us899 test realm us899_cacert us899_trust_cert est exampl cnf cu_assert return us899_simple_enrol tc899 localhost cisco com simpl enrol crl check enabl client enabl crl check client side generat crl server cert revok enrol succeed static void us899_test16 void int est_ctx ectx evp_pkey key int pkcs7_len unsign char new_cert null unsign char cacrlcert null int cacrlcerts_len unsign char attr_data null int attr_len log_func_nm stop exist server test case need server use differ cert st_stop (); fqdn test complet start normal server us899_start_serv cu_assert generat crl append chain use client side ifndef win32 system openssl config est exampl cnf gencrl us899 test16_crl pem ""); sleep system cat trustedcert crt us899 test16trust crt ""); sleep system cat us899 test16_crl pem us899 test16trust crt ""); sleep els system openssl config est exampl cnf gencrl us899 test16_crl pem ""); sleep system type trustedcert crt us899 test16trust crt ""); sleep system type us899 test16_crl pem us899 test16trust crt ""); sleep endif read certif cacrlcerts_len read_binary_fil us899 test16trust crt cacrlcert cu_assert cacrlcert cacrlcerts_len return creat client context ectx est_client_init cacrlcert cacrlcerts_len est_cert_format_pem cu_assert ectx null enabl crl check client est_enable_crl ectx cu_assert est_err_non set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx test16 pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx free cacrlcert simpl enrol crl check enabl client enabl crl check client side generat crl server cert revok enrol fail static void us899_test17 void int est_ctx ectx evp_pkey key int pkcs7_len unsign char cacrlcert null int cacrlcerts_len unsign char attr_data null int attr_len log_func_nm revok server cert generat crl append chain use client side ifndef win32 system est index txt est index txt save ""); sleep system openssl config est exampl cnf revok est privat estservercertandkey pem ""); sleep system openssl config est exampl cnf gencrl us899 test17_crl pem ""); sleep system cat trustedcert crt us899 test17trust crt ""); sleep system cat us899 test17_crl pem us899 test17trust crt ""); sleep system est index txt save est index txt ""); sleep els system copi est index txt est index txt save ""); sleep system openssl config est exampl cnf revok est privat estservercertandkey pem ""); sleep system openssl config est exampl cnf gencrl us899 test17_crl pem ""); sleep system type trustedcert crt us899 test17trust crt ""); sleep system type us899 test17_crl pem us899 test17trust crt ""); sleep system copi est index txt save est index txt ""); sleep endif read certif cacrlcerts_len read_binary_fil us899 test17trust crt cacrlcert cu_assert cacrlcert cacrlcerts_len return creat client context ectx est_client_init cacrlcert cacrlcerts_len est_cert_format_pem cu_assert ectx null enabl crl check client est_enable_crl ectx cu_assert est_err_non set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_ssl_connect use simplifi api enrol csr est_client_enrol ectx test17 pkcs7_len key cu_assert est_err_ssl_connect cleanup evp_pkey_fre key est_destroy ectx free cacrlcert simpl enrol receiv retri respons client issu enrol request receiv retri respons ensur retri valu obtain client static void us899_test18 void int est_ctx ectx evp_pkey key int pkcs7_len int delay_sec time_t retry_d unsign char attr_data null int attr_len log_func_nm stop exist server test case need server manual enrol mode st_stop (); start server manual enrol mode us899_start_serv cu_assert creat client context use default cert ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us899_uid us899_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us899_server_ip us899_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx test18 pkcs7_len key cu_assert get retri durat make sure set default valu ectx delay_sec retry_d cu_assert est_err_non cu_assert delay_sec 3600 cleanup evp_pkey_fre key est_destroy ectx auth http basic auth enabl server enrol csr use valid cert uid enrol csr use valid cert valid uid enrol csr use valid cert invalid uid enrol csr use invalid cert uid enrol csr use invalid cert valid uid enrol csr use invalid cert invalid uid auth http digest auth enabl server enrol csr use valid cert uid enrol csr use valid cert valid uid enrol csr use valid cert invalid uid enrol csr use invalid cert uid enrol csr use invalid cert valid uid enrol csr use invalid cert invalid uid int us899_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us899_init_suit us899_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit ******************** import chang order test test stop est server restart use differ cert chang order fals negat may occur null cu_add_test suit simpl enrol us899_test1 null cu_add_test suit simpl enrol csr us899_test2 null cu_add_test suit simpl enrol null csr us899_test3 null cu_add_test suit simpl enrol corrupt csr us899_test4 null cu_add_test suit simpl enrol sign csr us899_test5 null cu_add_test suit simpl enrol hostnam mismatch fqdn us899_test6 null cu_add_test suit simpl enrol ipv4 mismatch fqdn us899_test7 null cu_add_test suit simpl enrol wildcard match fqdn us899_test8 null cu_add_test suit simpl enrol wildcard mismatch fqdn us899_test9 null cu_add_test suit simpl enrol hostnam match fqdn san us899_test10 null cu_add_test suit simpl enrol hostnam mismatch fqdn san us899_test11 null cu_add_test suit simpl enrol ipv4 mismatch fqdn san us899_test12 null cu_add_test suit simpl enrol ipv4 match fqdn san us899_test13 null cu_add_test suit simpl enrol wildcard match fqdn san us899_test14 null cu_add_test suit simpl enrol wildcard mismatch fqdn san us899_test15 null cu_add_test suit simpl enrol crl enabl valid server cert us899_test16 null cu_add_test suit simpl enrol crl enabl revok server cert us899_test17 null cu_add_test suit simpl enrol retri receiv us899_test18 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us4020.c "unit test user stori unit test client proxi mode test new api function verifi correct oper client proxi mode octob copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif includ errno includ fcntl defin max cmds static unsign char cacert null static int cacert len defin server_domain_nam localhost cisco com defin us4020_server_ip 127 defin 40200 defin us4020_proxy_ip 127 defin 40208 defin us4020_uid estus defin us4020_pwd estpwd ifndef win32 defin us4020_cacert est cacert crt defin us4020_cacert est cacert crt defin us4020_server_cert est privat estservercertandkey pem defin us4020_server_key est privat estservercertandkey pem defin us4020_client_cert est privat estservercertandkey pem defin us4020_client_key est privat estservercertandkey pem els defin us4020_cacert est cacert crt defin us4020_cacert est cacert crt defin us4020_server_cert est privat estservercertandkey pem defin us4020_server_key est privat estservercertandkey pem defin us4020_client_cert est privat estservercertandkey pem defin us4020_client_key est privat estservercertandkey pem static critical_sect logger_critical_sect static void us4020_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey static void us4020_clean void int us4020_start_serv int manual_enrol int nid int st_start est privat estservercertandkey pem est privat estservercertandkey pem estrealm est cacert crt trustedcert crt est exampl cnf manual_enrol nid return defin max_cmd_buf 256 defin max_pid_buf 128 static void shutdown_antinat void int char read_pid max_pid_buf char cmd max_cmd_buf int open (""./ antinat pid o_rdwr 0666 void read read_pid max_pid_buf printf pid read back read_pid snprintf cmd max_cmd_buf kill read_pid system cmd printf fail termin antinat ""); static void shutdown_haproxi void int int readbyte_count char read_pid max_pid_buf char cmd max_cmd_buf int open (""./ haproxi pid o_rdwr 0666 readbyte_count read read_pid max_pid_buf void read read_pid max_pid_buf printf pid read back read_pid snprintf cmd max_cmd_buf kill read_pid system cmd printf fail termin haproxi ""); routin call cunit initi test suit use alloc data open resourc requir test case static int us4020_init_suit void int ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us4020_logger_stderr els est_init_logg est_log_lvl_info null endif read certif cacerts_len read_binary_fil us4020_cacert cacert cacerts_len return us4020_clean (); start instanc est server automat enrol enabl us4020_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us4020_destroy_suit void st_stop (); free cacert return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv error check paramet api static void us4020_test1 void est_error e_rc est_ctx ectx null log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null attempt call api without context e_rc est_client_set_proxi null us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_no_ctx valid call e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_non set server e_rc est_client_set_proxi ectx null estus estpwd ""); cu_assert e_rc server empti string e_rc est_client_set_proxi ectx """", estus estpwd ""); cu_assert e_rc max server name char max_server_nam 123456789012345 e_rc est_client_set_proxi ectx max_server_nam estus estpwd ""); cu_assert e_rc est_err_non server name long char long_server_nam 1234567890123456 e_rc est_client_set_proxi ectx long_server_nam estus estpwd ""); cu_assert e_rc set port e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc proxi protocol invalid e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc proxi protocol invalid e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc proxi auth invalid e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc max userid char max_userid 123456789012345 e_rc est_client_set_proxi ectx us4020_proxy_ip max_userid estpwd ""); cu_assert e_rc est_err_non userid long char long_userid 1234567890123456 e_rc est_client_set_proxi ectx us4020_proxy_ip long_userid estpwd ""); cu_assert e_rc userid empti string e_rc est_client_set_proxi ectx us4020_proxy_ip """", estpwd ""); cu_assert e_rc max pwd char max_pwd 123456789012345 e_rc est_client_set_proxi ectx us4020_proxy_ip estus max_pwd cu_assert e_rc est_err_non pwd long char long_pwd 1234567890123456 e_rc est_client_set_proxi ectx us4020_proxy_ip estus long_pwd cu_assert e_rc password empti string e_rc est_client_set_proxi ectx us4020_proxy_ip estus """"); cu_assert e_rc est_destroy ectx test sock mode credenti pass static void us4020_test2 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode credenti pass static void us4020_test3 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode static void us4020_test4 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode static void us4020_test5 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode credenti static void us4020_test6 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode good credenti static void us4020_test7 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg goodcr xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx test sock mode good credenti forgotten static void us4020_test8 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg goodcr xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_ip_connect shutdown_antinat (); est_destroy ectx test sock mode bad credenti static void us4020_test9 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg badcr xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_ip_connect shutdown_antinat (); est_destroy ectx could test need certifc updat test sock mode domain name static void us4020_test8 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set sock proxi server local snprintf cmd max_4020_cmd antinat us4020 antinat cfg xml ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null socks4 e_rc est_client_set_proxi ectx us4020_proxy_ip null null cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_antinat (); est_destroy ectx endif test http proxi mode note non tunnel mode test tunnel mode work cisco est server static void us4020_test10 void int sys_rc est_error e_rc est_ctx ectx null char cmd max_4020_cmd evp_pkey key int pkcs7_len log_func_nm set http proxi server local snprintf cmd max_4020_cmd haproxi us4020 haproxi cfg haproxi pid ""); sys_rc system cmd cu_assert sys_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null e_rc est_client_set_proxi ectx us4020_proxy_ip estus estpwd ""); cu_assert e_rc est_err_non set authent mode use user password e_rc est_client_set_auth ectx us4020_uid us4020_pwd null null cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx us4020_server_ip null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr e_rc est_client_enrol ectx tc4020 pkcs7_len key cu_assert e_rc est_err_non shutdown_haproxi (); est_destroy ectx indic whether client proxi support built librari static int client_proxy_en void est_error e_rc e_rc est_client_set_proxi null null null null e_rc return els return main function set run test return cue_success success run anoth cunit error code failur int us4020_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us4020_tok_auth_cli us4020_init_suit us4020_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); ifndef win32 client proxi mode support libcurl specifi client_proxy_en ()){ add test suit null cu_add_test suit paramet check api us4020_test1 null cu_add_test suit sock mode us4020_test2 null cu_add_test suit sock mode credenti us4020_test3 null cu_add_test suit sock mode us4020_test4 null cu_add_test suit sock mode us4020_test5 null cu_add_test suit sock mode credenti us4020_test6 null cu_add_test suit sock mode good credenti us4020_test7 null cu_add_test suit sock mode forgotten credenti us4020_test8 null cu_add_test suit sock mode bad credenti us4020_test9 null cu_add_test suit sock mode domain name instead address us4020_test7 null cu_add_test suit http proxi us4020_test10 cu_cleanup_registri (); return cu_get_error (); endif return cue_success endif"
test_data/LibEST_semeru_format/test/us897.c "unit test user stori client cacert june copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est ifdef cunit includ cunit basic includ cunit autom endif includ util test util includ server max command line length generat system command defin est max cmd len defin est max certif use verifi est server grab server directori defin client cacert exampl server est cacert crt defin us897_server_port 29897 defin client_ut_pubkey ""./ defin us897_server_ip 127 defin us897_uid estus defin us897_pwd estpwd ifndef win32 defin client_ut_cacert est cacert crt defin us897_cacert est cacert crt defin us897_trust_cert trustedcert crt defin us897_server_certkey est privat estservercertandkey pem defin us897 crt defin us897 crt defin us897 singlechain_expir crt defin us897 trust chain10revok crt els defin client_ut_cacert est cacert crt defin us897_cacert est cacert crt defin us897_trust_cert trustedcert crt defin us897_server_certkey est privat estservercertandkey pem defin us897 crt defin us897 crt defin us897 singlechain_expir crt defin us897 trust chain10revok crt endif static void us897_clean void static int us897_start_serv int manual_enrol int nid int st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_cacert us897_trust_cert est exampl cnf manual_enrol nid sleep return routin call cunit initi test suit generat keypair use est client suit static int us897_init_suit void int char cmd est_ut_max_cmd_len printf start est client unit test pdb ""); gen keypair use est client test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey client_ut_pubkey printf (""% cmd system cmd start server test need talk server us897_clean (); start instanc est server us897_start_serv sleep return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us897_destroy_suit void st_stop (); return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv test case initi est client context use local cert client cert valid public key userid password static void us897_test1 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return est_init_logg est_log_lvl_info null ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey test case initi est client context use local cert expect success initi sinc local trust anchor cert mandatori static void us897_test2 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init null est_cert_format_pem cu_assert ectx null ectx est_destroy ectx cacert free cacert pkey free pkey test case initi est client context use local cert client cert valid public key userid password static void us897_test3 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey test case initi est client context use explict cert client cert valid public key userid password static void us897_test3 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error evp_pkey priv_key read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey endif test case initi est client context use explict cert client cert public key userid password static void us897_test6 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx user password null priv_key cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey test case initi est client context use explict cert client cert public key userid password static void us897_test7 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx user null null priv_key cu_assert ectx est_destroy ectx ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx null password null priv_key cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey test case test set server valid paramet static void us897_test9 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null cu_assert est_err_non ectx est_destroy ectx cacert free cacert pkey free pkey test case test set server invalid paramet static void us897_test10 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non char server_name_too_long evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non null server name est_client_set_serv ectx null us897_server_port null cu_assert server long est_client_set_serv ectx server_name_too_long us897_server_port null cu_assert port num less est_client_set_serv ectx us897_server_ip null cu_assert port num greater max est_client_set_serv ectx us897_server_ip 65536 null cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey test case test get cacert request static void us897_test11 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non unsign char retrieved_cacert null int evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid buffer contain cert cu_assert est_err_non cu_assert retrieved_cacert malloc ectx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert make sure context longer valid est client back uniniti state ectx cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey test case test get cacert request invalid input paramet static void us897_test12 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx null success obtain valid buffer contain cert cu_assert ectx est_destroy ectx cacert free cacert pkey free pkey test case test cert respons verif function verifi cacert respons contain singl certif static void us897_test13 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int stop exist server need ensur server use specif cert chain st_stop (); sleep spin new instanc est server use cert chain contain one cert st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_cacert us897_trust_cert est exampl cnf cu_assert return sleep read thestartup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_non cu_assert retrieved_cacert malloc ectx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey test case test cert respons verif function verifi cacert respons contain singl chain multipl cert static void us897_test14 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int stop exist server need ensur server use specif cert chain st_stop (); sleep spin new instanc est server use cert chain contain one cert st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_trust_cert est exampl cnf cu_assert return sleep read thestartup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_non cu_assert retrieved_cacert malloc ectx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey test case test cert respons verif function verifi cacert respons contain singl chain multipl cert miss cert chain static void us897_test15 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int stop exist server need ensur server use specif cert chain st_stop (); sleep spin new instanc est server use cert chain contain one cert st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_trust_cert est exampl cnf cu_assert return sleep read thestartup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_cacert_verif cu_assert malloc call retrieved_cacert malloc ectx retrieved_cacert est fail indic cert provid cu_assert est_err_no_certif output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey test case test cert respons verif function verifi cacert respons contain singl chain multipl cert intermedi cert expir static void us897_test16 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int stop exist server need ensur server use specif cert chain st_stop (); sleep spin new instanc est server use cert chain contain one cert st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_trust_cert est exampl cnf cu_assert return sleep read thestartup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_cacert_verif cu_assert malloc call retrieved_cacert malloc ectx retrieved_cacert est fail indic cert provid cu_assert est_err_no_certif output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey test case test cert respons verif function verifi cacert respons contain multipl chain multipl cert crl block crls ignor static void us897_test17 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int stop exist server need ensur server use specif cert chain st_stop (); sleep spin new instanc est server use cert chain contain one cert st_start us897_server_port us897_server_certkey us897_server_certkey us897 test realm us897_trust_cert est exampl cnf cu_assert return sleep read startup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_non cu_assert malloc call retrieved_cacert malloc ectx retrieved_cacert est fail indic cert provid cu_assert est_err_non output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey test case test ssl read set timeout api set min max valu valu beyond max static void us897_test18 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key unsign char retrieved_cacert null int read startup certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us897_server_ip us897_server_port null ectx cu_assert est_err_non ectx cu_assert est_err_non ectx cu_assert ectx cu_assert est_err_non proceed get cacert verifi noth get broken issu get cert request ectx success obtain valid length size cert buffer cu_assert est_err_non cu_assert malloc call retrieved_cacert malloc ectx retrieved_cacert est fail indic cert provid cu_assert est_err_non output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us897_add_suit void cu_error code cu_error ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us897_client_cacert us897_init_suit us897_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit note order import must test fread fprintf null cu_add_test suit est client init local privat key us897_test1 null cu_add_test suit est client init local us897_test2 null cu_add_test suit est client init local explicit privat key us897_test3 null cu_add_test suit est client init local explicit client privat key us897_test4 null cu_add_test suit est client init local userid password us897_test6 null cu_add_test suit est client init local userid password us897_test7 null cu_add_test suit est client init local userid password us897_test8 null cu_add_test suit est client set server correct paramet us897_test9 null cu_add_test suit est client set server paramet us897_test10 null cu_add_test suit est client cert ca_cert valid paramet us897_test11 null cu_add_test suit est client cert miss ca_cert pointer us897_test12 null cu_add_test suit est client cert verifi chain simpl chain success us897_test13 null cu_add_test suit est client cert verifi chain multipl cert success us897_test14 null cu_add_test suit est client cert verifi chain broken chain fail us897_test15 null cu_add_test suit est client cert verifi chain bad date fail us897_test16 null cu_add_test suit est client cert verifi chain multipl chain success us897_test17 null cu_add_test suit est client ssl read timeout api us897_test18 cu_error cu_get_error (); printf (""% cu_error cu_cleanup_registri (); printf (""% cu_get_error_msg ()); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us1060.c "unit test user stori tls srp support server proxi may copyright cisco system inc right reserv includ stdio includ string ifndef win includ unistd includ pthread endif includ est includ curl curl includ test util includ curl util includ server includ proxi includ openssl ssl includ openssl ifdef cunit includ cunit basic includ cunit autom endif defin server_port 31060 defin us1060_server_ip 127 defin us1060_uid estus defin us1060_pwd estpwd ifndef win32 defin us1060_cacert est cacert crt defin us1060_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us1060_vfil us1060 passwd srpv defin us1060_explicit_cert us1060 explicit cert pem defin us1060_explicit_key us1060 explicit key pem defin us1060_selfsign_cert us1060 selfsign cert pem defin us1060_selfsign_key us1060 selfsign key pem els defin us1060_cacert est cacert crt defin us1060_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us1060_vfil us1060 passwd srpv defin us1060_explicit_cert us1060 explicit cert pem defin us1060_explicit_key us1060 explicit key pem defin us1060_selfsign_cert us1060 selfsign cert pem defin us1060_selfsign_key us1060 selfsign key pem endif defin us1060_enroll_url https :// 127 31060 well known est simpleenrol defin us1060_uidpwd_good estus estpwd defin us1060_uidpwd_bad estus xxx111222 defin us1060_pkcs10_ct content type applic pkcs10 defin https :// 127 41060 well known est simpleenrol defin us1060_proxy_port 41060 defin us1060_pkcs10_req miichj ccaw4caqaw qtel mcmga1ueax mccm igj5ignsa wvud cbpbi zw1v ihn0 zxag eymbyga1uebrmpuel eoldp zgdld cbttjoy miibij anbgkqhki g9w0baqef aaocaq8amiibcg kcaqea 6juwp xxdw ckv wpdwo0i andqz fmxro leih6 nwf rsg ngc0efc l5l4nx hzom o14yq memgp hz7ob3hh npu0k81g muz rqzwmm jhxw rqob ni59oqek i1t4rk syzloow sqon mzj t0iq zdi rd8l3gj h3g eibmqfv62nt n1csu9df heg76 jahddd udjdxo3awi5s7z llz plgd4o k5k1wq ee2pqhn zxei nc94wfq xq1kyr w0povl 32mo wtqtfa7sqe2u gbxs rpa flqj e8jhoew x0ngywnvx krp kgu sbic31wvksw ps8e34pjj zavdx qidaqabo aaw dqyjko zihvc aqefbqadgg ebaazxvoor qpi mndp rzhhi d5o2yd7apbbzn rll1hml5dpgnu xy7zcyw qtxw ngyvt kja zci w7d zhvn f5ua3w ur9r2zno vr0z9y5wwn1c jrd 0xbgi6g6f ddim psf8gygc tcchba7uv0i8oi ciwf5uf f3nybo o2z beynq65 w3ygf yp0cr0ni xgkz3qh2xa2e rfe w56oejmc mjq6yx7wac2x nk3w1g6le1uinzuen msc ngnt8fa i43 ailmd ekxc30fjx a12rdh dyi fv0 pd4o5u pkt4j ritv apm ocd yawqiu2w static char log_search_target null static int search_target_found static unsign char cacert null static int cacerts_len static srp_vbase srpdb null ifdef win32 critical_sect logger_critical_sect endif simpl callback use overrid default log facil libest use look specif debug output static void us1060_logger_stderr char format va_list char t_log 1024 ifndef win32 flockfil stderr els enter critic section logger_critical_sect endif log_search_target vsnprintf t_log 1024 format strstr t_log log_search_target search_target_found fprintf stderr t_log els vfprintf stderr format fflush stderr ifndef win32 funlockfil stderr els leav critic section logger_critical_sect endif static int us1060_start_serv char cert char key int no_http_auth int enable_pop int enable_srp int enable_srp st_start_srp us1060_server_port cert key us1060 test realm us1060_cacert us1060_trust_cert est exampl cnf enable_pop us1060_vfil els st_start us1060_server_port cert key us1060 test realm us1060_cacert us1060_trust_cert est exampl cnf enable_pop no_http_auth st_disable_http_auth (); return routin call cunit initi test suit use alloc data open resourc requir test case static int us1060_init_suit void int ifdef win32 initi critic section window initi critic section logger_critical_sect endif est_init_logg est_log_lvl_info us1060_logger_stderr start instanc est server automat enrol enabl us1060_start_serv start instanc proxi srp enabl st_proxy_start_srp us1060_proxy_port us1060 proxi realm us1060_cacert us1060_trust_cert us1060_uid us1060_pwd us1060_server_ip us1060_server_port us1060_vfil read certif use client side api test cacerts_len read_binary_fil us1060_cacert cacert cacerts_len return srpdb srp_vbase_new null srpdb printf (""\ unabl alloc srp verifi databas abort !!!\ ""); srp_vbase_init srpdb us1060_vfil srp_no_error printf (""\ unabl initi srp verifi databas abort !!!\ ""); return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us1060_destroy_suit void srpdb srp_vbase_fre srpdb st_stop (); st_proxy_stop (); free cacert return typedef enum srp_off srp_on server_srp_mod typedef enum srp_good srp_bad srp_none client_srp_mod typedef enum http_off http_option http_requir server_http_mod typedef struct char test_nam char curl_cert char curl_key char curl_http_auth client_srp_mod curl_srp server_http_mod server_http server_srp_mod server_srp int expected_http_result us1060_matrix unit test matrix server side srp support curl use est client disabl server test case tri cover varieti configur potenti scenario client side variat includ curl_cert certif curl use may null curl_key key curl use may null curl_http_auth http auth credenti use curl client_srp_mod either good bad none determin srp credenti use curl server side configur server use follow variat server_http_mod http auth requir option disabl option mean occur tls auth fail server_srp_mod srp either enabl disabl server expected_http_result expect http status code receiv curl srp fail result fail tls session curl return zero case sinc http layer communic tls succeed http auth fail server return http 401 respons client enrol succeed server send http 200 respons static us1060_matrix test_matrix null null us1060_uidpwd_good srp_good http_requir srp_on 200 null null us1060_uidpwd_good srp_bad http_requir srp_on null null us1060_uidpwd_good srp_none http_requir srp_on 200 null null us1060_uidpwd_good srp_good http_option srp_on 200 null null us1060_uidpwd_good srp_bad http_option srp_on null null us1060_uidpwd_good srp_none http_option srp_on 200 null null us1060_uidpwd_good srp_good http_off srp_on 200 null null us1060_uidpwd_good srp_bad http_off srp_on null null us1060_uidpwd_good srp_none http_off srp_on 401 null null us1060_uidpwd_bad srp_good http_requir srp_on 401 null null us1060_uidpwd_bad srp_bad http_requir srp_on null null us1060_uidpwd_bad srp_none http_requir srp_on 401 null null us1060_uidpwd_bad srp_good http_option srp_on 200 null null us1060_uidpwd_bad srp_bad http_option srp_on null null us1060_uidpwd_bad srp_none http_option srp_on 401 null null us1060_uidpwd_bad srp_good http_off srp_on 200 null null us1060_uidpwd_bad srp_bad http_off srp_on null null us1060_uidpwd_bad srp_none http_off srp_on 401 null null us1060_uidpwd_good srp_good http_requir srp_off null null us1060_uidpwd_good srp_bad http_requir srp_off null null us1060_uidpwd_good srp_none http_requir srp_off 200 null null us1060_uidpwd_good srp_good http_option srp_off null null us1060_uidpwd_good srp_bad http_option srp_off null null us1060_uidpwd_good srp_none http_option srp_off 200 null null us1060_uidpwd_good srp_good http_off srp_off null null us1060_uidpwd_good srp_bad http_off srp_off null null us1060_uidpwd_good srp_none http_off srp_off 401 null null us1060_uidpwd_bad srp_good http_requir srp_off null null us1060_uidpwd_bad srp_bad http_requir srp_off null null us1060_uidpwd_bad srp_none http_requir srp_off 401 null null us1060_uidpwd_bad srp_good http_option srp_off null null us1060_uidpwd_bad srp_bad http_option srp_off null null us1060_uidpwd_bad srp_none http_option srp_off 401 null null us1060_uidpwd_bad srp_good http_off srp_off null null us1060_uidpwd_bad srp_bad http_off srp_off null null us1060_uidpwd_bad srp_none http_off srp_off 401 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_requir srp_on 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_requir srp_on 401 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_option srp_on 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_option srp_on 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_off srp_on 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_off srp_on 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_requir srp_off 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_requir srp_off 401 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_option srp_off 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_option srp_off 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_good srp_none http_off srp_off 200 us1060_explicit_cert us1060_explicit_key us1060_uidpwd_bad srp_none http_off srp_off 200 us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_requir srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_requir srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_option srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_option srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_off srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_off srp_on us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_requir srp_off us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_requir srp_off us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_option srp_off us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_option srp_off us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_good srp_none http_off srp_off us1060_selfsign_cert us1060_selfsign_key us1060_uidpwd_bad srp_none http_off srp_off worker entri test matrix read configur entri configur server client need attempt simpl enrol use curl client argument index entri tabl static void int long log_func_nm printf (""\ run matrix test test_matrix test_nam stop server restart make sure correct mode st_stop (); sleep test_matrix server_srp srp_on us1060_start_serv els us1060_start_serv cu_assert set server http auth configur switch test_matrix server_http case http_off st_disable_http_auth (); break case http_option st_enable_http_auth (); st_set_http_auth_opt (); break case http_requir st_enable_http_auth (); (); break switch test_matrix curl_srp case srp_good curl_http_post_srp us1060_enroll_url us1060_pkcs10_ct us1060_pkcs10_req test_matrix curl_http_auth null curlauth_bas null srp_user srp_pwd null null break case srp_bad curl_http_post_srp us1060_enroll_url us1060_pkcs10_ct us1060_pkcs10_req test_matrix curl_http_auth null curlauth_bas null srp_user boguspwd null null break case srp_none srp disabl test case use client certif test_matrix curl_cert us1060_enroll_url us1060_pkcs10_ct us1060_pkcs10_req test_matrix curl_http_auth test_matrix curl_cert test_matrix curl_key us1060_cacert null els curl_http_post us1060_enroll_url us1060_pkcs10_ct us1060_pkcs10_req test_matrix curl_http_auth us1060_cacert curlauth_bas null null null break cu_assert test_matrix expected_http_result test_matrix expected_http_result printf (""\ matrix test fail test_matrix test_nam int test case run test matrix static void us1060_test0 void int int test_cnt sizeof test_matrix sizeof test_matrix ]); test_cnt ++) test case verifi happi path est proxi configur srp mode client attempt use srp connect proxi server use srp perform simpl enrol oper static void us1060_test200 void long log_func_nm restart est server srp disabl st_stop (); sleep us1060_start_serv cu_assert curl_http_post_srp us1060_pkcs10_ct us1060_pkcs10_req us1060_uidpwd_good null curlauth_bas null srp_user srp_pwd null null sinc pass valid srp user password expect server respond success cu_assert 200 test case verifi simpl enrol fail est client provid bad srp password connect proxi server use srp static void us1060_test201 void long log_func_nm curl_http_post_srp us1060_pkcs10_ct us1060_pkcs10_req us1060_uidpwd_good null curlauth_bas null srp_user boguspwd null null cu_assert test case verifi simpl enrol fail est client provid bad http password srp use connect proxi server use srp static void us1060_test202 void long log_func_nm curl_http_post_srp us1060_pkcs10_ct us1060_pkcs10_req us1060_uidpwd_bad null curlauth_bas null srp_user srp_pwd null null cu_assert 401 test case verifi simpl enrol work est client provid http password srp use connect proxi server use srp http auth disabl proxi static void us1060_test203 void long log_func_nm st_proxy_http_dis curl_http_post_srp us1060_pkcs10_ct us1060_pkcs10_req null null curlauth_non null srp_user srp_pwd null null cu_assert 200 int us1060_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us1060_tls_srp server proxi )"", us1060_init_suit us1060_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit ******************** import chang order test test stop est server restart use differ cert chang order fals negat may occur null cu_add_test suit tls srp server matrix master us1060_test0 null cu_add_test suit tls srp proxi enrol srp us1060_test200 null cu_add_test suit tls srp proxi enrol bad srp pwd us1060_test201 null cu_add_test suit tls srp proxi enrol bad http pwd us1060_test202 null cu_add_test suit tls srp proxi enrol http auth us1060_test203 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us900.c "unit test user stori server csr attribut novemb copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif defin server port defin server ifndef win defin client ut_cacert est cacert crt defin client_ut_pubkey ""./ defin us900_cacert est cacert crt defin us900_trust_cert trustedcert crt defin us900_server_certkey est privat estservercertandkey pem els defin client_ut_cacert est cacert crt defin client_ut_pubkey defin us900_cacert est cacert crt defin us900_trust_cert trustedcert crt defin us900_server_certkey est privat estservercertandkey pem endif defin test_attr_pop mas gcsq gsib3dqejbw ==\ defin test_attr_nopop mhew laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg ==\ defin test_attr_nopoppop mhww laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yjko zihvc naqk defin test_attr_popad mhww laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yjko zihvc naqk defin test_attr1 mcygbi gaqebarygcsq gsib3dqejbw yfk4eeacigcwcgsafl qcag ==\ defin test_attr2 maa defin test_attr7 ==\ defin test_attr2_pop mas gcsq gsib3dqejbw ==\ defin test_attr8 mathisi bad gcsq gsib3dqejbw ==\ defin test_attr3 migsmfg ga4g3aj frexl qyxjz zsbtrvqg yxmg mi45otku yxrh exl qyxjz zsbtrvqg yxmg mi45otku yxrh exl qyxjz zsbtrvqg yxmg mi45otku ncbk yxrh bgkqhki g9w0bcqcw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebari defin test_attr4_122 mhow laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yhkw ybaqebfg ==\ defin test_attr4_122pop migfmcw ga4g3aj oinw mga4g3bbmzugfyc2ug u0vuigfz idiu otk5lj jamdagg baqsw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebarygbi gaqebarygcsq gsib3dqejbw ==\ defin test_attr5_117 mhuw ydi cmsaga4g3aw ydi eex rqyxjz zsbtrvqg yxmg mi45otku yjyiziawudbaicbgkr jamdagg baqsw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebarygbi gaqebari defin test_attr5_117pop migamcc ga4g3aj oinw mga4g3bbmuugfyc2ug u0vuigfz idiu otk5lj igcwcgsafl qcag yjki qdaw iiaqelmciga4g3ateb exl qyxjz zsbtrvqg yxmg mi45otku msbk yxrh bgcr ebaqewbgcr ebaqewbgkqhki g9w0bcqc defin test_attr6_116 mhqw ydi cmsaga4g3aw ydi eex rqyxjz zsbtrvqg yxmg mi45otku yjyiziawudbaicbgkr jamdagg baqsw iqydi bmro tgfbhcn ifnfvcbhci ljk5os4x igrhd ayhkw ybaqebfg yhkw ybaqebfg ==\ defin test_attr_244 mih1mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey qgbys gaqebarygbi gaqebari defin test_attr_245 mih2mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1bgcr ebaqewbgcr ebaqew defin test_attr_250 mih7mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw zbni ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1mtiz ndugbi gaqebarygbi gaqebari defin test_attr_250pop miibbj oinw xqydi dbg oinw qtuvbhcn ifnfvcbhci ljk5os4i idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz jamdagg baqswaw ydi bmwqtyl bhcn ifnfvcbhci ljk5os4x igrhd geg mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw ywix m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0ntey q1bgcr ebaqewbgcr ebaqewbgkqhki g9w0bcqc defin test_all_attr mihtmigbbg oinw ixeg icap8ga4g3aw ydi ecg eceh m0nty3odkw qujdrevgex rqyxjz zsbtrvqg yxmg mi45otku qfmtiz nduubtey q1fg m0nro fmtiz nduc faaaadeaaaay aaaamw aaadqaaaa1hgo amqay admanaa1bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yhkw ybaqebfg ebaa ==\ defin test_1024_nopop miid dcca2mga4g3aj gca1o ga4g3aw ydi eeiox m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtisztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw e1fqyxjz zsbtrvqg yxmg mi45otku m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otagcwcgsafl qcag yjki qdaw iiaqelmg ga4g3atfk e2jqyxjz zsbtrvqg yxmg mi45otku msbk yxrh idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mgfi mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndux m0nqyhkw ybaqebfg yhkw ybaqebfg ==\ defin test_1025_nopop miid tcca2qga4g3aj gca1 ga4g3aw ydi eeisx m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw zbni ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1mtiz ndugbi gaqebarygbi gaqebari defin test_1024_pop miiebz cca2mga4g3aj gca1o ga4g3aw ydi eeiox m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtisztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw e1fqyxjz zsbtrvqg yxmg mi45otku m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otagcwcgsafl qcag yjki qdaw iiaqelmg ga4g3atfk e2jqyxjz zsbtrvqg yxmg mi45otku msbk yxrh idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mgfi mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndux m0nqyhkw ybaqebfg yhkw ybaqebfg yjko zihvc naqk defin test_long_attr miienz cca54ga4g3aj gca5uga4g3aw ydi eem m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otatuvbhcn ifnfvcbhci ljk5os4i idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz jamdagg baqswaw ydi bmwqtyl bhcn ifnfvcbhci ljk5os4x igrhd geg mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw ywix m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0ntey q1bgcr ebaqewbgcr ebaqew defin est_ut_max_cmd_len 255 extern est_ctx ectx static void us900_clean void static int us900_start_serv int manual_enrol int nid int st_start us900_server_port us900_server_certkey us900_server_certkey us900 test realm us900_cacert us900_trust_cert est exampl cnf manual_enrol nid sleep return routin call cunit initi test suit use alloc data open resourc requir test case static int us900_init_suit void int char cmd est_ut_max_cmd_len printf start est server csr attribut unit test ""); gen keypair use est client test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey client_ut_pubkey printf (""% cmd system cmd start server test need talk server us900_clean (); start instanc est server us900_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us900_destroy_suit void st_stop (); sleep return static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr1 csr_data malloc csr_len strncpi char csr_data test_attr1 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr8 csr_data malloc csr_len strncpi char csr_data test_attr8 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr7 csr_data malloc csr_len strncpi char csr_data test_attr7 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_long_attr csr_data malloc csr_len strncpi char csr_data test_long_attr csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr_nopop csr_data malloc csr_len strncpi char csr_data test_attr_nopop csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len csr_data null return csr_data callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv test1 exercis api static void us900_test1 void int log_func_nm null ctx fail null us900 test1 cu_assert est_err_non null string pass ectx null cu_assert est_err_non zero length fail ectx us900 test1 cu_assert est_err_non length long fail ectx us900 test1 max_csrattr cu_assert est_err_non real base64 string fail ectx us900 test1 cu_assert est_err_non real base64 string pass ectx test_attr_pop strlen test_attr_pop )); cu_assert est_err_non set smallest base64 size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non set illeg small base64 size ectx test_attr7 strlen test_attr7 )); cu_assert est_err_non set size 122 ectx test_attr4_122 strlen test_attr4_122 )); cu_assert est_err_non set size 117 ectx test_attr5_117 strlen test_attr5_117 )); cu_assert est_err_non enabl st_enable_pop (); real base64 string need pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non real base64 string fail ectx us900 test1 cu_assert est_err_non set smallest size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non set size 122 ectx test_attr4_122 strlen test_attr4_122 )); cu_assert est_err_non set size 117 ectx test_attr5_117 strlen test_attr5_117 )); cu_assert est_err_non set size 116 ectx test_attr6_116 strlen test_attr6_116 )); cu_assert est_err_non set size 244 ectx test_attr_244 strlen test_attr_244 )); cu_assert est_err_non set size 245 ectx test_attr_245 strlen test_attr_245 )); cu_assert est_err_non set size 250 ectx test_attr_250 strlen test_attr_250 )); cu_assert est_err_non asn type support cisco ssl ectx test_all_attr strlen test_all_attr )); cu_assert est_err_non disabl st_disable_pop (); asn type support cisco ssl ectx test_all_attr strlen test_all_attr )); cu_assert est_err_non real base64 string pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non test2 exercis server side variat trigger static void us900_test2 void est_ctx ctx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non unsign char retrieved_cacert null int evp_pkey priv_key int csr_len unsign char csr_data null sleep log_func_nm read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ctx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ctx null est_client_set_auth ctx """", """", null priv_key cu_assert est_err_non est_client_set_serv ctx us900_server_ip us900_server_port null issu get cert request ctx success obtain valid buffer contain cert cu_assert est_err_non cu_assert retrieved_cacert malloc ctx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit clear csrattr ectx null cu_assert est_err_non get 204 data ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null real base64 string pass ectx test_attr_pop strlen test_attr_pop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_pop )); cu_assert strncmp test_attr_pop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len clear csrattr ectx null cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit set smallest size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2 )); cu_assert strncmp test_attr2 const char csr_data csr_len ectx test_attr3 strlen test_attr3 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr3 )); cu_assert strncmp test_attr3 const char csr_data csr_len clear csrattr ectx null cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len ectx test_1024_nopop strlen test_1024_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_1024_nopop )); cu_assert strncmp test_1024_nopop const char csr_data csr_len enabl test respons st_enable_pop (); ectx test_attr_pop strlen test_attr_pop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_data null cu_assert csr_len cu_assert strncmp test_attr_pop const char csr_data csr_len ectx test_1024_nopop strlen test_1024_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_1024_pop )); cu_assert strncmp test_1024_pop const char csr_data csr_len set size 122 ectx test_attr4_122 strlen test_attr4_122 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr4_122pop )); cu_assert strncmp test_attr4_122pop const char csr_data csr_len set size 117 ectx test_attr5_117 strlen test_attr5_117 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr5_117pop )); cu_assert strncmp test_attr5_117pop const char csr_data csr_len real base64 string need pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopoppop )); cu_assert strncmp test_attr_nopoppop const char csr_data csr_len real base64 string fail ectx us900 test1 cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_pop )); cu_assert strncmp test_attr_pop const char csr_data csr_len set smallest size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2_pop )); cu_assert strncmp test_attr2_pop const char csr_data csr_len set size 116 ectx test_attr6_116 strlen test_attr6_116 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 244 ectx test_attr_244 strlen test_attr_244 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 245 ectx test_attr_245 strlen test_attr_245 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 250 ectx test_attr_250 strlen test_attr_250 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_250pop )); cu_assert strncmp test_attr_250pop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopoppop )); cu_assert strncmp test_attr_nopoppop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2_pop )); cu_assert strncmp test_attr2_pop const char csr_data csr_len disabl st_disable_pop (); clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit real base64 string pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopop )); cu_assert strncmp test_attr_nopop const char csr_data csr_len asn type support cisco ssl ectx test_all_attr strlen test_all_attr )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_all_attr )); cu_assert strncmp test_all_attr const char csr_data csr_len ectx test_1025_nopop strlen test_1025_nopop )); cu_assert est_err_non ectx test_long_attr strlen test_long_attr )); cu_assert est_err_non ctx est_destroy ctx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us900_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us900_srv_csrattr us900_init_suit us900_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit csr server attribut api1 us900_test1 null cu_add_test suit csr server attribut api2 us900_test2 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us896.c "unit test user stori client csr attribut novemb copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif ifndef win defin client cacert est cacert crt defin cacert est cacert crt defin trust cert trustedcert crt defin 96_server_certkey est privat estservercertandkey pem els defin client_ut_cacert est cacert crt defin us896_cacert est cacert crt defin us896_trust_cert trustedcert crt defin us896_server_certkey est privat estservercertandkey pem endif defin client_ut_pubkey ""./ defin us896_server_port 29896 defin us896_server_ip 127 defin test_short_attr ==\ defin test_long_attr miienz cca54ga4g3aj gca5uga4g3aw ydi eem m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otatuvbhcn ifnfvcbhci ljk5os4i idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz jamdagg baqswaw ydi bmwqtyl bhcn ifnfvcbhci ljk5os4x igrhd geg mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw ywix m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0ntey q1bgcr ebaqewbgcr ebaqew defin test_corrupt_attr1 mhww laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oiex mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yjko zihvc naqk defin test_corrupt_attr2 mihtmigbbg oinw ixeg icap8ga4g3aw ydi ecg eceh m0nty3odkw qujdrevgex rqyxjz zsbtrvqg yxmg mi45otku qfm12345tiz nduubtey q1fg m0nro fmtiz nduc faaaadeaaaay aaaamw aaadqaaaa1hgo amqay admanaa1bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yhkw ybaqebfg ebaa ==\ defin est_ut_max_cmd_len 255 static void us896_clean void static int us896_start_serv int manual_enrol int nid int st_start us896_server_port us896_server_certkey us896_server_certkey us896 test realm us896_cacert us896_trust_cert est exampl cnf manual_enrol nid sleep return routin call cunit initi test suit use alloc data open resourc requir test case static int us896_init_suit void int char cmd est_ut_max_cmd_len printf start est server csr attribut unit test ""); gen keypair use est client test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey client_ut_pubkey printf (""% cmd system cmd start server test need talk server us896_clean (); start instanc est server us896_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us896_destroy_suit void st_stop (); sleep return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv test1 exercis api static void us896_test1 void int unsign char csr_data int csr_len est_ctx ctx null log_func_nm ctx csr_data csr_len cu_assert est_err_non ctx null csr_len cu_assert est_err_non ctx csr_data null cu_assert est_err_non test2 exercis respons variat trigger static void us896_test2 void est_ctx ctx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non unsign char retrieved_cacert null int evp_pkey priv_key sleep log_func_nm read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ctx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ctx null est_client_set_auth ctx """", """", null priv_key cu_assert est_err_non est_client_set_serv ctx us896_server_ip us896_server_port null issu get cert request ctx success obtain valid buffer contain cert cu_assert est_err_non cu_assert retrieved_cacert malloc ctx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert negat test requir code est server modifi allow bad corrupt attribut initi sent client ifdef negative_unit_test unsign char csr_data int csr_len clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ectx test_corrupt_attr1 strlen test_corrupt_attr1 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null ectx test_corrupt_attr2 strlen test_corrupt_attr2 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null ectx test_short_attr strlen test_short_attr )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null ectx test_long_attr strlen test_long_attr )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null endif ctx est_destroy ctx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us896_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us896_client_csrattr us896_init_suit us896_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit csr client attribut api1 us896_test1 null cu_add_test suit csr client attribut api2 us896_test2 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us894.c "unit test user stori proxi cacert novemb copyright cisco system inc right reserv proxi mode primarili server mode process certain request client pass long upstream server use client mode function case get cacert proxi mode function almost ident server mode cert respons chain pass sent repli get cacert request downstream client test code taken larg server get cacert includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ openssl ssl includ server includ proxi ifdef cunit includ cunit basic includ cunit autom endif defin pkcs req miichj ccaw4caqaw qtel mcmga1ueax mccm igj5ignsa wvud cbpbi zw1v ihn0 zxag eymbyga1uebrmpuel eoldp zgdld cbttjoy miibij anbgkqhki g9w0baqef aaocaq8amiibcg kcaqea 6juwp xxdw ckv wpdwo0i andqz fmxro leih6 nwf rsg ngc0efc l5l4nx hzom o14yq memgp hz7ob3hh npu0k81g muz rqzwmm jhxw rqob ni59oqek i1t4rk syzloow sqon mzj t0iq zdi rd8l3gj h3g eibmqfv62nt n1csu9df heg76 jahddd udjdxo3awi5s7z llz plgd4o k5k1wq ee2pqhn zxei nc94wfq xq1kyr w0povl 32mo wtqtfa7sqe2u gbxs rpa flqj e8jhoew x0ngywnvx krp kgu sbic31wvksw ps8e34pjj zavdx qidaqabo aaw dqyjko zihvc aqefbqadgg ebaazxvoor qpi mndp rzhhi d5o2yd7apbbzn rll1hml5dpgnu xy7zcyw qtxw ngyvt kja zci w7d zhvn f5ua3w ur9r2zno vr0z9y5wwn1c jrd 0xbgi6g6f ddim psf8gygc tcchba7uv0i8oi ciwf5uf f3nybo o2z beynq65 w3ygf yp0cr0ni xgkz3qh2xa2e rfe w56oejmc mjq6yx7wac2x nk3w1g6le1uinzuen msc ngnt8fa i43 ailmd ekxc30fjx a12rdh dyi fv0 pd4o5u pkt4j ritv apm ocd yawqiu2w defin us894_pkcs10_ct content type applic pkcs10 defin us894_uidpwd_good estus estpwd defin us894_uidpwd_bad estus bogus ifndef win32 defin us894_cacert est cacert crt defin us894_trusted_cert trustedcert crt defin us894 trustedcertsandcrl crt defin us894_explicit_cert us894 explicit cert pem defin us894_explicit_key us894 explicit key pem defin us894_implicit_cert us894 implicit cert pem defin us894_implicit_key us894 implicit key pem defin us894_revoked_cert us894 revok cert pem defin us894_revoked_key us894 revok key pem defin us894_selfsign_cert us894 selfsign cert pem defin us894_selfsign_key us894 selfsign key pem defin us894_cacert est cacert crt defin us894_extcert ext cacert crt defin us894_server_cert est privat estservercertandkey pem defin us894_server_key est privat estservercertandkey pem defin us894_proxy_cert est privat estservercertandkey pem chang dedic one defin us894_proxy_key est privat estservercertandkey pem static char test5_outfil filename_max us894 test5 crt static char test26_outfil filename_max us894 test26 crt static char test27_outfil filename_max us894 test27 crt els defin us894_cacert est cacert crt defin us894_trusted_cert trustedcert crt defin us894 trustedcertsandcrl crt defin us894_explicit_cert us894 explicit cert pem defin us894_explicit_key us894 explicit key pem defin us894_implicit_cert us894 implicit cert pem defin us894_implicit_key us894 implicit key pem defin us894_revoked_cert us894 revok cert pem defin us894_revoked_key us894 revok key pem defin us894_selfsign_cert us894 selfsign cert pem defin us894_selfsign_key us894 selfsign key pem defin us894_cacert est cacert crt defin us894_extcert ext cacert crt defin us894_server_cert est privat estservercertandkey pem defin us894_server_key est privat estservercertandkey pem defin us894_proxy_cert est privat estservercertandkey pem chang dedic one defin us894_proxy_key est privat estservercertandkey pem static char test5_outfil filename_max us894 test5 crt static char test26_outfil filename_max us894 test26 crt static char test27_outfil filename_max us894 test27 crt endif defin 12894 defin us894_enroll_url https :// 127 16894 well known est simpleenrol defin us894_cacert_url https :// 127 16894 well known est cacert defin 13894 defin 14894 defin 15894 defin us894_tcp_proxy_port 16894 static void us894_clean void char cmd 200 ifndef win32 sprintf cmd test5_outfil system cmd sprintf cmd test26_outfil system cmd sprintf cmd test27_outfil system cmd els sprintf cmd del test5_outfil system cmd sprintf cmd del test26_outfil system cmd sprintf cmd del test27_outfil system cmd endif int us894_start_serv int first start est server act st_start us894_server_cert us894_server_key estrealm us894_cacert us894_trusted_cert us894 est exampl cnf manual enrol disabl ecdh nid info sleep est_err_non return next start est proxi act st_proxy_start us894_tcp_proxy_port us894_proxy_cert us894_proxy_key estrealm us894_cacert us894_trusted_cert estus estpwd 127 disabl ecdh nid info sleep return routin call cunit initi test suit use alloc data open resourc requir test case static int us894_init_suit void int us894_clean (); printf (""\ start est proxi get cacert unit test ""); start instanc est server automat enrol enabl us894_start_serv (); return void us894_stop_serv st_stop (); st_proxy_stop (); sleep routin call cunit uniniti test suit use dealloc data close resourc use test case static int us894_destroy_suit void us894_stop_serv (); printf complet est proxi get cacert unit test ""); return http basic auth test case use libcurl test http basic authent work est proxi server must use simpleenrol messag sinc cacert messag requir client authent static void us894_test1 void long log_func_nm sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 http basic auth failur bad password test case use libcurl test http basic authent work est proxi server use bogus password must use simpleenrol messag sinc cacert messag requir client authent static void us894_test2 void long log_func_nm sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_bad us894_cacert curlauth_bas null null null sinc pass invalid user password expect server respond 400 cu_assert 401 http digest auth test case use libcurl test http digest authent work est proxi server must use simpleenrol messag sinc cacert messag requir client authent test also test correct oper est_proxy_set_auth static void us894_test3 void long log_func_nm st_proxy_set_auth auth_digest sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_cacert curlauth_digest null null null sinc pass valid user password expect server respond success cu_assert 200 st_proxy_set_auth auth_bas http digest auth fail test case use libcurl test http digest authent work est proxi server negat test case digest auth must use simpleenrol messag sinc cacert messag requir client authent est proxi server run listen port 8087 prior test run static void us894_test4 void long log_func_nm st_proxy_set_auth auth_digest sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_bad us894_cacert curlauth_digest null null null sinc pass invalid user password expect server respond 400 cu_assert 401 st_proxy_set_auth auth_bas static file outfil static size_t write_func void ptr size_t size size_t nmemb void userdata size_t written written fwrite ptr size nmemb outfil return written test case simpl cacert request look http 200 respons code static void us894_test5 void long char cmd 200 log_func_nm sleep outfil fopen test5_outfil ""); curl_http_get us894_cacert_url us894_cacert write_func fclose outfil expect server respond 200 cu_assert 200 sprintf cmd openssl base64 openssl pkcs7 inform der text print_cert test5_outfil system cmd cu_assert static void us894_test_sslvers const ssl_method int expect_fail bio conn ssl ssl ssl_ctx ssl_ctx null int ssl_ctx ssl_ctx_new cu_assert ssl_ctx null ssl context readi open socket server bind socket context conn open_tcp_socket_ipv4 127 16894 ""); cu_assert conn null creat ssl session context ssl ssl_new ssl_ctx ssl_set_bio ssl conn conn everyth readi let initi tls handshak ssl_connect ssl expect_fail cu_assert els cu_assert cleanup data ssl_shutdown ssl ssl_free ssl ssl_ctx_free ssl_ctx test attempt creat ssl connect est server fail tls allow static void us894_test6 void log_func_nm us894_test_sslvers sslv3_client_method (), test attempt creat tls connect est server fail tls allow static void us894_test7 void log_func_nm us894_test_sslvers tlsv1_client_method (), test attempt creat tls connect est server succeed static void us894_test8 void log_func_nm us894_test_sslvers (), test attempt creat tls connect est server succeed static void us894_test9 void log_func_nm us894_test_sslvers (), test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain succeed static void us894_test10 void long log_func_nm st_proxy_http_dis printf could set http authent callback ""); return sleep curl_http_post_cert us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_explicit_cert us894_explicit_key us894_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 st_proxy_http_dis printf could set http authent callback ""); return test attempt use client certif verifi tls client authent work certif use sign implicit cert chain succeed static void us894_test11 void long log_func_nm st_proxy_http_dis printf could set http authent callback ""); return sleep curl_http_post_cert us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_implicit_cert us894_implicit_key us894_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 st_proxy_http_dis printf could set http authent callback ""); return test attempt use revok client certif verifi crl check work tls layer fail static void us894_test12 void long log_func_nm st_proxy_stop (); st_proxy_start us894_tcp_proxy_port us894_proxy_cert us894_proxy_key estrealm us894_cacert estus estpwd 127 disabl ecdh nid info sleep curl_http_post_cert us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_revoked_cert us894_revoked_key us894_cacert null sinc client cert revok tls handshak fail est server return 401 respons cu_assert st_proxy_stop (); st_proxy_start us894_tcp_proxy_port us894_proxy_cert us894_proxy_key estrealm us894_cacert us894_trusted_cert estus estpwd 127 disabl ecdh nid info test attempt use self sign client certif verifi cert chain reject cert sign valid fail static void us894_test13 void long log_func_nm sleep curl_http_post_cert us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_selfsign_cert us894_selfsign_key us894_cacert null sinc client cert sign either local extern tls handshak fail receiv http status messag server cu_assert tls anonym cipher suit disabl test case use libcurl test est server accept anonym cipher suit client test singl cipher suit attempt simpl enrol server static void us894_test14 void long log_func_nm sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_cacert curlauth_bas adh aes128 sha256 null null tls handshak fail curl return cu_assert null http realm initi server static void us894_test15 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est server use null realm est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem null priv_key estus estpwd ""); cu_assert ctx null x509_free evp_pkey_fre priv_key null server certif initi server static void us894_test16 void unsign char cacert null int cacerts_len bio keyin evp_pkey priv_key int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est proxi use null server key est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm null priv_key estus estpwd ""); cu_assert ctx null evp_pkey_fre priv_key null server certif privat key initi server static void us894_test17 void unsign char cacert null int cacerts_len bio certin x509 int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin attempt init est proxi use null privat key est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm null estus estpwd ""); cu_assert ctx null x509_free null trust chain initi server static void us894_test18 void bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est proxi use null local chain est_init_logg est_log_lvl_info null ctx est_proxy_init null null est_cert_format_pem testrealm priv_key estus estpwd ""); cu_assert ctx null x509_free evp_pkey_fre priv_key corrupt chain initi server static void us894_test19 void bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est proxi corrupt chain est_init_logg est_log_lvl_info null ctx est_proxy_init unsign char bogus chain unsign char bogus chain est_cert_format_pem testrealm priv_key estus estpwd ""); cu_assert ctx null x509_free evp_pkey_fre priv_key test case attempt simpl cacert request use post instead get fail static void us894_test20 void long log_func_nm sleep outfil fopen test5_outfil ""); curl_http_post us894_cacert_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_cacert curlauth_bas null null null fclose outfil expect server respond 400 cu_assert 400 test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain valid http authent credenti also provid succeed static void us894_test21 void long log_func_nm sleep us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_explicit_cert us894_explicit_key us894_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain invalid http authent credenti also provid fail 401 respons static void us894_test22 void long log_func_nm sleep us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_bad us894_explicit_cert us894_explicit_key us894_cacert null sinc pass invalid user password expect server respond 401 cu_assert 401 test attempt enrol without use certif ident client use good user pwd howev est server setup perform certif authent http auth disabl fail 401 respons static void us894_test23 void long log_func_nm st_proxy_http_dis printf could set http authent callback ""); return sleep curl_http_post us894_enroll_url us894_pkcs10_ct us894_pkcs10_req us894_uidpwd_good us894_cacert curlauth_bas null null null sinc pass invalid user password expect server respond 401 cu_assert 401 st_proxy_http_dis printf could set http authent callback ""); return test paramet est_proxy_set_serv static void us894_test24 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx est_error est_rv log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin init est proxi mode est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm priv_key estus estpwd ""); cu_assert ctx null est_rv est_proxy_set_serv null 127 8080 cu_assert est_rv est_err_no_ctx est_rv est_proxy_set_serv ctx null 8080 cu_assert est_rv est_rv est_proxy_set_serv ctx 127 65536 cu_assert est_rv x509_free evp_pkey_fre priv_key test paramet static void us894_test25 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx est_error est_rv log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin init est proxi mode est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm priv_key estus estpwd ""); cu_assert ctx null est_rv ctx auth_non cu_assert est_rv est_err_bad_mod est_rv ctx auth_bas cu_assert est_rv est_err_non est_rv ctx auth_digest cu_assert est_rv est_err_non est_rv ctx 0xffffffff cu_assert est_rv est_err_bad_mod est_rv null auth_bas cu_assert est_rv est_err_no_ctx x509_free evp_pkey_fre priv_key test option set cert respons chain est_proxy_init test passthrough cach disabl mode cert respons chain static void us894_test26 void long char cmd 200 log_func_nm st_proxy_stop (); sleep restart proxi without pass cert respons chang paramet param st_proxy_start us894_tcp_proxy_port us894_proxy_cert us894_proxy_key estrealm null us894_trusted_cert estus estpwd 127 disabl ecdh nid info sleep outfil fopen test26_outfil ""); curl_http_get us894_cacert_url us894_cacert write_func fclose outfil expect server respond 200 cu_assert 200 sprintf cmd openssl base64 openssl pkcs7 inform der text print_cert test26_outfil system cmd cu_assert restart proxi includ cert respons chain st_proxy_stop (); sleep st_proxy_start us894_tcp_proxy_port us894_proxy_cert us894_proxy_key estrealm us894_cacert us894_trusted_cert estus estpwd 127 disabl ecdh nid info sleep test pass bad userid password valu est_proxy_init make sure error check static void us894_test27 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us894_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us894_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us894_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est proxi use null userid est_init_logg est_log_lvl_info null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem estrealm priv_key null estpwd ""); cu_assert ctx null ctx est_proxy_init cacert cacerts_len cacert cacerts_len est_cert_format_pem estrealm priv_key estpwd ""); cu_assert ctx null x509_free evp_pkey_fre priv_key main function set run test return cue_success success run anoth cunit error code failur int us894_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us894_proxy_cacert us894_init_suit us894_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit note order import must test fread fprintf null cu_add_test suit http basic auth us894_test1 null cu_add_test suit http basic auth fail us894_test2 null cu_add_test suit http digest auth us894_test3 null cu_add_test suit http digest auth fail us894_test4 null cu_add_test suit get certif us894_test5 null cu_add_test suit ssl fail us894_test6 null cu_add_test suit tls fail us894_test7 null cu_add_test suit tls us894_test8 null cu_add_test suit tls us894_test9 null cu_add_test suit certif auth explicit cert chain us894_test10 null cu_add_test suit certif auth implicit cert chain us894_test11 null cu_add_test suit certif auth revok cert us894_test12 null cu_add_test suit certif auth self sign cert us894_test13 null cu_add_test suit anon cipher suit disabl us894_test14 null cu_add_test suit null realm us894_test15 null cu_add_test suit null server cert us894_test16 null cu_add_test suit null server key us894_test17 null cu_add_test suit null local chain us894_test18 null cu_add_test suit corrupt local chain us894_test19 null cu_add_test suit http post cacert us894_test20 null cu_add_test suit simpl enrol good http auth good cert us894_test21 null cu_add_test suit simpl enrol bad http auth good cert us894_test22 null cu_add_test suit simpl enrol http auth cert us894_test23 null cu_add_test suit set server invalid paramet us894_test24 null cu_add_test suit set auth mode invalid paramet us894_test25 null cu_add_test suit option chain respons us894_test26 null cu_add_test suit bad userid password proxi init us894_test27 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us1005.c "unit test user stori client easi provis novemb copyright cisco system inc right reserv includ stdio includ string ifndef win includ unistd endif includ est includ test util includ server includ openssl ssl includ openssl ifdef cunit includ cunit basic includ cunit autom endif ifdef win static critic section logger critic section endif static unsign char cacert null static int cacert len defin server port defin us1005_server_ip 127 defin us1005_uid estus defin us1005_pwd estpwd ifndef win32 defin us1005_cacert est cacert crt defin us1005_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us1005_client_key us1005 implicit key pem defin us1005_client_cert us1005 implicit cert pem els defin us1005_cacert est cacert crt defin us1005_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us1005_client_key us1005 implicit key pem defin us1005_client_cert us1005 implicit cert pem endif defin us1005_csr_nopop mbqgbys gaqebarygcwcgsafl qcag ==\ static char log_search_target null static int search_target_found simpl callback use overrid default log facil libest use look specif debug output static void us1005_logger_stderr char format va_list char t_log 1024 ifndef win32 flockfil stderr els enter critic section logger_critical_sect endif log_search_target vsnprintf t_log 1024 format strstr t_log log_search_target search_target_found fprintf stderr t_log els vfprintf stderr format fflush stderr ifndef win32 funlockfil stderr els leav critic section logger_critical_sect endif static void us1005_clean void static int us1005_start_serv int manual_enrol int nid int no_http_auth int enable_pop int st_start us1005_server_port us1005 test realm us1005_cacert us1005_trust_cert est exampl cnf manual_enrol enable_pop nid no_http_auth st_disable_http_auth (); return routin call cunit initi test suit use alloc data open resourc requir test case static int us1005_init_suit void int ifdef win32 initi critic section window initi critic section logger_critical_sect endif est_init_logg est_log_lvl_info us1005_logger_stderr read certif cacerts_len read_binary_fil us1005_cacert cacert cacerts_len return us1005_clean (); start instanc est server automat enrol enabl us1005_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us1005_destroy_suit void st_stop (); free cacert return static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey function perform easi provis oper use uid pwd identifi client server use varieti test case modul static void us1005_easy_provis char char server int ba_hint int use_cert est_ctx ectx evp_pkey new_key int int pkcs7_len int ca_certs_len unsign char new_cert null evp_pkey key null unsign char key_raw int key_len unsign char cert_raw int cert_len x509 cert null bio creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null use_cert read privat key key_len read_binary_fil us1005_client_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us1005_client_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw set authent mode use user password est_client_set_auth ectx us1005_uid us1005_pwd cert key cu_assert est_err_non ba_hint ectx cu_assert est_err_non set est server address port est_client_set_serv ectx server us1005_server_port null generat new privat key new_key generate_private_key (); cu_assert new_key null attempt provis new cert ectx pkcs7_len ca_certs_len new_key cu_assert est_err_non evp_pkey_fre new_key retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non new_cert free new_cert els est_destroy ectx return retriev copi new cert est_err_non new_cert malloc ca_certs_len cu_assert new_cert null ectx new_cert cu_assert est_err_non new_cert free new_cert els est_destroy ectx return evp_pkey_fre key x509_free cert cleanup est_destroy ectx easi provis http basic auth client cert basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test1 void log_func_nm us1005_easy_provis tc1005 us1005_server_ip easi provis http basic auth hint enabl client cert basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test2 void log_func_nm us1005_easy_provis tc1005 us1005_server_ip easi provis client cert http basic auth enabl basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test3 void log_func_nm us1005_easy_provis tc1005 us1005_server_ip easi provis client cert http basic auth hint enabl basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test4 void log_func_nm us1005_easy_provis tc1005 us1005_server_ip null pointer test static void us1005_test5 void int p7len int calen evp_pkey key int est_ctx ectx log_func_nm creat valid context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null set authent mode use user password est_client_set_auth ectx us1005_uid us1005_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us1005_server_ip us1005_server_port null creat valid key pair key generate_private_key (); cu_assert key null tri null context null test2 p7len calen key cu_assert est_err_no_ctx tri null length ectx test2 null calen key cu_assert tri null cacert length ectx test2 p7len null key cu_assert tri null key ectx test2 p7len calen null cu_assert est_err_no_key evp_pkey_fre key est_destroy ectx enabl pop server enabl csr attribut server challeng password oid static void us1005_test6 void log_func_nm restart server enabl st_stop (); us1005_start_serv set csr attribut valu includ challeng password oid st_set_csrattr us1005_csr_nopop search debug appropri output confirm behavior work desir log_search_target client includ challeng password csr search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null disabl pop server enabl csr attribut server challeng password oid static void us1005_test7 void log_func_nm restart server disabl st_stop (); us1005_start_serv set csr attribut valu includ challeng password oid st_set_csrattr us1005_csr_nopop search debug appropri output confirm behavior work desir log_search_target cert request contain search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null enabl pop server enabl csr attribut server challeng password oid static void us1005_test8 void log_func_nm restart server enabl st_stop (); us1005_start_serv set csr attribut default valu includ challeng password oid st_set_csrattr null search debug appropri output confirm behavior work desir log_search_target client includ challeng password csr search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null disabl pop server enabl csr attribut server challeng password oid static void us1005_test9 void log_func_nm restart server disabl st_stop (); us1005_start_serv set csr attribut default valu includ challeng password oid st_set_csrattr null search debug appropri output confirm behavior work desir log_search_target client includ challeng password csr search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null enabl pop server disabl csr attribut server static void us1005_test10 void log_func_nm restart server enabl st_stop (); us1005_start_serv set csr attribut default valu includ challeng password oid st_set_csrattr null st_disable_csr_cb (); search debug appropri output confirm behavior work desir log_search_target client includ challeng password csr search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null disabl pop server disabl csr attribut server static void us1005_test11 void log_func_nm restart server disabl st_stop (); us1005_start_serv set csr attribut default valu includ challeng password oid st_set_csrattr null st_disable_csr_cb (); search debug appropri output confirm behavior work desir log_search_target cert request contain search_target_found provis new cert us1005_easy_provis tc1005 us1005_server_ip cu_assert search_target_found set csr attribut back default valu st_set_csrattr null next two test cae repeat test http auth disabl server easi provis client cert http basic auth disabl basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test93 void log_func_nm restart server http auth disabl st_stop (); us1005_start_serv us1005_easy_provis tc1005 us1005_server_ip easi provis client cert http basic auth hint enabl basic test perform full trust enrol sequenc cacert csrattr simpleenrol use user password identifi client server ident certif use client static void us1005_test94 void log_func_nm us1005_easy_provis tc1005 us1005_server_ip int us1005_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us1005_init_suit us1005_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit ******************** import chang order test test stop est server restart use differ cert chang order fals negat may occur null cu_add_test suit easi provis cert us1005_test1 null cu_add_test suit easi provis cert http hint us1005_test2 null cu_add_test suit easi provis cert us1005_test3 null cu_add_test suit easi provis cert http hint us1005_test4 null cu_add_test suit null pointer us1005_test5 null cu_add_test suit enabl challeng password us1005_test6 null cu_add_test suit disabl challeng password us1005_test7 null cu_add_test suit enabl challeng password us1005_test8 null cu_add_test suit disabl challeng password us1005_test9 null cu_add_test suit enabl csr disabl us1005_test10 null cu_add_test suit disabl csr disabl us1005_test11 null cu_add_test suit easi provis cert server auth us1005_test93 null cu_add_test suit easi provis cert http hint server auth us1005_test94 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us898.c "unit test user stori client enrol octob copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ est ossl util includ test util includ server includ openssl ssl includ openssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin server port defin server defin us898_uid estus defin us898_pwd estpwd ifndef win32 defin us898_cacert est cacert crt defin us898_trust_cert trustedcert crt defin us898_server_certkey est privat estservercertandkey pem defin us898_tc2_cert_txt us898 tc2 new cert txt defin us898_tc2_cert_b64 us898 tc2 new cert pkcs7b64 defin us898_tc2_cert_pk7 us898 tc2 new cert pkcs7 defin us898_tc2_cert_pem us898 tc2 new cert pem defin us898_tc10_csr us898 tc10_csr pem defin us898_tc10_key us898 tc10_key pem defin us898_tc10_cert us898 tc10_cert pem defin us898_tc11_key us898 tc11_key pem defin us898_tc11_cert us898 tc11_cert pem els defin us898_cacert est cacert crt defin us898_trust_cert trustedcert crt defin us898_server_certkey est privat estservercertandkey pem defin us898_tc2_cert_txt us898 tc2 new cert txt defin us898_tc2_cert_b64 us898 tc2 new cert pkcs7b64 defin us898_tc2_cert_pk7 us898 tc2 new cert pkcs7 defin us898_tc2_cert_pem us898 tc2 new cert pem defin us898_tc10_csr us898 tc10_csr pem defin us898_tc10_key us898 tc10_key pem defin us898_tc10_cert us898 tc10_cert pem defin us898_tc11_key us898 tc11_key pem defin us898_tc11_cert us898 tc11_cert pem static critical_sect logger_critical_sect static void us898_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif static void us898_clean void char cmd 200 temporari file creat various test case ifndef win32 sprintf cmd us898_tc2_cert_txt system cmd sprintf cmd us898_tc2_cert_b64 system cmd sprintf cmd us898_tc2_cert_pk7 system cmd sprintf cmd us898_tc2_cert_pem system cmd sprintf cmd us898_tc10_cert system cmd sprintf cmd us898_tc10_key system cmd sprintf cmd us898_tc10_csr system cmd els sprintf cmd del us898_tc2_cert_txt system cmd sprintf cmd del us898_tc2_cert_b64 system cmd sprintf cmd del us898_tc2_cert_pk7 system cmd sprintf cmd del us898_tc2_cert_pem system cmd sprintf cmd del us898_tc10_cert system cmd sprintf cmd del us898_tc10_key system cmd sprintf cmd del us898_tc10_csr system cmd endif start instanc est server run separ thread use test client side api modul static int us898_start_serv int manual_enrol int nid int st_start us898_server_port us898_server_certkey us898_server_certkey estrealm us898_cacert us898_trust_cert us898 est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us898_init_suit void int ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us898_logger_stderr endif read certif cacerts_len read_binary_fil us898_cacert cacert cacerts_len return us898_clean (); start instanc est server automat enrol enabl us898_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us898_destroy_suit void st_stop (); free cacert return static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv openssl_cert_error return print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur bio_fre bio_err return approv function perform basic simpl enrol use uid pwd identifi client server use variet test case modul static void us898_test1 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null pkcs7 null bio b64 x509 cert null stack_of x509 cert null int unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx us898 pkcs7_len key cu_assert est_err_non est_err_non return retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non convert cert x509 warn pure hackeri b64 bio_new bio_f_base64 ()); bio_new_mem_buf new_cert pkcs7_len bio_push b64 d2i_pkcs7_bio null cu_assert null bio_free_al obj_obj2nid type switch case nid_pkcs7_sign cert sign cert break case nid_pkcs7_sign envelop cert signed_and_envelop cert break default break cu_assert cert null cert return new cert one cert pkcs7 blob iter full list find cert sk_x509_valu cert cu_assert cert null wow lot work final x509 love open ssl !!!) x509 represent cert let tri enrol cert est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non cleanup cert x509_free cert evp_pkey_fre key new_cert free new_cert est_destroy ectx test case use exist expir cert attempt enrol expir cert contain sever x509 extens verifi new issu cert preserv extens use grep note preserv extens requir open ssl enabl copy_extens knob open ssl config file test suit use uniqu copi est exampl cnf static void us898_test2 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len unsign char new_cert null x509 cert null bio char cmd 200 unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key expir pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non save cert local file write_binary_fil us898_tc2_cert_b64 new_cert pkcs7_len cu_assert base decod cert respons sprintf cmd openssl base64 us898_tc2_cert_b64 us898_tc2_cert_pk7 system cmd cu_assert convert pkcs7 cert pem cert sprintf cmd openssl pkcs7 inform der print_cert us898_tc2_cert_pk7 us898_tc2_cert_pem system cmd cu_assert convert pem cert textual represent cert sprintf cmd openssl x509 text us898_tc2_cert_pem us898_tc2_cert_txt system cmd cu_assert verifi jimbob dns extens preserv grep us898_tc2_cert_txt jimbob ""); cu_assert verifi bobcat dns extens preserv grep us898_tc2_cert_txt bobcat ""); cu_assert verifi address extens preserv grep us898_tc2_cert_txt 172 ""); cu_assert verifi repudi key usag extens preserv grep us898_tc2_cert_txt repudi ""); cu_assert verifi public key preserv grep us898_tc2_cert_txt ""); cu_assert clean new_cert free new_cert est_destroy ectx test enrol api ensur grace handl null x509 cert pointer static void us898_test3 void est_ctx ectx evp_pkey key int pkcs7_len int unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol use null x509 pointer est_client_reenrol ectx null pkcs7_len key cu_assert est_err_no_cert clean evp_pkey_fre key est_destroy ectx test enrol api ensur grace handl null evp_pkey pointer static void us898_test4 void est_ctx ectx int pkcs7_len int x509 cert null unsign char cert_raw int cert_len bio unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read old cert use enrol cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol use null evp_key pointer est_client_reenrol ectx cert pkcs7_len null cu_assert est_err_no_key clean x509_free cert est_destroy ectx test attempt enrol corrupt cert public key cert corrupt static void us898_test5 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key corrupt pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert corrupt pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert clean est_destroy ectx test attempt enrol expir cert est server configur manual approv server send back retri respons static void us898_test6 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm stop server st_stop (); restart server manual approv enabl us898_start_serv cu_assert creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key expir pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert clean est_destroy ectx stop server st_stop (); restart server manual approv disabl us898_start_serv cu_assert verifi bogus user password fail use http basic auth static void us898_test7 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx hoagi chili null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key expir pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_auth_fail est_destroy ectx verifi good user password pass use http digest auth static void us898_test8 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm enabl http digest authent (); creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us898_uid us898_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key expir pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non est_destroy ectx enabl http basic authent (); verifi bogus user password fail use http digest auth static void us898_test9 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len int http_status log_func_nm enabl http digest authent (); creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx jdoe panther null null cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null read privat key key_len read_binary_fil us898 key expir pem key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898 cert expir pem cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_auth_fail check http status code reenrol oper http_status ectx cu_assert http_status 401 est_destroy ectx enabl http basic authent (); verifi server fail authent client send valid ident cert provid http auth credenti static void us898_test10 void char cmd 200 int est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm creat csr sprintf cmd openssl req new node newkey rsa 2048 keyout subj 127 config est exampl cnf us898_tc10_csr us898_tc10_key system cmd cu_assert sign csr use local sprintf cmd openssl batch config est exampl cnf infil us898_tc10_cert us898_tc10_csr system cmd cu_assert creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null read privat key key_len read_binary_fil us898_tc10_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898_tc10_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw set authent mode use certif http auth credenti provid est_client_set_auth ectx null null cert key cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol cert fail provid valid http auth credenti est_client_enrol ectx us898 pkcs7_len key cu_assert est_err_auth_fail enrol cert work sinc provid valid cert identifi http auth requir enrol even server enabl http auth est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non est_destroy ectx verifi server fail authent client send expir identi cert use valid http auth credenti static void us898_test11 void int est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null read privat key key_len read_binary_fil us898_tc11_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us898_tc11_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw set authent mode use expir certif valid http auth credenti est_client_set_auth ectx us898_uid us898_pwd cert key cu_assert est_err_non set est server address port est_client_set_serv ectx us898_server_ip us898_server_port null get latest csr attribut ectx attr_data attr_len cu_assert est_err_ssl_connect enrol cert est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_ssl_connect est_destroy ectx int us898_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us898_client_reenrol us898_init_suit us898_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit simpl enrol enrol us898_test1 null cu_add_test suit enrol expir cert extens us898_test2 null cu_add_test suit enrol use null cert us898_test3 null cu_add_test suit enrol use null key us898_test4 null cu_add_test suit enrol use corrupt x509 cert us898_test5 null cu_add_test suit enrol retri us898_test6 null cu_add_test suit enrol invalid uid pwd basic us898_test7 null cu_add_test suit enrol valid uid pwd digest us898_test8 null cu_add_test suit enrol invalid uid pwd digest us898_test9 null cu_add_test suit enrol valid certif http auth us898_test10 null cu_add_test suit enrol expir certif http auth us898_test11 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us3512.c "unit test uri path segment support server april copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util ifdef cunit includ cunit basic includ cunit autom endif includ util test util includ server includ proxi includ src est est locl extern char tst srvr path seg enrol extern char tst srvr path seg cacert extern char tst srvr path seg csrattr extern char []; extern char []; static int path_segment_support max command line length generat system command defin est_ut_max_cmd_len 256 defin us3512_server_port 29496 defin us3512_server_ip 127 defin us3512_uidpwd_good estus estpwd defin us3512_uid estus defin us3512_pwd estpwd ifndef win32 defin us3512_cacert est cacert crt defin us3512_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us3512_proxy_cert est privat estservercertandkey pem defin us3512_proxy_key est privat estservercertandkey pem defin us3512_cacert est cacert crt certif use verifi est server grab server directori defin client_ut_cacert ""../../ exampl server est cacert crt defin client_ut_cacert est cacert crt defin client_ut_pubkey ""./ els defin us3512_cacert est cacert crt defin us3512_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us3512_proxy_cert est privat estservercertandkey pem defin us3512_proxy_key est privat estservercertandkey pem defin us3512_cacert est cacert crt certif use verifi est server grab server directori defin client_ut_cacert ""../../ exampl server est cacert crt defin client_ut_cacert est cacert crt defin client_ut_pubkey endif defin us3512_enroll_url_ba https :// 127 29496 well known est cacert somestr simpleenrol defin https :// 127 29496 well known est cacert -\\ somestr simpleenrol defin https :// 127 29496 well known est simpleenrol defin us3512_pkcs10_ct content type applic pkcs10 defin miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x defin 16894 defin path_seg_valid somestr defin somestring1 somestring2 defin path_seg_is_oper cacert defin cacertssomestr defin path_seg_max defin path_seg_too_long defin https :// 127 16894 well known est path_seg_valid simpleenrol defin https :// 127 16894 well known est path_seg_too_long simpleenrol defin https :// 127 16894 well known est path_seg_max simpleenrol defin https :// 127 16894 well known est simpleenrol defin https :// 127 16894 well known est path_seg_is_oper simpleenrol defin https :// 127 16894 well known est simpleenrol defin https :// 127 16894 well known est path_seg_valid cacert defin us3512_pkcs10_req miichj ccaw4caqaw qtel mcmga1ueax mccm igj5ignsa wvud cbpbi zw1v ihn0 zxag eymbyga1uebrmpuel eoldp zgdld cbttjoy miibij anbgkqhki g9w0baqef aaocaq8amiibcg kcaqea 6juwp xxdw ckv wpdwo0i andqz fmxro leih6 nwf rsg ngc0efc l5l4nx hzom o14yq memgp hz7ob3hh npu0k81g muz rqzwmm jhxw rqob ni59oqek i1t4rk syzloow sqon mzj t0iq zdi rd8l3gj h3g eibmqfv62nt n1csu9df heg76 jahddd udjdxo3awi5s7z llz plgd4o k5k1wq ee2pqhn zxei nc94wfq xq1kyr w0povl 32mo wtqtfa7sqe2u gbxs rpa flqj e8jhoew x0ngywnvx krp kgu sbic31wvksw ps8e34pjj zavdx qidaqabo aaw dqyjko zihvc aqefbqadgg ebaazxvoor qpi mndp rzhhi d5o2yd7apbbzn rll1hml5dpgnu xy7zcyw qtxw ngyvt kja zci w7d zhvn f5ua3w ur9r2zno vr0z9y5wwn1c jrd 0xbgi6g6f ddim psf8gygc tcchba7uv0i8oi ciwf5uf f3nybo o2z beynq65 w3ygf yp0cr0ni xgkz3qh2xa2e rfe w56oejmc mjq6yx7wac2x nk3w1g6le1uinzuen msc ngnt8fa i43 ailmd ekxc30fjx a12rdh dyi fv0 pd4o5u pkt4j ritv apm ocd yawqiu2w static int x509 cur_cert int openssl_cert_error static void us3512_clean void static int us3512_start_serv int manual_enrol int nid int st_start_nocacert us3512_server_port us3512 test realm us3512_cacert us3512_trust_cert est exampl cnf manual_enrol nid sleep next start est proxi act us3512_proxy_cert us3512_proxy_key estrealm us3512_cacert us3512_trust_cert estus estpwd 127 us3512_server_port disabl ecdh nid info sleep return static int path_seg_support void est_ctx ectx unsign char cacert null int cacerts_len est_error est_err_non sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert ectx est_client_init cacert cacerts_len est_cert_format_pem est_client_set_serv ectx us3512_server_ip us3512_server_port test_seg ""); est_err_non return els return return routin call cunit initi test suit generat keypair use est client suit static int us3512_init_suit void int est_init_logg est_log_lvl_info null char cmd est_ut_max_cmd_len printf start est server path segment unit test ""); path_segment_support printf uri path segment support build est rebuild use uripars dir ""); return gen keypair use est client test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey client_ut_pubkey printf (""% cmd system cmd start server test need talk server us3512_clean (); start instanc est server us3512_start_serv sleep return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us3512_destroy_suit void st_stop (); st_proxy_stop (); return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv saniti check server side path segment process simpl enrol direct server path segment outcom pass static void us3512_test1 void long log_func_nm curl_http_post us3512_pkcs10_ct us3512_uidpwd_good us3512_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey function perform basic simpl enrol use uid pwd identifi client server use varieti test case modul static void us3512_simple_enrol char char server est_error expected_enroll_rv char path_seg est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null unsign char attr_data null int attr_len unsign char cacert null int cacerts_len read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3512_uid us3512_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx server us3512_server_port path_seg generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert expected_enroll_rv use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert expected_enroll_rv retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx taken us899 test1 simpl enrol includ path segment uri path segment test verifi client includ configur path segment proper send verifi server correct pars valid path segment pass simpl enrol static void us3512_test2 void log_func_nm char path_seg path_seg memset memset us3512_simple_enrol tc3512 us3512_server_ip est_err_non path_seg cu_assert strcmp path_seg cu_assert strcmp path_seg taken us898 test1 simpl enrol includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass simpl enrol well auth callback static void us3512_test3 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null pkcs7 null bio b64 x509 cert null stack_of x509 cert null int unsign char attr_data null int attr_len char path_seg unsign char cacert null int cacerts_len log_func_nm read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3512_uid us3512_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us3512_server_ip us3512_server_port path_seg generat privat key key generate_private_key (); cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx us898 pkcs7_len key cu_assert est_err_non est_err_non return retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non convert cert x509 warn pure hackeri b64 bio_new bio_f_base64 ()); bio_new_mem_buf new_cert pkcs7_len bio_push b64 d2i_pkcs7_bio null cu_assert null bio_free_al obj_obj2nid type switch case nid_pkcs7_sign cert sign cert break case nid_pkcs7_sign envelop cert signed_and_envelop cert break default break cu_assert cert null cert return new cert one cert pkcs7 blob iter full list find cert sk_x509_valu cert cu_assert cert null wow lot work final x509 love open ssl !!!) x509 represent cert let tri enrol cert memset memset est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non cu_assert strcmp path_seg cu_assert strcmp path_seg cleanup cert x509_free cert evp_pkey_fre key new_cert free new_cert est_destroy ectx taken us897 test11 cacert server includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass cert callback static void us3512_test4 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non unsign char retrieved_cacert null int evp_pkey priv_key char path_seg sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3512_server_ip us3512_server_port path_seg clear global prove path segment made applic layer cal back function memset issu get cert request ectx success obtain valid buffer contain cert cu_assert est_err_non cu_assert verifi path segment made way callback function applic layer cu_assert strcmp path_seg retrieved_cacert malloc ectx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey taken us898 test1 csrattribut includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass csr attribut callback static void us3512_test5 void est_ctx ectx evp_pkey key int unsign char new_cert null x509 cert null unsign char attr_data null int attr_len char path_seg unsign char cacert null int cacerts_len log_func_nm read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3512_uid us3512_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us3512_server_ip us3512_server_port path_seg generat privat key key generate_private_key (); cu_assert key null clear global prove path segment made applic layer cal back function memset issu get cert request ectx attr_data attr_len success obtain valid buffer contain cert cu_assert est_err_non verifi path segment made way callback function applic layer cu_assert strcmp path_seg cleanup cert x509_free cert evp_pkey_fre key new_cert free new_cert est_destroy ectx test flow path segment proxi mode valid path segment simpl enrol static void us3512_test6 void long log_func_nm sleep memset curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null cu_assert strcmp path_seg_valid sinc pass valid user password expect server respond 200 cu_assert 200 test flow path segment proxi mode path segment set maximum size static void us3512_test7 void long log_func_nm sleep curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null sinc pass path segment long get caught proxi 400 return cu_assert 200 test flow path segment proxi mode path segment larg static void us3512_test8 void long log_func_nm sleep curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null sinc pass path segment long get caught proxi 400 return cu_assert 400 test segment oper path static void us3512_test9 void long log_func_nm sleep curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null sinc pass path segment equal oper get 400 return cu_assert 400 test segment oper path static void us3512_test10 void long log_func_nm sleep curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null sinc pass path segment equal oper get 400 return cu_assert 400 test segment contain valid oper string within case front valid path segment test pass static void us3512_test11 void long log_func_nm sleep memset memset curl_http_post us3512_pkcs10_ct us3512_pkcs10_req us3512_uidpwd_good us3512_cacert curlauth_bas null null null cu_assert strcmp cu_assert strcmp sinc pass path segment equal oper get 400 return cu_assert 200 taken us897 test11 cacert server includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass cert callback static void us3512_test12 void est_ctx ectx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non unsign char retrieved_cacert null int evp_pkey priv_key char path_seg sleep read certif cacerts_len read_binary_fil client_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key client_ut_pubkey priv_key null printf (""\ error read privat key file client_ut_pubkey return ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null est_client_set_auth ectx """", """", null priv_key cu_assert est_err_non est_client_set_serv ectx us3512_server_ip path_seg clear global prove path segment made applic layer cal back function memset issu get cert request ectx success obtain valid buffer contain cert cu_assert est_err_non cu_assert verifi path segment made way callback function applic layer cu_assert strcmp path_seg retrieved_cacert malloc ectx retrieved_cacert output retriev cert compar retrieved_cacert printf (""\ retriev cert buffer retrieved_cacert printf retriev cert buffer length free retrieved_cacert ectx est_destroy ectx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us3512_add_suit void cu_error code cu_error ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us3512_init_suit us3512_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); check see path segment support compil path_seg_support ()) printf uri path segment support build est rebuild use uripars dir ""); path_segment_support return path_segment_support path_segment_support add test suit note order import must test fread fprintf null cu_add_test suit est client simpl enrol path segment us3512_test1 null cu_add_test suit est server simpl enrol path segment us3512_test2 null cu_add_test suit est server simpl enrol path segment us3512_test3 null cu_add_test suit est server cacert path segment us3512_test4 null cu_add_test suit est server csrattr path segment us3512_test5 null cu_add_test suit est server est proxi path segment us3512_test6 null cu_add_test suit est server est proxi path segment max us3512_test7 null cu_add_test suit est server est proxi path segment long us3512_test8 null cu_add_test suit est server est proxi path segment oper us3512_test9 null cu_add_test suit est server est proxi path segment contain mani segment us3512_test10 null cu_add_test suit est server est proxi path segment contain oper us3512_test11 null cu_add_test suit est server est proxi path segment valid cacert us3512_test12 cu_error cu_get_error (); printf (""% cu_error cu_cleanup_registri (); printf (""% cu_get_error_msg ()); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us1883.c "unit test user stori enabl token auth mode est client march copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif includ errno static unsign char cacert null static int cacert len defin server defin us1883_tcp_port 29001 follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x defin miiezj ccak4caqaw itepma0ga1ueaww gskp uzxn0mq4w daydvqqfew mdaw mtcc dqyjko zihvc naqebbqadgg ipadccago cgg ibalf hxqz obi kwdf x8sa z4l3 n1jyr cp4xmi qit y2p iigl ht7t1wz0lo9uo0u b7b xki8fgq sm1j roe5lw dih tjd g4b705c6xm d3mh436de9d4gzpj a2qur si9 gvnvg u0zowjfu9g y3i ndfsj o9u0e2mf zwwr8m72g bqzvb ddpn4bdw la9tk q2rsxf3h2d7b n2dnsh nsyx ix89d9u c6feg hqx hinuod zze an3yu qmbu fwoh el9ub8qu9gub2mjur ynrqnii7 nduvq5 ujkhj nwz ih7labda ce0ju kbay uzzkrqo vk6b wzz fs4d ytn95 vvov95md5d1eok xw3iih7grjygt wn5e4 yo68lonbf7ue24vg eie f6j0b falxw n15s7p ialk gf7cubit rhb b3k udr8yp kdqx hnm wbxy7zvk4t8k7168c nwsol net tk4bto ujbn wp8uq38yoi6389u24gm jeet dy1mj8ha4pz ftm uwq etox2kub gwc9v wfi5bx e2vvet gnsy2eqezpvwsc cy0 o3fu06co etr7ekr ngap ddez vti p9npe5q18azu t9ngo ox3pqr cpg1bdn6z1ue2t sdd knfmnmwq yin zp9mxh tz8ra kvsclv9jag mbaagg adanbgkqhki g9w0baqufaaocag eajmw z4iub ush5w qbfs yt4sxt ztvun6qx0 nmtzz quoq o79kx dkpzs lnv hkm fqcx a7g ngb ap5 md92dghc xoq gkcl zdm gj2o req zwzv tdro4z p1yen5vg yz7sa nxze8w pg2whl qvk vcp hn3euif bgi2reo f7xq5cau4ut q1h4g hax67yww8 jmypi gga0ad0z8ruicl qtlu el1f nsr4zll opwn rdxvff xo7g xvir4ihvhnwj6km dzyk0ovat2ms5a guc mdn6jm8kib nbvh5fgk bvqopsngkwn eoj0rsa ksx t5efm oxm9p ae3r vog o4t8w z6dquqy budmg kig8o r5hawber8yw qdi bgg pkzdpm yi2tef zvp g7qlj nsj5twe rknggh ucu3u 1s0r gqg y1s9ggi dsif xj4nci rgq xpnrf syv3ki ixt ab6tjk ubt vfo2krfq nxu4lb es7w es7 zzpzn gsq whn efevi5c5wprnpv vn6r kh0f auk 9ek4knzwf yf8 xn5q otgd4o luusg fdjsq nh6a1mlmx6cn defin us1883_enroll_url_ba https :// 127 29001 well known est simpleenrol defin us1883_pkcs10_ct content type applic pkcs10 defin us1883_uidpwd_good estus estpwd ifndef win32 defin us1883_cacert est cacert crt defin us1883_cacert est cacert crt defin us1883_server_cert est privat estservercertandkey pem defin us1883_server_key est privat estservercertandkey pem defin us1883_client_cert est privat estservercertandkey pem defin us1883_client_key est privat estservercertandkey pem els defin us1883_cacert est cacert crt defin us1883_cacert est cacert crt defin us1883_server_cert est privat estservercertandkey pem defin us1883_server_key est privat estservercertandkey pem defin us1883_client_cert est privat estservercertandkey pem defin us1883_client_key est privat estservercertandkey pem static critical_sect logger_critical_sect static void us1883_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif static void us1883_clean void static int us1883_start_serv int manual_enrol int nid int st_start us1883_tcp_port est privat estservercertandkey pem est privat estservercertandkey pem estrealm est cacert crt trustedcert crt est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us1883_init_suit void int ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us1883_logger_stderr endif read certif cacerts_len read_binary_fil us1883_cacert cacert cacerts_len return us1883_clean (); start instanc est server automat enrol enabl us1883_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us1883_destroy_suit void st_stop (); free cacert return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey defin good_token ww91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3u defin different_token v2vsb cwg ssd2zsbnb3qgd g8gcn ihrv igtl zxag jvb sboa wrpbic nck zcbjj20g ym91bm qgd g8ga2vlc cbvbi bya wrpbic nck zcbjj3zl igdvd cbvbm ugb w9i zsbza wx2zxig zg9sb gfi dqp xqg ssdt ig5vd cbnb25u ysbs zxqg j2vt ignhd gno ig1l lcbubw0ktm90igdvbm5h igxld zw0g y2f0y2ggd ghl ig1p zg5p z2h0ihjp zgvi defin null_token null defin long_token ssbj yw4nd cbh z3jl zsb0bi bka xnh z3jl zsanck z2h0a w5n igxpa2ug ssdt igzp z2h0a w5n igzvci bsa wzl ia0kvghl sdi zsbvbmx5ihdvcm igj1d cb0a gv5ign1d cbsa wtl igeg ymxh zgug dqp td2lu z2lu b3a wrl ihdpd ggg ywxs ig9m ig15ig1p z2h0ia0kdqp cb5zwfo lcbjigd1zxnz igl0j3mg ywxs ig9m ihro yxqg y29m lcb0a gf0j3mg z290ig15ig1pbm qga w4g ysb3a glyb canckknb sbzd glsb cbjd xnza w5n igfu zcbia xrja glu bhbm qgd ghlcm ywlu j3qgbm9ib2r5ighlcm dqo nck9o ihll ywgs ihlvd sbkb24nd cbo yxzl ihrv ighvb gxlci bjighl yxige w91ia0kssdt ihn0yw5ka w5n ihjp z2h0ighlcm vza wrl ihlvd sanck9o lca5osbza gfk zxmgb2yg y3jhenk ieknb sa5osbza gfk zxmgb2yg y3jhenkg dqp dcm f6e swg y3jhenk igni yxp5lcbjcm f6e sancg0kug91ci bhbm90a gvi igrya w5r lcbt ywtl igl0igeg zg91ymxl igzvci zsanck1h wjl iekg y2fu igrya w5r ihroa xmg yxdhe sanckl0j3mgbm v2zxig ihdo zw4gd ghle sbwd wxs ig91d cb0a gug z3vu ia0kqm vhd cb5b3ug ymxh y2sg yw5k igjsd wus igjv sancllvd sbnb3r0ysbw yxks ihlvd sbnb3r0ysbw yxkg dqo nck9o lcb3a gvi zsb0a guga gvsb cbhb sbjpi bjighvc gug yxqgb gvhc3qg ssbo ywqg ia0kssdt ihn0d w1ib glu b0a hjvd wdo ie5ldi bpcmxl yw5z ig9o lcb0bi b0a gugcmlza w5n ihn1bi ancg0kt2gg wvha cwge w91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3ug dqp jj20gc3rhbm rpbmcgcmlna hqga gvi zsbi zxnp zguge w91ia0kt2g idk5ihno ywrlci bjcm f6e swg ssdt idk5ihno ywrlci bjcm f6e sanck yxp5lcbjcm f6e swg y3jhenk igni yxp5ia0kdqp mb3jk ighhdm ugb wvi y3kgb24gb wug dqp ob3zlbn ig51zxzh ihrvbm9z igrl igxv y28g dqo nckkgbm zcbzb21l ihbl ywnl lcbqd xn0ihnvb wugcm vsa wvm ia0krn jvb sb0a glz ihzva wnl lcbra wxsa w5n ig1l ia0kww91ihn0yxjl igf0ig1l lcbhbm qge w91igd yxjl igf0ig1l ia0kqwx ihroa xmgc gfpbi bpd cdz igfsb cb0a gugc2ft zswga xqnci bhb gwga w5z yw5l ia0kkhlvd sbz zwup ia0kdqp jci b0a glz ihjl ywxse sbo yxbw zw5pbmcgb3ig zglk iekgb wfr zsbpd cbhb gwgd ia0kssdt igjvd w5k igzvci bda gf0d gfob29ja gvl ig9u igegd hvybmlw ihryd wnr ia0kdqp cb5zwfo lcb5b3ug zg9u j3qga gf2zsb0bi bob2x zxig ssbo zwfi ihlvd sanckknb sbzd gfu zglu bya wdod cbo zxjl igjlc2lk zsb5b3ug dqp cwg otkgc2hh zgvz ig9m igni yxp5lcbjj20g otkgc2hh zgvz ig9m igni yxp5ia0kq3jhenk igni yxp5lcbjcm f6e swg y3jhenkg dqo nck ihlvd sdi zsbjcm f6e sb5b3uncm y3jhenkg dqp ib2xk ig15igzl zxqs igzl zxqgd g8gd ghl igzpcm dqp zb3uga g9s zcbte sbm zwv0ihrv ihro zsbma xjl ia0kssbu zxzlci ywlk iekgd2fz igrvd24gd2l0a cb5b3u char test_token ww91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3u =""; int int applic layer callback function return token base authent credenti call regist est client use (). test function requir set global valu order make callback oper way test case want tell function forc respons code error test_token pointer hard code string token string return callback must provid token credenti heap base buffer ownership buffer implicit transfer client librari upon return est_http_auth_hdr auth_credenti char token_ptr null int token_len cu_assert auth_credenti mode auth_token report callback call see test request forc error respons code callback return auth_credenti mode auth_token test_token set anyth need alloc space heap copi valu test_token null token_len strlen test_token use strlen string larg need test est client token_len printf (""\ error determin length token string use credenti ""); return token_ptr malloc token_len token_ptr null printf (""\ error alloc token string use credenti ""); return strncpi token_ptr test_token strlen test_token )); token_ptr token_len made far token_ptr point string contain token return assign return success auth_credenti auth_token token_ptr return return token base one instead return basic credenti userid password est_http_auth_hdr auth_credenti cu_assert auth_credenti mode auth_bas report callback call see test request forc error respons code callback return auth_credenti mode auth_bas auth_credenti user malloc sizeof estus "")); strncpi auth_credenti user estus sizeof estus "")); auth_credenti pwd malloc sizeof estpwd "")); strncpi auth_credenti pwd estpwd sizeof estpwd "")); return return basic base one instead verfi auth_mod pass digest est_http_auth_hdr auth_credenti cu_assert auth_credenti mode auth_digest report callback call see test request forc error respons code callback return auth_credenti mode auth_digest auth_credenti user malloc sizeof estus "")); strncpi auth_credenti user estus sizeof estus "")); auth_credenti pwd malloc sizeof estpwd "")); strncpi auth_credenti pwd estpwd sizeof estpwd "")); return return test api exercis paramet static void us1883_test1 void est_error e_rc est_ctx ectx null log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null forgot specifi paramet context get caught e_rc null null cu_assert e_rc est_err_no_ctx valid call e_rc ectx cu_assert e_rc est_err_non attempt reset callback function e_rc ectx null cu_assert e_rc est_err_non est_destroy ectx us1883_simple_enrol use test case perform simpl enrol static void us1883_simple_enrol char char server est_error expected_enroll_rv auth_credentials_cb callback est_ctx ectx evp_pkey key est_error int pkcs7_len unsign char new_cert null est_error e_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null e_rc ectx callback cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server us1883_tcp_port null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert expected_enroll_rv cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx perform simpl enrol first order get valid cert perform reenrol simpl enrol need success current done use basic mode est server yet token base support pdb note server side token support implement function option updat token mode first enrol absolut necessari sinc purpos test reenrol initi enrol need get cert static void char char server est_error expected_enroll_rv auth_credentials_cb callback est_ctx ectx evp_pkey key est_error int pkcs7_len unsign char new_cert null pkcs7 null bio b64 x509 cert null stack_of x509 cert null int est_error e_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null make sure server current basic auth mode (); e_rc ectx cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server us1883_tcp_port null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non est_destroy ectx ectx null creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null cert switch server token mode (); e_rc ectx callback cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server us1883_tcp_port null attempt reenrol token mode convert cert x509 warn pure hackeri pdb convers code come test case b64 bio_new bio_f_base64 ()); bio_new_mem_buf new_cert pkcs7_len bio_push b64 d2i_pkcs7_bio null cu_assert null bio_free_al obj_obj2nid type switch case nid_pkcs7_sign cert sign cert break case nid_pkcs7_sign envelop cert signed_and_envelop cert break default break cu_assert cert null cert return new cert one cert pkcs7 blob iter full list find cert sk_x509_valu cert cu_assert cert null pdb note moment expect fail sinc server yet understand request token authent 1884 complet assert begin fail need chang pass respons est_client_reenrol ectx cert pkcs7_len key cu_assert expected_enroll_rv cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx test2 applic layer regist callback caus http aithent header empti token credenti test applic layer regist callback est client get challeng find callback regist goe credenti store context noth note way preload credenti flow alway work enrol sent token credenti server fail give certif static void us1883_test2 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); tell server token check st_set_token good_token set est client perform simpl enrol pass callback function catch handl request token auth enrol better fail due miss credenti us1883_simple_enrol tc1883 us1883_server_ip est_err_auth_fail null callback never regist invok cu_assert test3 applic layer regist callback set credenti invok result previous test test applic layer regist callback est client get challeng call callback get back empti credenti structur end send http auth header credenti note way preload credenti flow alway work enrol sent token credenti server fail give certif static void us1883_test3 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); tell server token check st_set_token good_token test_token null_token set est client perform simpl enrol regist token base callback set pass back token enrol better fail due miss credenti us1883_simple_enrol tc1883 us1883_server_ip est_err_auth_fail callback call cu_assert test4 good token sent server accept cert generat return test applic layer regist callback respond valid token enrol sent token credenti server set match token send back cert static void us1883_test4 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); tell server token check st_set_token good_token test_token good_token set est client perform simpl enrol enrol succeed us1883_simple_enrol tc1883 us1883_server_ip est_err_non callback call cu_assert test est client receiv token auth challeng test applic layer regist callback respond fail return code static void us1883_test5 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); forc callback give fail return code test_token good_token set est client perform simpl enrol enrol better fail due credenti suppli applic layer eventu failur server due miss credenti us1883_simple_enrol tc1883 us1883_server_ip est_err_auth_fail callback call cu_assert test6 saniti test basic auth mode test server basic mode client applic regist basic base callback client send estus estpwd credenti get cert static void us1883_test6 void log_func_nm switch server basic mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); set est client perform simpl enrol pass callback function catch handl request token auth enrol pass basic mode fulli work make sure callback call ensur credenti came callback us1883_simple_enrol tc1883 us1883_server_ip est_err_non callback call cu_assert test7 make sure enrol work credenti callback flow obtain credenti test server token mode client applic regist token base callback client send valid token credenti get cert static void us1883_test7 void log_func_nm test_token good_token (); tell server token check st_set_token good_token set est client perform simpl enrol enrol succeed tc1883 us1883_server_ip est_err_non callback call cu_assert test7 token credenti long test server token mode told match good token client applic regist token base callback told give back token long client send corrupt token match good token static void us1883_test8 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); tell server token check st_set_token good_token forc callback give fail return code test_token long_token set est client perform simpl enrol pass callback function catch handl request token auth us1883_simple_enrol tc1883 us1883_server_ip est_err_auth_fail callback call cu_assert test7 test digest mode demand credenti flow test server digest mode note mean server expect estus ""/"" estpwd estrealm valu hardcod data st_server st_server must start estrealm return realm client client return request client applic regist digest base callback client send valid digest get cert static void us1883_test9 void log_func_nm switch server digest mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); set est client perform simpl enrol pass callback function catch handl request token auth enrol pass digest mode fulli work make sure callback call ensur credenti came callback us1883_simple_enrol tc1883 us1883_server_ip est_err_non callback call cu_assert test4 valid token provid appliact callback wrong token test applic layer regist callback respond valid token server set token mode differ token enrol sent token credenti server set match token send back cert static void us1883_test10 void log_func_nm switch server token mode note see equival call made numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); tell server token check st_set_token different_token test_token good_token set est client perform simpl enrol enrol fail token match us1883_simple_enrol tc1883 us1883_server_ip est_err_auth_fail callback call cu_assert main function set run test return cue_success success run anoth cunit error code failur int us1883_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us1883_tok_auth_cli us1883_init_suit us1883_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit pars respons us1883_test1 null cu_add_test suit simpl enrol us1883_test2 null cu_add_test suit simpl enrol reg token us1883_test3 null cu_add_test suit simpl enrol reg good token us1883_test4 null cu_add_test suit simpl enrol reg bad us1883_test5 null cu_add_test suit simpl enrol reg basic mode us1883_test6 null cu_add_test suit simpl enrol reg good token us1883_test7 null cu_add_test suit simpl enrol reg token long us1883_test8 null cu_add_test suit simpl enrol reg digest mode us1883_test9 null cu_add_test suit simpl enrol reg mismatch valid token us1883_test10 cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us748.c "unit test user stori proxi simpl enrol august copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ proxi includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin retri interv defin tcp port defin 15748 defin us748_tcp_proxy_port 16748 ifndef win32 static char test5_outfil filename_max us748 test5 hdr defin us748_server_cert est privat estservercertandkey pem defin us748_server_key est privat estservercertandkey pem defin us748_proxy_cert est privat estservercertandkey pem defin us748_proxy_key est privat estservercertandkey pem defin us748_proxy_cert us748 cert pem defin us748_proxy_key us748 key pem defin us748_cacert est cacert crt defin us748_trusted_cert trustedcert crt els static char test5_outfil filename_max us748 test5 hdr defin us748_server_cert est privat estservercertandkey pem defin us748_server_key est privat estservercertandkey pem defin us748_proxy_cert est privat estservercertandkey pem defin us748_proxy_key est privat estservercertandkey pem defin us748_proxy_cert us748 cert pem defin us748_proxy_key us748 key pem defin us748_cacert est cacert crt defin us748_trusted_cert trustedcert crt endif follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin us748_pkcs10_rsa2048 miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x follow csr generat use follow openssl command use cat req file openssl req newkey 256parm keyout eckey pem keyform pem req outform pem defin us748_pkcs10_dsa1024 miicfj ccaj0caqawf delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax arbg nvbao mck rtqunvb xbhbnkx anbg nvbas mbk rtqw9i eqma4g a1ueaww hzhnh igrv ztea mbg gcsq gsib3dqejarylzhnh qgrv zs5jb20wgg g2miib yhko zizjg eatccar4cg yeaq ifbyk7r eaa ulipb1gc hhc0ctx6g0dh bfd opng bse tp5uf5lw8qm6o cxst u3n yejalm mvkj fwbgv bws8a jbnj09d ddn8sp kegc g0m zpqd mys6 b4qjjq5yax atvi ggm1efdhc 6ezm2t3cg qklwo5a bzqcc cfqdc1ol bfu ohj xaw ee5epjk rjw kbg lctj vfnj ao8x smamw nora nfdi zceam d4838n cgaj vrqi db1q5akk lyxo jx1yv7g nba bnuys3waqdu nso1htu eur2cbh u5i kbwpj6miwl d3u cru4ui bf9xbi ana rid8ct2kchhwy4ok qmu yoz4 mqqm a4geaakbg duw r7h3u4cfu ttr i50m1txhl vz3ton vix ehpu aoux atvkth jta cbkc0ehii1b nug bub xfpk rt3qrlf0 pzgi 0tov o9p kjqiw0c10l nkfb evdl xyt akj xub hmi nog3195 t7o kxhmt1a ucro aaw cqyhko zizjg eaw adat uah pcq qg3g kuupkdw bncm zfz wdqjs cfah0 nzn9hujl xna ta1ohjm pmc jsx follow csr generat use follow openssl command use cat dsa req file openssl req newkey dsa dsaparm keyout dsakey pem keyform pem dsa req outform pem defin miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq29i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k defin us748_pkcs10_corrupt miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq39i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k follow valid csr alreadi contain challeng password collect use estserv dumpbin function csr never work sinc valu stale defin miibcj cb3aibadarmq8w dqydvqqdew zurvnuq04wg z8w dqyjko zihvc naqebbqad y0amigjao gbapdhvrk vb3 fhl isr zgixld ryrd50s2v fs8m w5w wvx ds3x nzc ktqg7juy w8nyofnwx0ozh ce87xp2h7t 84zu ktlu3bjgq1xg nuu8a1ht10wiy8u2r ekmh qwpvt56uy5p hzuqmql o0qlm m58wn49ih mbaagg bgkqhki g9w0bcqcx yrujd gn1zunuwyd2vu aow dqyjko zihvc naqef bqadg yeayenrskmf rixcp kbv l3vn w5n4hc ltw i9hcbr744swfqaw uxd2j n99agbr tgh inwg2c7vz g6ok9fti nr9h 5slyhf sfjbu iv65r nvf lr9n9m2q9jlf7p4ayf wxd2q d2xotzw2t4tr gzgka2jr b40 defin us748_enroll_url_ba https :// 127 15748 well known est simpleenrol defin us748_pkcs10_ct content type applic pkcs10 defin us748_uidpwd_good estus estpwd defin us748_cacert est cacert crt defin us748_explicit_cert us748 cert pem defin us748_explicit_key us748 key pem static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv static file outfil static size_t write_func void ptr size_t size size_t nmemb void userdata size_t written written fwrite ptr size nmemb outfil return written static void us748_clean void static int us748_start_serv int manual_enrol int nid int first start est server act st_start us748_server_cert us748_server_key estrealm us748_cacert us748_trusted_cert us748 est exampl cnf manual_enrol manual enrol disabl nid ecdh nid info sleep est_err_non return next start est proxi act st_proxy_start us748_tcp_proxy_port us748_proxy_cert us748_proxy_key estrealm us748_cacert us748_trusted_cert estus estpwd 127 disabl nid ecdh nid info sleep return void us748_stop_serv st_stop (); st_proxy_stop (); sleep routin call cunit initi test suit use alloc data open resourc requir test case static int us748_init_suit void int est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us748_cacert cacert cacerts_len return us748_clean (); start instanc est server automat enrol enabl us748_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us748_destroy_suit void us748_stop_serv (); free cacert return simpl enrol rsa 2048 test case use libcurl test simpl enrol 2048 bit rsa csr http basic authent use static void us748_test1 void long log_func_nm curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_rsa2048 us748_uidpwd_good us748_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol prime 256 test case use libcurl test simpl enrol 256 bit csr http basic authent use static void us748_test2 void long log_func_nm curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_uidpwd_good us748_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol dsa prime 1024 test case use libcurl test simpl enrol 1024 bit dsa csr http basic authent use static void us748_test3 void long log_func_nm curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_dsa1024 us748_uidpwd_good us748_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 simpl enrol corrupt pkcs10 test case use libcurl test simpl enrol usinga corrupt csr http basic authent use static void us748_test4 void long log_func_nm curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_corrupt us748_uidpwd_good us748_cacert curlauth_bas null null null sinc csr valid server respond 400 cu_assert 400 simpl enrol manual enrol test case verifi server send appropri retri respons static void us748_test5 void long log_func_nm stop est server us748_stop_serv (); restart server manual enrol enabl us748_start_serv outfil fopen test5_outfil ""); curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_rsa2048 us748_uidpwd_good us748_cacert curlauth_bas null null write_func fclose outfil sinc server seen csr past respond retri 202 respons cu_assert 202 verifi retri valu sprintf cmd grep retri grep test5_outfil us748_retry_interv system cmd grep test5_outfil retri 3600 ""); cu_assert avoid wait full retri period sinc simul manual enrol wait second tri enrol cert sleep curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_rsa2048 us748_uidpwd_good us748_cacert curlauth_bas null null null enrol request succeed time simul manual enrol automat enrol second attempt cu_assert 200 stop est server us748_stop_serv (); restart server manual enrol disabl us748_start_serv simpl enrol check fail curl test case verifi server verifi client csr sinc curl set est enrol fail static void us748_test6 void long log_func_nm st_enable_pop (); send valid enrol request use curl curl includ curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_pkcs10_rsa2048 us748_uidpwd_good us748_cacert curlauth_bas null null null server respond failur code cu_assert 400 st_disable_pop (); simpl enrol check succeed estclient test case verifi proxi verifi client csr use estclient sinc support static void us748_test7 void long est_ctx c_ctx evp_pkey new_pkey unsign char pkcs7 int pkcs7_len unsign char attr_data int attr_len log_func_nm test case requir enabl st_enable_pop (); creat client context c_ctx est_client_init cacert cacerts_len est_cert_format_pem cu_assert c_ctx null c_ctx return specifi user password sinc server run basic authent mode est_client_set_auth c_ctx estus estpwd null null cu_assert est_err_non est_client_set_serv c_ctx 127 us748_tcp_proxy_port null get keypair use enrol new_pkey generate_private_key (); c_ctx attr_data attr_len cu_assert est_err_non attempt enrol csr est_client_enrol c_ctx us748 test7 pkcs7_len new_pkey cu_assert est_err_non client librari obtain new client certif retriev librari pkcs7 malloc pkcs7_len pkcs7 return c_ctx pkcs7 cu_assert est_err_non clean est_destroy c_ctx evp_pkey_fre new_pkey free pkcs7 disabl futur test case st_disable_pop (); simpl enrol disabl csr contain valid test case ensur server handl scenario csr includ valid even server request use cisco est client generat csr contain valid way includ valid use curl sinc tls channel bind inform known advanc follow includ never use applic use hack est_ctx valu mid way test includ ""../../ src est est_locl static void us748_test9 void est_ctx ctx int unsign char cacert int caclen evp_pkey new_pkey unsign char pkcs7 int pkcs7_len unsign char attr_data int attr_len log_func_nm make sure est server disabl st_disable_pop (); read cert caclen read_binary_fil us748_cacert cacert cu_assert cacerts_len init client context ctx est_client_init cacert caclen est_cert_format_pem use simpl http auth identifi est_client_set_auth ctx estus estpwd null null cu_assert est_err_non est_client_set_serv ctx 127 us748_tcp_proxy_port null creat space hold cert generat privat key new_pkey generate_private_key (); ctx attr_data attr_len cu_assert est_err_non attempt enrol ctx csr_pop_requir hack test attempt need forc challeng password csr est_client_enrol ctx test case9 pkcs7_len new_pkey cu_assert est_err_non pkcs7 malloc pkcs7_len ctx pkcs7 free pkcs7 est_destroy ctx simpl enrol disabl csr contain invalid test case ensur server handl scenario csr includ invalid even server request static void us748_test10 void long log_func_nm make sure est server disabl st_disable_pop (); curl_http_post us748_enroll_url_ba us748_pkcs10_ct us748_uidpwd_good us748_cacert curlauth_bas null null null enrol request fail sinc invalid expect 400 respons cu_assert 400 main function set run test return cue_success success run anoth cunit error code failur int us748_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us748_srv_simpenrol us748_init_suit us748_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit enrol rsa cert us748_test1 null cu_add_test suit enrol ecdsa cert us748_test2 null cu_add_test suit enrol dsa cert us748_test3 null cu_add_test suit enrol corrupt ecdsa cert us748_test4 null cu_add_test suit enrol retri manual approv us748_test5 null cu_add_test suit enrol fail curl us748_test6 null cu_add_test suit enrol succeed estclient us748_test7 null cu_add_test suit enrol disabl csr includ valid us748_test9 null cu_add_test suit enrol disabl csr includ invalid us748_test10 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us3612.c "unit test user stori encrypt privat key support juli copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ test util includ server includ openssl ssl includ openssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static char key password null static int cacert len defin server port defin server defin us3612_uid estus defin us3612_pwd estpwd defin us3612_good_pwd us3612 defin us3612_bad_pwd thiscantpossiblywork defin rsa_keys 4096 key wrap algorithm option use protect privat key defin est_private_key_enc evp_aes_128_cbc follow cert use fqdn test ifndef win32 defin us3612_cacert est cacert crt defin us3612_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us3612 us3612_key pem els defin us3612_cacert est cacert crt defin us3612_trust_cert trustedcert crt defin est privat estservercertandkey pem defin us3612 us3612_key pem static critical_sect logger_critical_sect static void us3612_logger_stderr char format va_list enter critic section logger_critical_sect vfprintf stderr format fflush stderr leav critic section logger_critical_sect endif unsign char bio_copy_data bio int data_lenp unsign char data tdata int data_len data_len bio_get_mem_data tdata data malloc data_len data memcpi data tdata data_len data data_len ]='\ make sure termin case use string data_lenp data_lenp data_len els printf malloc fail ""); return data char int key_siz pem_password_cb char key_data null rsa rsa rsa_new (); rsa return null bignum bn_new (); rsa_fre rsa return null bn_set_word 0x10001 rsa_generate_key_ex rsa key_siz null bio bio_new bio_s_mem ()); break key rsa est_private_key_enc null null null key_data char bio_copy_data null bio_fre key_data key_data happen passphras enter via stdin verifi less charact free key_data key_data null key_data rsa_fre rsa bn_free return key_data char int curve_nid pem_password_cb ec_key eckey ec_group group null char key_data null int asn1_flag form generat key eckey ec_key_new (); eckey return null group curve_nid group asn1_flag group form ec_key_set_group eckey group ec_key_generate_key eckey return null bio bio_new bio_s_mem ()); break group pem_write_bio_ecpriv key eckey est_private_key_enc null null null key_data char bio_copy_data null bio_fre key_data strstr key_data ""----- begin privat key -----"")) happen passphras enter via stdin verifi less charact free key_data key_data null key_data ec_key_fre eckey return key_data static int string_password_cb char buf int size int wflag void data hard code password suit strncpi buf key_password size return strnlen buf size )); static void us3612_clean void static int us3612_start_serv int manual_enrol int nid int st_start us3612_server_port us3612 test realm us3612_cacert us3612_trust_cert est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us3612_init_suit void int ifdef win32 initi critic section logger_critical_sect est_init_logg est_log_lvl_info us3612_logger_stderr endif read certif cacerts_len read_binary_fil us3612_cacert cacert cacerts_len return us3612_clean (); start instanc est server automat enrol enabl us3612_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us3612_destroy_suit void st_stop (); free cacert return callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf (""% open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv simpl enrol client load password prortect privat key correct passphras attempt enrol certif static void us3612_test1 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null unsign char attr_data null int attr_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3612_uid us3612_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us3612_server_ip us3612_server_port null read test privat key generat via command openssl genrsa aes128 passout pass us3612 us3612_key pem 4096 key_password us3612_good_pwd key string_password_cb cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx tcus3612 pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx simpl enrol csr load password protect privat key incorrect password attempt enrol certif fail static void us3612_test2 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null unsign char attr_data null int attr_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3612_uid us3612_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us3612_server_ip us3612_server_port null read test privat key generat via command openssl genrsa aes128 passout pass us3612 us3612_key pem 4096 key_password us3612_bad_pwd key string_password_cb cu_assert key null get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx tc3612 pkcs7_len key cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx simpl enrol csr chang password use callback read protect privat key file static void us3612_test3 void est_ctx ectx evp_pkey key int int pkcs7_len unsign char new_cert null unsign char attr_data null int attr_len creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null set authent mode use user password est_client_set_auth ectx us3612_uid us3612_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us3612_server_ip us3612_server_port null read test privat key generat via command openssl genrsa aes128 passout pass us3612 us3612_key pem 4096 key_password us3612_good_pwd key string_password_cb cu_assert key null chang password evp_pkey remain unaffect key_password us3612_bad_pwd get latest csr attribut ectx attr_data attr_len cu_assert est_err_non use simplifi api enrol csr est_client_enrol ectx tcus3612 pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx test key generat util function associ password callback static void us3612_test4 void char new_pkey null generat rsa key without password new_pkey rsa_keys null cu_assert new_pkey null printf (""\ new_pkey free new_pkey new_pkey null generat rsa key password key_password us3612_good_pwd new_pkey rsa_keys string_password_cb cu_assert new_pkey null printf (""\ new_pkey free new_pkey new_pkey null generat key without password new_pkey obj_sn2nid char prime256v1 ""), null cu_assert new_pkey null printf (""\ new_pkey free new_pkey new_pkey null generat key password new_pkey obj_sn2nid char prime256v1 ""), string_password_cb cu_assert new_pkey null printf (""\ new_pkey free new_pkey new_pkey null int us3612_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us3612_init_suit us3612_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit client simpl enrol correct pwd us3612_test1 null cu_add_test suit client simpl enrol incorrect pwd us3612_test2 null cu_add_test suit client simpl enrol incorrect pwd us3612_test3 null cu_add_test suit keygen test us3612_test4 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us901.c "unit test user stori server cacert june copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif defin pkcs req miichj ccaw caqaw qtel mcmga ueax mccm igj ignsa wvud cbpbi ihn zxag eymbyga uebrmpuel eoldp zgdld cbttjoy miibij anbgkqhki baqef aaocaq amiibcg kcaqea juwp xxdw ckv wpdwo andqz fmxro leih nwf rsg ngc efc hzom memgp npu0k81g muz rqzwmm jhxw rqob ni59oqek i1t4rk syzloow sqon mzj t0iq zdi rd8l3gj h3g eibmqfv62nt n1csu9df heg76 jahddd udjdxo3awi5s7z llz plgd4o k5k1wq ee2pqhn zxei nc94wfq xq1kyr w0povl 32mo wtqtfa7sqe2u gbxs rpa flqj e8jhoew x0ngywnvx krp kgu sbic31wvksw ps8e34pjj zavdx qidaqabo aaw dqyjko zihvc aqefbqadgg ebaazxvoor qpi mndp rzhhi d5o2yd7apbbzn rll1hml5dpgnu xy7zcyw qtxw ngyvt kja zci w7d zhvn f5ua3w ur9r2zno vr0z9y5wwn1c jrd 0xbgi6g6f ddim psf8gygc tcchba7uv0i8oi ciwf5uf f3nybo o2z beynq65 w3ygf yp0cr0ni xgkz3qh2xa2e rfe w56oejmc mjq6yx7wac2x nk3w1g6le1uinzuen msc ngnt8fa i43 ailmd ekxc30fjx a12rdh dyi fv0 pd4o5u pkt4j ritv apm ocd yawqiu2w defin us901_enroll_url https :// 127 29901 well known est simpleenrol defin us901_cacert_url https :// 127 29901 well known est cacert defin us901_pkcs10_ct content type applic pkcs10 defin us901_uidpwd_good estus estpwd defin us901_uidpwd_bad estus bogus defin us901_server_port 29901 ifndef win32 defin us901_cacert est cacert crt defin us901_explicit_cert us901 explicit cert pem defin us901_explicit_key us901 explicit key pem defin us901_implicit_cert us901 implicit cert pem defin us901_implicit_key us901 implicit key pem defin us901_revoked_cert us901 revok cert pem defin us901_revoked_key us901 revok key pem defin us901_selfsign_cert us901 selfsign cert pem defin us901_selfsign_key us901 selfsign key pem defin us901_cacert est cacert crt defin us901_extcert ext cacert crt defin us901_server_cert est privat estservercertandkey pem defin us901_server_key est privat estservercertandkey pem defin us901_server_certkey est privat estservercertandkey pem static char test5_outfil filename_max us901 test5 crt els defin us901_cacert est cacert crt defin us901_explicit_cert us901 explicit cert pem defin us901_explicit_key us901 explicit key pem defin us901_implicit_cert us901 implicit cert pem defin us901_implicit_key us901 implicit key pem defin us901_revoked_cert us901 revok cert pem defin us901_revoked_key us901 revok key pem defin us901_selfsign_cert us901 selfsign cert pem defin us901_selfsign_key us901 selfsign key pem defin us901_cacert est cacert crt defin us901_extcert ext cacert crt defin us901_server_cert est privat estservercertandkey pem defin us901_server_key est privat estservercertandkey pem defin us901_server_certkey est privat estservercertandkey pem static char test5_outfil filename_max us901 test5 crt endif static void us901_clean void char cmd 200 sprintf cmd test5_outfil system cmd routin call cunit initi test suit use alloc data open resourc requir test case static int us901_init_suit void us901_clean (); est_init_logg est_log_lvl_info null return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us901_destory_suit void return start appropri flavor st_server base charact specifi basic auth digest auth crl check auth static int us901_start_serv char server_typ int switch server_typ case st_start us901_server_port us901_server_certkey us901_server_certkey estrealm est cacert crt trustedcert crt est exampl cnf (); break case st_start us901_server_port us901_server_certkey us901_server_certkey estrealm est cacert crt trustedcert crt est exampl cnf (); break case system openssl config est exampl cnf gencrl est crl pem ""); sleep system cat trustedcert crt est crl pem us901 trustedcertsandcrl crt ""); sleep st_start us901_server_port us901_server_certkey us901_server_certkey estrealm est cacert crt us901 trustedcertsandcrl crt est exampl cnf st_enable_crl (); st_disable_http_auth (); break case st_start us901_server_port us901_server_certkey us901_server_certkey estrealm est cacert crt trustedcert crt est exampl cnf st_disable_http_auth (); break default break return http basic auth test case use libcurl test http basic authent work est server must use simpleenrol messag sinc cacert messag requir client authent est server run list port 8088 prior test run static void us901_test1 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 st_stop (); sleep http basic auth failur test case use libcurl test http basic authent work est server use bogus password must use simpleenrol messag sinc cacert messag requir client authent est server run prior test run static void us901_test2 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_bad us901_cacert curlauth_bas null null null sinc pass invalid user password expect server respond 400 cu_assert 401 st_stop (); sleep http digest auth test case use libcurl test http digest authent work est server must use simpleenrol messag sinc cacert messag requir client authent est server run listen port 8087 prior test run static void us901_test3 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_cacert curlauth_digest null null null sinc pass valid user password expect server respond success cu_assert 200 st_stop (); sleep http digest auth fail test case use libcurl test http digest authent work est server negat test case digest auth must use simpleenrol messag sinc cacert messag requir client authent est server run listen port 8087 prior test run static void us901_test4 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_bad us901_cacert curlauth_digest null null null sinc pass invalid user password expect server respond 400 cu_assert 401 st_stop (); sleep static file outfil static size_t write_func void ptr size_t size size_t nmemb void userdata size_t written written fwrite ptr size nmemb outfil return written test case simpl cacert request look http 200 respons code static void us901_test5 void long char cmd 200 int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep outfil fopen test5_outfil ""); curl_http_get us901_cacert_url us901_cacert write_func fclose outfil expect server respond 200 cu_assert 200 sprintf cmd openssl base64 openssl pkcs7 inform der text print_cert test5_outfil system cmd cu_assert st_stop (); sleep static void us901_test_sslvers const ssl_method int expect_fail bio conn ssl ssl ssl_ctx ssl_ctx null int int st_rv st_rv us901_start_serv st_rv return log_func_nm ssl_ctx ssl_ctx_new cu_assert ssl_ctx null ssl context readi open socket server bind socket context conn open_tcp_socket_ipv4 127 29901 ""); cu_assert conn null creaea ssl session context ssl ssl_new ssl_ctx ssl_set_bio ssl conn conn everyth readi let initi tls handshak ssl_connect ssl expect_fail cu_assert els cu_assert cleanup data ssl_shutdown ssl ssl_free ssl ssl_ctx_free ssl_ctx st_stop (); sleep test attempt creat ssl connect est server fail tls allow static void us901_test6 void log_func_nm us901_test_sslvers sslv3_client_method (), test attempt creat tls connect est server fail tls allow static void us901_test7 void log_func_nm us901_test_sslvers tlsv1_client_method (), test attempt creat tls connect est server succeed static void us901_test8 void log_func_nm us901_test_sslvers (), test attempt creat tls connect est server succeed static void us901_test9 void log_func_nm us901_test_sslvers (), test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain succeed static void us901_test10 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post_cert us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_explicit_cert us901_explicit_key us901_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 st_stop (); sleep test attempt use client certif verifi tls client authentiaiton work certif use sign implicit cert chain succeed static void us901_test11 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post_cert us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_implicit_cert us901_implicit_key us901_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 st_stop (); sleep test attempt use revok client certif verifi crl check work tls layer fail static void us901_test12 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post_cert us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_revoked_cert us901_revoked_key us901_cacert null sinc client cert revok tls handshak fail est server return 401 respons cu_assert st_stop (); test attempt use self sign client certif verifi cert chain reject cert sign valid fail static void us901_test13 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post_cert us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_selfsign_cert us901_selfsign_key us901_cacert null sinc client cert sign either local extern tls handshak fail receiv http status messag server cu_assert st_stop (); tls anonym cipher suit disabl test case use libcurl test est server accept anonym cipher suit client test singl cipher suit attempt simpl enrol server static void us901_test14 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_cacert curlauth_bas adh aes128 sha256 null null tls handshak fail curl return cu_assert st_stop (); sleep null http realm initi server static void us901_test15 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us901_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us901_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us901_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est server use null realm est_init_logg est_log_lvl_info null ctx est_server_init cacert cacerts_len cacert cacerts_len est_cert_format_pem null priv_key cu_assert ctx null x509_free evp_pkey_fre priv_key null server certif initi server static void us901_test16 void unsign char cacert null int cacerts_len bio keyin evp_pkey priv_key int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us901_cacert cacert cu_assert cacerts_len read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us901_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est server use null server key est_init_logg est_log_lvl_info null ctx est_server_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm null priv_key cu_assert ctx null evp_pkey_fre priv_key null server certif privat key initi server static void us901_test17 void unsign char cacert null int cacerts_len bio certin x509 int est_ctx ctx log_func_nm read certif cacerts_len read_binary_fil us901_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us901_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin attempt init est server use null privat key est_init_logg est_log_lvl_info null ctx est_server_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm null cu_assert ctx null x509_free null trust chain initi server static void us901_test18 void bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us901_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us901_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est server use null local chain est_init_logg est_log_lvl_info null ctx est_server_init null null est_cert_format_pem testrealm priv_key cu_assert ctx null x509_free evp_pkey_fre priv_key corrupt chain initi server static void us901_test19 void bio certin keyin x509 evp_pkey priv_key int est_ctx ctx log_func_nm read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us901_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us901_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin attempt init est server corrupt chain est_init_logg est_log_lvl_info null ctx est_server_init unsign char bogus chain unsign char bogus chain est_cert_format_pem testrealm priv_key cu_assert ctx null x509_free evp_pkey_fre priv_key test case attempt simpl cacert request use post instead get fail static void us901_test20 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep outfil fopen test5_outfil ""); curl_http_post us901_cacert_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_cacert curlauth_bas null null null fclose outfil expect server respond 400 cu_assert 400 st_stop (); sleep test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain valid http authent credenti also provid succeed static void us901_test21 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_explicit_cert us901_explicit_key us901_cacert null sinc pass valid user password expect server respond 200 cu_assert 200 st_stop (); sleep test attempt use client certif verifi tls client authentiaiton work certif use sign explicit cert chain invalid http authent credenti also provid fail 401 respons static void us901_test22 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_bad us901_explicit_cert us901_explicit_key us901_cacert null sinc pass invalid user password expect server respond 401 cu_assert 401 st_stop (); sleep test attempt enrol without use certif ident client use good user pwd howev est server setup perform certif authent http auth disabl fail 401 respons static void us901_test23 void long int st_rv st_rv us901_start_serv st_rv return log_func_nm sleep curl_http_post us901_enroll_url us901_pkcs10_ct us901_pkcs10_req us901_uidpwd_good us901_cacert curlauth_bas null null null sinc pass invalid user password expect server respond 401 cu_assert 401 st_stop (); sleep main function set run test return cue_success success run anoth cunit error code failur int us901_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us901_srv_cacert us901_init_suit us901_destory_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit note order import must test fread fprintf null cu_add_test suit http basic auth us901_test1 null cu_add_test suit http basic auth fail us901_test2 null cu_add_test suit http digest auth us901_test3 null cu_add_test suit http digest auth fail us901_test4 null cu_add_test suit get certif us901_test5 null cu_add_test suit ssl fail us901_test6 null cu_add_test suit tls fail us901_test7 null cu_add_test suit tls us901_test8 null cu_add_test suit tls us901_test9 null cu_add_test suit certif auth explicit cert chain us901_test10 null cu_add_test suit certif auth implicit cert chain us901_test11 null cu_add_test suit certif auth revok cert us901_test12 null cu_add_test suit certif auth self sign cert us901_test13 null cu_add_test suit anon cipher suit disabl us901_test14 null cu_add_test suit null realm us901_test15 null cu_add_test suit null server cert us901_test16 null cu_add_test suit null server key us901_test17 null cu_add_test suit null local chain us901_test18 null cu_add_test suit corrupt local chain us901_test19 null cu_add_test suit http post cacert us901_test20 null cu_add_test suit simpl enrol good http auth good cert us901_test21 null cu_add_test suit simpl enrol bad http auth good cert us901_test22 null cu_add_test suit simpl enrol http auth cert us901_test23 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us1864.c "unit test user stori enabl token auth mode server march copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif includ errno static unsign char cacert null static int cacert len defin tcp port follow csr generat use follow openssl command theng use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x defin miiezj ccak4caqaw itepma0ga1ueaww gskp uzxn0mq4w daydvqqfew mdaw mtcc dqyjko zihvc naqebbqadgg ipadccago cgg ibalf hxqz obi kwdf x8sa z4l3 n1jyr cp4xmi qit y2p iigl ht7t1wz0lo9uo0u b7b xki8fgq sm1j roe5lw dih tjd g4b705c6xm d3mh436de9d4gzpj a2qur si9 gvnvg u0zowjfu9g y3i ndfsj o9u0e2mf zwwr8m72g bqzvb ddpn4bdw la9tk q2rsxf3h2d7b n2dnsh nsyx ix89d9u c6feg hqx hinuod zze an3yu qmbu fwoh el9ub8qu9gub2mjur ynrqnii7 nduvq5 ujkhj nwz ih7labda ce0ju kbay uzzkrqo vk6b wzz fs4d ytn95 vvov95md5d1eok xw3iih7grjygt wn5e4 yo68lonbf7ue24vg eie f6j0b falxw n15s7p ialk gf7cubit rhb b3k udr8yp kdqx hnm wbxy7zvk4t8k7168c nwsol net tk4bto ujbn wp8uq38yoi6389u24gm jeet dy1mj8ha4pz ftm uwq etox2kub gwc9v wfi5bx e2vvet gnsy2eqezpvwsc cy0 o3fu06co etr7ekr ngap ddez vti p9npe5q18azu t9ngo ox3pqr cpg1bdn6z1ue2t sdd knfmnmwq yin zp9mxh tz8ra kvsclv9jag mbaagg adanbgkqhki g9w0baqufaaocag eajmw z4iub ush5w qbfs yt4sxt ztvun6qx0 nmtzz quoq o79kx dkpzs lnv hkm fqcx a7g ngb ap5 md92dghc xoq gkcl zdm gj2o req zwzv tdro4z p1yen5vg yz7sa nxze8w pg2whl qvk vcp hn3euif bgi2reo f7xq5cau4ut q1h4g hax67yww8 jmypi gga0ad0z8ruicl qtlu el1f nsr4zll opwn rdxvff xo7g xvir4ihvhnwj6km dzyk0ovat2ms5a guc mdn6jm8kib nbvh5fgk bvqopsngkwn eoj0rsa ksx t5efm oxm9p ae3r vog o4t8w z6dquqy budmg kig8o r5hawber8yw qdi bgg pkzdpm yi2tef zvp g7qlj nsj5twe rknggh ucu3u 1s0r gqg y1s9ggi dsif xj4nci rgq xpnrf syv3ki ixt ab6tjk ubt vfo2krfq nxu4lb es7w es7 zzpzn gsq whn efevi5c5wprnpv vn6r kh0f auk 9ek4knzwf yf8 xn5q otgd4o luusg fdjsq nh6a1mlmx6cn defin us1864_enroll_url_ba https :// 127 29001 well known est simpleenrol defin us1864_pkcs10_ct content type applic pkcs10 defin us1864_uidpwd_good estus estpwd ifndef win32 defin us1864_cacert est cacert crt defin us1864_cacert est cacert crt defin us1864_trusted_cert trustedcert crt defin us1864_server_cert est privat estservercertandkey pem defin us1864_server_key est privat estservercertandkey pem defin us1864_client_cert est privat estservercertandkey pem defin us1864_client_key est privat estservercertandkey pem els defin us1864_cacert est cacert crt defin us1864_cacert est cacert crt defin us1864_trusted_cert trustedcert crt defin us1864_server_cert est privat estservercertandkey pem defin us1864_server_key est privat estservercertandkey pem defin us1864_client_cert est privat estservercertandkey pem defin us1864_client_key est privat estservercertandkey pem endif curl_data_cb pass curl call curl whenev data receiv function specifi retriev http header test use retriev http header look bearer token author challeng static int bearer_found static size_t curl_data_cb void ptr size_t size size_t nmemb void userdata void bearer_found warn strstr danger assum null termin string case http header came est server know null termin strstr ptr www authent bearer ""); bearer_found return size nmemb static void us1864_clean void static int us1864_start_serv int manual_enrol int nid int st_start us1864_tcp_port us1864_server_cert us1864_server_key us1864 test realm us1864_cacert us1864_trusted_cert est exampl cnf manual_enrol nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us1864_init_suit void int est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us1864_cacert cacert cacerts_len return us1864_clean (); start instanc est server automat enrol enabl us1864_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us1864_destroy_suit void st_stop (); free cacert return unit test first test paramet static void us1864_test1 void unsign char cacert null int cacerts_len bio certin keyin x509 evp_pkey priv_key int est_ctx ctx est_error est_rv log_func_nm read certif cacerts_len read_binary_fil us1864_cacert cacert cu_assert cacerts_len read server cert certin bio_new bio_s_file_intern ()); bio_read_filenam certin us1864_server_cert cu_assert pem_read_bio_x509 certin null null null cu_assert null bio_fre certin read server key keyin bio_new bio_s_file_intern ()); bio_read_filenam keyin us1864_server_key cu_assert priv_key pem_read_bio_priv key keyin null null null cu_assert priv_key null bio_fre keyin init est server mode est_init_logg est_log_lvl_info null ctx est_server_init cacert cacerts_len cacert cacerts_len est_cert_format_pem testrealm priv_key cu_assert ctx null est_rv ctx auth_non cu_assert est_rv est_err_bad_mod est_rv ctx auth_bas cu_assert est_rv est_err_non est_rv ctx auth_digest cu_assert est_rv est_err_non est_rv ctx auth_token cu_assert est_rv est_err_non est_rv ctx 0xffffffff cu_assert est_rv est_err_bad_mod make sure allow digest mode fip mode fips_mode_set est_rv ctx auth_digest cu_assert est_rv est_err_bad_mod fips_mode_set x509_free evp_pkey_fre priv_key est_destroy ctx simpl enrol token auth mode goal test verifi est server respond correct auth challeng configur token auth mode first perform saniti check perform http basic request server still default mode http basic auth test configur server token auth mode issu request contain auth header forc server respond token auth challeng header static void us1864_test2 void long log_func_nm curl_http_post us1864_enroll_url_ba us1864_pkcs10_ct us1864_uidpwd_good us1864_cacert curlauth_bas null null null sinc specifi basic server still basic expect server respond 200 cu_assert 200 switch server token mode note see done numer place probabl safe test set danger chang fli oper set also note return code set enabl function (); bearer_found us1864_enroll_url_ba us1864_pkcs10_ct us1864_client_cert us1864_client_key us1864_cacert curl_data_cb curl_data_cb sinc chang auth mode server expect fail captur actual auth challeng expect server respond 200 cu_assert 401 cu_assert bearer_found main function set run test return cue_success success run anoth cunit error code failur int us1864_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us1864_cfg_tok_auth us1864_init_suit us1864_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit check parm us1864_test1 null cu_add_test suit attempt enrol basic pass us1864_test2 cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us1159.c "unit test user stori csr attribut enforc octob copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ test util includ openssl ssl includ openssl includ server ifdef cunit includ cunit basic includ cunit autom endif ifndef win defin cacert est cacert crt defin cacert est cacert crt defin server cert est privat estservercertandkey pem defin us1159_server_key est privat estservercertandkey pem els defin us1159_cacert est cacert crt defin us1159_cacert est cacert crt defin us1159_server_cert est privat estservercertandkey pem defin us1159_server_key est privat estservercertandkey pem endif defin us1159_uid estus defin us1159_pwd estpwd defin us1159_server_port 15897 defin us1159_server_ip 127 defin us1159_attr_pop_on mas gcsq gsib3dqejbw ==\ defin us1159_attr_cn_on mauga1ueaw ==\ defin us1159_attr_test mhegbi gaqebaryw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gew laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh urg qqaig ydvqqdbggqhkj opqqdag ==\ extern est_ctx ectx static unsign char cacert null static int cacerts_len static char attr static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen attr csr_data malloc csr_len strncpi char csr_data attr csr_len csr_data csr_len return csr_data static void us1159_clean void int us1159_start_serv int start est server act st_start us1159_server_port us1159_server_cert us1159_server_key estrealm us1159_cacert trustedcert crt est exampl cnf manual enrol disabl ecdh nid info est_err_non printf (""\ unabl start est server us1159 ""); return (); est_set_csr_cb ectx est_err_non printf (""\ unabl set est csr attribut callback us1159 ""); return sleep return routin call cunit initi test suit use alloc data open resourc requir test case static int us1159_init_suit void int us1159_clean (); printf start server csr attribut enforc unit test us1159 ).\ ""); attr us1159_attr_pop_on est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us1159_cacert cacert cacerts_len return start instanc est server automat enrol enabl us1159_start_serv (); return void us1159_stop_serv st_stop (); sleep routin call cunit uniniti test suit use dealloc data close resourc use test case static int us1159_destroy_suit void us1159_stop_serv (); free cacert printf complet csr attribut enforc unit test ""); return static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey function generat public privat key pair use certif provis static evp_pkey int nid ec_key eckey ec_group group null bio unsign char tdata unsign char key_data int key_len bio keyin evp_pkey new_priv_key int asn1_flag form generat key group nid nid_x9_62_prime256v1 */); group asn1_flag group form eckey ec_key_new (); ec_key_set_group eckey group ec_key_generate_key eckey printf fail generat key ""); return null bio_new bio_s_mem ()); group pem_write_bio_ecpriv key eckey null null null null key_len bio_get_mem_data tdata key_data malloc key_len memcpi key_data tdata key_len ec_key_fre eckey bio_fre read back evp_pkey struct keyin bio_new bio_s_mem ()); keyin bio_new_mem_buf key_data key_len read privat key file expect pem encod privat key use der encod would invok d2i_priv key_bio instead new_priv_key pem_read_bio_priv key keyin null null null new_priv_key null printf (""\ error read pem encod privat key ""); err_print_errors_fp stderr return null bio_fre keyin free key_data return new_priv_key test attempt simpl enrol client provid csr attribut challeng password enrol succeed static void us1159_test1 void est_ctx ctx evp_pkey key int int pkcs7_len unsign char new_cert null log_func_nm creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr est_client_enrol ctx test pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ctx new_cert cu_assert est_err_non cleanup evp_pkey_fre key new_cert free new_cert est_destroy ctx routin build pkcs10 csr static est_error x509_req req evp_pkey pkey char x509_name subj int setup version number x509_req_set_vers req cu_assert err_print_errors_fp stderr return est_err_x509_v add common name entri subj req subj mbstring_asc const unsign char cu_assert err_print_errors_fp stderr return est_err_x509_cn add serial number name entri subj nid_seri number mbstring_asc unsign char 12349999b cu_assert err_print_errors_fp stderr return est_err_x509_cn add attribut server expect req mbstring_asc const unsign char dummymac cu_assert err_print_errors_fp stderr return est_err_unknown req 999 mbstring_asc const unsign char dummi cu_assert err_print_errors_fp stderr return est_err_unknown req 999 mbstring_asc const unsign char dummi cu_assert err_print_errors_fp stderr return est_err_unknown req 999 mbstring_asc const unsign char dummi cu_assert err_print_errors_fp stderr return est_err_unknown req 999 mbstring_asc const unsign char dummi cu_assert err_print_errors_fp stderr return est_err_unknown req 840 10045 mbstring_asc const unsign char 132 cu_assert err_print_errors_fp stderr return est_err_unknown req 840 10045 mbstring_asc const unsign char """", cu_assert err_print_errors_fp stderr return est_err_unknown req nid_seri number mbstring_asc const unsign char 123456789a cu_assert err_print_errors_fp stderr return est_err_unknown set public key request x509_req_set_pubkey req pkey cu_assert err_print_errors_fp stderr return est_err_x509_pubkey x509_req_print_fp stderr req return est_err_non sign x509 certif request use digest key pass return open ssl error code x509_req_sign_ctx (); static int sign_x509_req x509_req evp_pkey pkey const evp_md int evp_pkey_ctx pkctx null evp_md_ctx mctx evp_md_ctx_init mctx evp_digest sign init mctx pkctx null pkey return encod use der asn set modifi flag x509_req open ssl keep cach copi der encod data case set flag tell open ssl run asn encod rather use cach copi req_info enc modifi x509_req_sign_ctx mctx evp_md_ctx_cleanup mctx return endif test attempt simpl enrol client provid requir csr attribut csr enrol succeed static void us1159_test2 void x509_req req null evp_pkey key null int pkcs7_len unsign char new_cert null int est_ctx ctx null log_func_nm set full list attribut server attr us1159_attr_test generat privat key key nid_secp384r1 cu_assert key null req x509_req_new (); cu_assert req null req key test ""); cu_assert est_err_non sign request ossl_rv sign_x509_req req key evp_sha256 ()); cu_assert ossl_rv ossl_rv err_print_errors_fp stderr endif creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null use simplifi api enrol csr ctx req pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ctx new_cert cu_assert est_err_non cleanup new_cert free new_cert ctx est_destroy ctx req x509_req_fre req key evp_pkey_fre key test attempt simpl enrol client provid requir csr attribut csr except 521 bit curv use enrol fail sinc server csr attr specifi use 384 bit curv static void us1159_test3 void x509_req req null evp_pkey key null int pkcs7_len int est_ctx ctx null log_func_nm set full list attribut server attr us1159_attr_test generat privat key key nid_secp521r1 cu_assert key null req x509_req_new (); cu_assert req null req key test ""); cu_assert est_err_non creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null use simplifi api enrol csr ctx req pkcs7_len key cu_assert est_err_http_bad_req cleanup ctx est_destroy ctx req x509_req_fre req key evp_pkey_fre key test attempt simpl enrol client provid requir csr attribut csr except sha 384 use signatur enrol fail sinc server csr attr requir sha 256 static void us1159_test4 void x509_req req null evp_pkey key null int pkcs7_len int est_ctx ctx null log_func_nm set full list attribut server attr us1159_attr_test generat privat key key nid_secp384r1 cu_assert key null req x509_req_new (); cu_assert req null req key test ""); cu_assert est_err_non creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non chang sha 384 signatur ctx nid_sha384 cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null use simplifi api enrol csr ctx req pkcs7_len key cu_assert est_err_http_bad_req cleanup ctx est_destroy ctx req x509_req_fre req key evp_pkey_fre key test attempt simpl enrol server csr attribut configur requir common name csr attribut server configur static api callback static void us1159_test10 void evp_pkey key null int pkcs7_len int est_ctx ctx null log_func_nm disabl csr attr callback server context est_set_csr_cb ectx null cu_assert est_err_non configur static csr attribut valu ectx us1159_attr_cn_on strlen us1159_attr_cn_on )); cu_assert est_err_non generat privat key key generate_private_key (); cu_assert key null creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non est_client_force_pop ctx cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null enrol new cert est_client_enrol ctx test pkcs7_len key cu_assert est_err_non cleanup ctx est_destroy ctx key evp_pkey_fre key test attempt simpl enrol client provid requir csr attribut csr client also provid larg quantiti addit attriut static void us1159_test20 void x509_req req null evp_pkey key null int pkcs7_len unsign char new_cert null int est_ctx ctx null int char t_attr_str log_func_nm set full list attribut server attr us1159_attr_test generat privat key key nid_secp384r1 cu_assert key null req x509_req_new (); cu_assert req null req key test ""); cu_assert est_err_non jam anoth attribut request could caus failur est server base64 decod csr due safe constraint max string size safe default 4096 byte ++) sprintf t_attr_str 899 req t_attr_str mbstring_asc const unsign char whatev cu_assert err_print_errors_fp stderr creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null use simplifi api enrol csr ctx req pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ctx new_cert cu_assert est_err_non cleanup new_cert free new_cert ctx est_destroy ctx req x509_req_fre req key evp_pkey_fre key test attempt simpl enrol client provid requir csr attribut csr client also provid attribut long name valu static void us1159_test21 void x509_req req null evp_pkey key null int pkcs7_len unsign char new_cert null int est_ctx ctx null log_func_nm set full list attribut server attr us1159_attr_test generat privat key key nid_secp384r1 cu_assert key null req x509_req_new (); cu_assert req null req key test ""); cu_assert est_err_non add attribut long valu req 993 mbstring_asc const unsign char attribut long valu could potenti caus problem est server cu_assert err_print_errors_fp stderr add attribut long name req 993 828 8142 9999 1883 993 828 8142 9999 1883 993 828 8142 9999 1883 993 828 8142 9999 1883 993 828 8142 9999 1883 mbstring_asc const unsign char cu_assert err_print_errors_fp stderr creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null use simplifi api enrol csr ctx req pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ctx new_cert cu_assert est_err_non cleanup new_cert free new_cert ctx est_destroy ctx req x509_req_fre req key evp_pkey_fre key test attempt simpl enrol server csr attribut configur enabl static void us1159_test50 void evp_pkey key null int pkcs7_len int est_ctx ctx null log_func_nm st_enable_pop (); disabl csr attr callback server context est_set_csr_cb ectx null cu_assert est_err_non generat privat key key nid_secp384r1 cu_assert key null creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null est_client_force_pop ctx cu_assert est_err_non set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null enrol new cert est_client_enrol ctx test pkcs7_len key cu_assert est_err_non cleanup ctx est_destroy ctx key evp_pkey_fre key test attempt simpl enrol server csr attribut configur disabl static void us1159_test51 void evp_pkey key null int pkcs7_len int est_ctx ctx null log_func_nm st_disable_pop (); disabl csr attr callback server context est_set_csr_cb ectx null cu_assert est_err_non generat privat key key nid_secp384r1 cu_assert key null creat client context ctx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ctx null set authent mode use user password est_client_set_auth ctx us1159_uid us1159_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ctx us1159_server_ip us1159_server_port null enrol new cert est_client_enrol ctx test pkcs7_len key cu_assert est_err_non cleanup ctx est_destroy ctx key evp_pkey_fre key main function set run test return cue_success success run anoth cunit error code failur int us1159_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us1159_init_suit us1159_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit note order import must test fread fprintf null cu_add_test suit attribut requir pop us1159_test1 null cu_add_test suit attribut provid pop us1159_test2 null cu_add_test suit public key wrong curv pop us1159_test3 null cu_add_test suit wrong hash algorithm signatur pop us1159_test4 null cu_add_test suit use static config pop us1159_test10 null cu_add_test suit lot attribut pop us1159_test20 null cu_add_test suit long attribut pop us1159_test21 null cu_add_test suit csr attr server pop us1159_test50 null cu_add_test suit csr attr server pop us1159_test51 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us2174.c "unit test user stori proxi simpl enrol august copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ proxi includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin retri interv defin tcp_port 29001 defin 52174 defin 62174 ifndef win32 defin us2174_server_cert est privat estservercertandkey pem defin us2174_server_key est privat estservercertandkey pem defin us2174_proxy_cert est privat estservercertandkey pem defin us2174_proxy_key est privat estservercertandkey pem defin us2174_proxy_cert us2174 cert pem defin us2174_proxy_key us2174 key pem defin us2174_cacert est cacert crt defin us2174_cacert est cacert crt defin us2174_trusted_cert trustedcert crt defin us2174_explicit_cert us2174 cert pem defin us2174_explicit_key us2174 key pem els defin us2174_server_cert est privat estservercertandkey pem defin us2174_server_key est privat estservercertandkey pem defin us2174_proxy_cert est privat estservercertandkey pem defin us2174_proxy_key est privat estservercertandkey pem defin us2174_proxy_cert us2174 cert pem defin us2174_proxy_key us2174 key pem defin us2174_cacert est cacert crt defin us2174_cacert est cacert crt defin us2174_trusted_cert trustedcert crt defin us2174_explicit_cert us2174 cert pem defin us2174_explicit_key us2174 key pem endif defin us2174_server_ip 127 defin us2174_tcp_port follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x follow csr generat use follow openssl command use cat req file openssl req newkey 256parm keyout eckey pem keyform pem req outform pem defin miicfj ccaj0caqawf delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax arbg nvbao mck rtqunvb xbhbnkx anbg nvbas mbk rtqw9i eqma4g a1ueaww hzhnh igrv ztea mbg gcsq gsib3dqejarylzhnh qgrv zs5jb20wgg g2miib yhko zizjg eatccar4cg yeaq ifbyk7r eaa ulipb1gc hhc0ctx6g0dh bfd opng bse tp5uf5lw8qm6o cxst u3n yejalm mvkj fwbgv bws8a jbnj09d ddn8sp kegc g0m zpqd mys6 b4qjjq5yax atvi ggm1efdhc 6ezm2t3cg qklwo5a bzqcc cfqdc1ol bfu ohj xaw ee5epjk rjw kbg lctj vfnj ao8x smamw nora nfdi zceam d4838n cgaj vrqi db1q5akk lyxo jx1yv7g nba bnuys3waqdu nso1htu eur2cbh u5i kbwpj6miwl d3u cru4ui bf9xbi ana rid8ct2kchhwy4ok qmu yoz4 mqqm a4geaakbg duw r7h3u4cfu ttr i50m1txhl vz3ton vix ehpu aoux atvkth jta cbkc0ehii1b nug bub xfpk rt3qrlf0 pzgi 0tov o9p kjqiw0c10l nkfb evdl xyt akj xub hmi nog3195 t7o kxhmt1a ucro aaw cqyhko zizjg eaw adat uah pcq qg3g kuupkdw bncm zfz wdqjs cfah0 nzn9hujl xna ta1ohjm pmc jsx follow csr generat use follow openssl command use cat dsa req file openssl req newkey dsa dsaparm keyout dsakey pem keyform pem dsa req outform pem defin miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq29i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k defin miibmtcb2g ibadb4mqsw cqydvqqgew jvuz elmak ga1uecaw ctk ddakbg nvbac a1juudesmbaga1uecgw jrundb21w yw55mq4w daydvqqldavfq39i epma0ga1u aww grumg zg9l mrkw yjko zihvc naqk bfgpl y0bkb2uu y29t mfkw yhko zizj0c aqyiko zizj0daqc dqg aeo1usz ckd xnfzyg nlne s8az qkod1516gt9qd dddt9i jn4 btnv 7k7 tji5kts1k wsyyvq lxvnq8q tu1i qj56aamak gbyq gsm49baedrw raig p6qda 0tekzfpopg ufw fmrsxc nmu que2yuz16460 sqcibf lvmu mey yoqbb x0ifde9yzk rovbcepv k0hc u5k follow valid csr alreadi contain challeng password collect use estserv dumpbin function csr never work sinc valu stale defin miibcj cb3aibadarmq8w dqydvqqdew zurvnuq04wg z8w dqyjko zihvc naqebbqad y0amigjao gbapdhvrk vb3 fhl isr zgixld ryrd50s2v fs8m w5w wvx ds3x nzc ktqg7juy w8nyofnwx0ozh ce87xp2h7t 84zu ktlu3bjgq1xg nuu8a1ht10wiy8u2r ekmh qwpvt56uy5p hzuqmql o0qlm m58wn49ih mbaagg bgkqhki g9w0bcqcx yrujd gn1zunuwyd2vu aow dqyjko zihvc naqef bqadg yeayenrskmf rixcp kbv l3vn w5n4hc ltw i9hcbr744swfqaw uxd2j n99agbr tgh inwg2c7vz g6ok9fti nr9h 5slyhf sfjbu iv65r nvf lr9n9m2q9jlf7p4ayf wxd2q d2xotzw2t4tr gzgka2jr b40 defin us2174_enroll_url_ba https :// 127 62175 well known est simpleenrol defin us2174_pkcs10_ct content type applic pkcs10 defin us2174_uidpwd_good estus estpwd static evp_pkey generate_private_key void rsa rsa rsa_new (); bignum bn_new (); evp_pkey pkey creat rsa keypair assign pkey return bn_set_word 0x10001 rsa_generate_key_ex rsa 1024 null pkey evp_pkey_new (); pkey null printf (""\ error alloc pkey structur new key pair ""); return null evp_pkey_set1_rsa pkey rsa printf (""\ error assign rsa key pair pkey structur ""); return null rsa_fre rsa bn_free return pkey defin good_token ww91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3u defin different_token v2vsb cwg ssd2zsbnb3qgd g8gcn ihrv igtl zxag jvb sboa wrpbic nck zcbjj20g ym91bm qgd g8ga2vlc cbvbi bya wrpbic nck zcbjj3zl igdvd cbvbm ugb w9i zsbza wx2zxig zg9sb gfi dqp xqg ssdt ig5vd cbnb25u ysbs zxqg j2vt ignhd gno ig1l lcbubw0ktm90igdvbm5h igxld zw0g y2f0y2ggd ghl ig1p zg5p z2h0ihjp zgvi defin null_token null defin long_token ssbj yw4nd cbh z3jl zsb0bi bka xnh z3jl zsanck z2h0a w5n igxpa2ug ssdt igzp z2h0a w5n igzvci bsa wzl ia0kvghl sdi zsbvbmx5ihdvcm igj1d cb0a gv5ign1d cbsa wtl igeg ymxh zgug dqp td2lu z2lu b3a wrl ihdpd ggg ywxs ig9m ig15ig1p z2h0ia0kdqp cb5zwfo lcbjigd1zxnz igl0j3mg ywxs ig9m ihro yxqg y29m lcb0a gf0j3mg z290ig15ig1pbm qga w4g ysb3a glyb canckknb sbzd glsb cbjd xnza w5n igfu zcbia xrja glu bhbm qgd ghlcm ywlu j3qgbm9ib2r5ighlcm dqo nck9o ihll ywgs ihlvd sbkb24nd cbo yxzl ihrv ighvb gxlci bjighl yxige w91ia0kssdt ihn0yw5ka w5n ihjp z2h0ighlcm vza wrl ihlvd sanck9o lca5osbza gfk zxmgb2yg y3jhenk ieknb sa5osbza gfk zxmgb2yg y3jhenkg dqp dcm f6e swg y3jhenk igni yxp5lcbjcm f6e sancg0kug91ci bhbm90a gvi igrya w5r lcbt ywtl igl0igeg zg91ymxl igzvci zsanck1h wjl iekg y2fu igrya w5r ihroa xmg yxdhe sanckl0j3mgbm v2zxig ihdo zw4gd ghle sbwd wxs ig91d cb0a gug z3vu ia0kqm vhd cb5b3ug ymxh y2sg yw5k igjsd wus igjv sancllvd sbnb3r0ysbw yxks ihlvd sbnb3r0ysbw yxkg dqo nck9o lcb3a gvi zsb0a guga gvsb cbhb sbjpi bjighvc gug yxqgb gvhc3qg ssbo ywqg ia0kssdt ihn0d w1ib glu b0a hjvd wdo ie5ldi bpcmxl yw5z ig9o lcb0bi b0a gugcmlza w5n ihn1bi ancg0kt2gg wvha cwge w91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3ug dqp jj20gc3rhbm rpbmcgcmlna hqga gvi zsbi zxnp zguge w91ia0kt2g idk5ihno ywrlci bjcm f6e swg ssdt idk5ihno ywrlci bjcm f6e sanck yxp5lcbjcm f6e swg y3jhenk igni yxp5ia0kdqp mb3jk ighhdm ugb wvi y3kgb24gb wug dqp ob3zlbn ig51zxzh ihrvbm9z igrl igxv y28g dqo nckkgbm zcbzb21l ihbl ywnl lcbqd xn0ihnvb wugcm vsa wvm ia0krn jvb sb0a glz ihzva wnl lcbra wxsa w5n ig1l ia0kww91ihn0yxjl igf0ig1l lcbhbm qge w91igd yxjl igf0ig1l ia0kqwx ihroa xmgc gfpbi bpd cdz igfsb cb0a gugc2ft zswga xqnci bhb gwga w5z yw5l ia0kkhlvd sbz zwup ia0kdqp jci b0a glz ihjl ywxse sbo yxbw zw5pbmcgb3ig zglk iekgb wfr zsbpd cbhb gwgd ia0kssdt igjvd w5k igzvci bda gf0d gfob29ja gvl ig9u igegd hvybmlw ihryd wnr ia0kdqp cb5zwfo lcb5b3ug zg9u j3qga gf2zsb0bi bob2x zxig ssbo zwfi ihlvd sanckknb sbzd gfu zglu bya wdod cbo zxjl igjlc2lk zsb5b3ug dqp cwg otkgc2hh zgvz ig9m igni yxp5lcbjj20g otkgc2hh zgvz ig9m igni yxp5ia0kq3jhenk igni yxp5lcbjcm f6e swg y3jhenkg dqo nck ihlvd sdi zsbjcm f6e sb5b3uncm y3jhenkg dqp ib2xk ig15igzl zxqs igzl zxqgd g8gd ghl igzpcm dqp zb3uga g9s zcbte sbm zwv0ihrv ihro zsbma xjl ia0kssbu zxzlci ywlk iekgd2fz igrvd24gd2l0a cb5b3u static char test_token ww91igrvbid0ighhdm ugd g8ga g9sb gvi iekga gvhci b5b3u =""; static int static int applic layer callback function return token base authent credenti call regist est client use (). test function requir set global valu order make callback oper way test case want tell function forc respons code error test_token pointer hard code string token string return callback must provid token credenti heap base buffer ownership buffer implicit transfer client librari upon return static est_http_auth_hdr auth_credenti char token_ptr null int token_len cu_assert auth_credenti mode auth_token report callback call see test request forc error respons code callback return auth_credenti mode auth_token test_token set anyth need alloc space heap copi valu test_token null token_len strlen test_token use strlen string larg need test est client token_len printf error determin length token string use credenti ""); return token_ptr malloc token_len token_ptr null printf error alloc token string use credenti ""); return strncpi token_ptr test_token strlen test_token )); token_ptr token_len made far token_ptr point string contain token return assign return success auth_credenti auth_token token_ptr return return token base one instead return basic credenti userid password static est_http_auth_hdr auth_credenti cu_assert auth_credenti mode auth_bas report callback call see test request forc error respons code callback return auth_credenti mode auth_bas auth_credenti user malloc sizeof estus "")); strncpi auth_credenti user estus sizeof estus "")); auth_credenti pwd malloc sizeof estpwd "")); strncpi auth_credenti pwd estpwd sizeof estpwd "")); return return basic base one instead verfi auth_mod pass digest static est_http_auth_hdr auth_credenti cu_assert auth_credenti mode auth_digest report callback call see test request forc error respons code callback return auth_credenti mode auth_digest auth_credenti user malloc sizeof estus "")); strncpi auth_credenti user estus sizeof estus "")); auth_credenti pwd malloc sizeof estpwd "")); strncpi auth_credenti pwd estpwd sizeof estpwd "")); return return endif callback function pass est_client_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv us2174_simple_enrol use test case perform simpl enrol static void us2174_simple_enrol char char server est_error expected_enroll_rv auth_credentials_cb callback est_ctx ectx evp_pkey key est_error int pkcs7_len unsign char new_cert null est_error e_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null e_rc ectx callback cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert expected_enroll_rv cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx static void char char server est_error expected_enroll_rv auth_credentials_cb callback est_ctx ectx evp_pkey key est_error int pkcs7_len unsign char new_cert null pkcs7 null bio b64 x509 cert null stack_of x509 cert null int est_error e_rc creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null e_rc ectx callback cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server null generat privat key key generate_private_key (); cu_assert key null use simplifi api enrol csr est_client_enrol ectx pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non est_destroy ectx ectx null creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ectx null cert switch server token mode (); e_rc ectx callback cu_assert e_rc est_err_non set est server address port est_client_set_serv ectx server us2174_tcp_port null attempt reenrol token mode convert cert x509 warn pure hackeri pdb convers code come test case b64 bio_new bio_f_base64 ()); bio_new_mem_buf new_cert pkcs7_len bio_push b64 d2i_pkcs7_bio null cu_assert null bio_free_al obj_obj2nid type switch case nid_pkcs7_sign cert sign cert break case nid_pkcs7_sign envelop cert signed_and_envelop cert break default break cu_assert cert null cert return new cert one cert pkcs7 blob iter full list find cert sk_x509_valu cert cu_assert cert null pdb note moment expect fail sinc server yet understand request token authent 1884 complet assert begin fail need chang pass respons est_client_reenrol ectx cert pkcs7_len key cu_assert expected_enroll_rv cleanup evp_pkey_fre key new_cert free new_cert est_destroy ectx static void us2174_clean void static int us2174_start_serv int manual_enrol int nid int first start est server act st_start us2174_server_cert us2174_server_key estrealm us2174_cacert us2174_trusted_cert us2174 est exampl cnf manual_enrol manual enrol disabl nid ecdh nid info sleep est_err_non return next start est proxi act server side oper token auth mode st_proxy_start_token us2174_proxy_cert us2174_proxy_key estrealm us2174_cacert us2174_trusted_cert estus estpwd 127 disabl sleep return void us2174_stop_serv st_stop (); st_proxy_stop (); sleep routin call cunit initi test suit use alloc data open resourc requir test case static int us2174_init_suit void int est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us2174_cacert cacert cacerts_len return us2174_clean (); start instanc est server automat enrol enabl us2174_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us2174_destroy_suit void us2174_stop_serv (); free cacert return simpl enrol proxi basic server basic make sure token auth mode break anyth static void us2174_test1 void long log_func_nm curl_http_post us2174_enroll_url_ba us2174_pkcs10_ct us2174_uidpwd_good us2174_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 endif simpl enrol proxi token server token static void us2174_test2 void log_func_nm set server token auth challeng tell server token accept (); st_set_token good_token set proxi token auth challeng tell token accept (); good_token tell client side proxi token credenti use good_token set est client perform simpl enrol enrol succeed us2174_simple_enrol tc2174 us2174_server_ip est_err_non callback call cu_assert simpl enrol proxi token server basic static void us2174_test3 void log_func_nm set server basic auth challeng (); set proxi token auth challeng tell token accept (); good_token tell client side proxi token credenti use good_token set est client perform simpl enrol enrol succeed us2174_simple_enrol tc2174 us2174_server_ip est_err_non callback call cu_assert simpl enrol proxi basic server token static void us2174_test4 void log_func_nm set server token auth challeng tell server token accept (); st_set_token good_token set proxi basic auth challeng tell token accept (); good_token tell client side proxi token credenti use good_token set est client perform simpl enrol enrol succeed us2174_simple_enrol tc2174 us2174_server_ip est_err_non callback call cu_assert simpl enrol proxi token server token static void us2174_test5 void log_func_nm set server token auth challeng tell server token accept (); st_set_token good_token set proxi token auth challeng tell token accept (); good_token tell client side proxi token credenti use good_token set est client perform simpl enrol enrol succeed tc2174 us2174_server_ip est_err_non callback call cu_assert main function set run test return cue_success success run anoth cunit error code failur int us2174_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us2174_token_proxi us2174_init_suit us2174_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit (/* null cu_add_test suit proxi enrol basic saniti test us2174_test1 null cu_add_test suit proxi enrol token auth proxi server us2174_test2 null cu_add_test suit proxi enrol token auth proxi token server basic us2174_test3 null cu_add_test suit proxi enrol token auth proxi basic server token us2174_test4 null cu_add_test suit proxi enrol token auth proxi basic server token us2174_test5 cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us893.c "unit test user stori proxi reenrol octob copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ proxi includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin tcp server port defin tcp proxi port 093 follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa 2048 keyout rsakey pem keyform pem rsa req outform pem defin us893_pkcs10_rsa2048 miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdja9mdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x defin us893_pkcs10_corrupt miicv tccaa ucaqaw delmak ga1uebh mcvvmx ajbg nvbag mak5dmqww ydvqqh dansvfax aqbg nvbao mcvjtqwnlcn rjbz emmao ga1uecww dcn mraw ydvqqd dadyc2eg zg9l mrow gayjko zihvc naqk bfgtyc2fazg9l nvb tccasiw dqyjko nhvc naqebbqadgg epadccaqo cgg eban6p ctbr k7t029bganq0qhxhi nl8opvxc7ji qz39r3j9bo be72xz0qx ueygnh hola isasnzs2zkwpv mhjwm pynt39oci48i fog ldb an83m aoksfc mlbib ccsh4holhaa wsk rtasew16muoz fu6v bkw i82j kpyws0d yoxu wfig e1hl gplbzq7fr bidrqk ddgi dd5nu lmjgdak7v b1ww baw 6ai9v5psye1v8f wdr6hw2gg9xn b4p cg1rl1l systum tgyb m6cx jyw djj1zw z1w ixa baxzax xox0hn zmtefx fk1kv0caw eaaa aama0g csq e8l8j fkr1h svee aqa58ruf z4usku nlsih7ucf8bk qvgljnhsc qucz ibn jzeq epq sdnom fw6cv x87fgyx jgpw nutn uifj zhr wgf nnbt hrkecw zex4 hc127jt e3ci dsr a1o yrcq93t w2q9plvm llyjc s1khvd2nya79kf s0ygmocsw1gel vl2iz ocay as5gb9y2 ebw yzw6vhj5qjp cuz j3e8cl3vd4kpi3j3b zgdfffmdmd8j5zi py56 auxar wss nci h6e99w3tmr uzb lljkj j7p bxrnontgm5wzm qfh4x defin us893_server_ip 127 defin https :// 127 29093 well known est simplereenrol defin us893_pkcs10_ct content type applic pkcs10 defin us893_uidpwd_good estus estpwd defin us893_uid estus defin us893_pwd estpwd ifndef win32 defin us893_cacert est cacert crt defin us893_trusted_cert trustedcert crt defin us893_server_certkey est privat estservercertandkey pem defin us893_proxy_cert us893 cert pem defin us893_proxy_key us893 key pem defin us893_untrusted_cert us893 cert untrust pem defin us893_untrusted_key us893 key untrust pem defin us893_expired_key us893 key expir pem defin us893_expired_cert us893 cert expir pem defin us893_tc2_cert_txt us893 tc2 new cert txt defin us893_tc2_cert_b64 us893 tc2 new cert pkcs7b64 defin us893_tc2_cert_pk7 us893 tc2 new cert pkcs7 defin us893_tc2_cert_pem us893 tc2 new cert pem els defin us893_cacert est cacert crt defin us893_trusted_cert trustedcert crt defin us893_server_certkey est privat estservercertandkey pem defin us893_proxy_cert us893 cert pem defin us893_proxy_key us893 key pem defin us893_untrusted_cert us893 cert untrust pem defin us893_untrusted_key us893 key untrust pem defin us893_expired_key us893 key expir pem defin us893_expired_cert us893 cert expir pem defin us893_tc2_cert_txt us893 tc2 new cert txt defin us893_tc2_cert_b64 us893 tc2 new cert pkcs7b64 defin us893_tc2_cert_pk7 us893 tc2 new cert pkcs7 defin us893_tc2_cert_pem us893 tc2 new cert pem endif static void us893_clean void char cmd 200 temporari file creat various test case ifndef win32 sprintf cmd us893_tc2_cert_txt system cmd sprintf cmd us893_tc2_cert_b64 system cmd sprintf cmd us893_tc2_cert_pk7 system cmd sprintf cmd us893_tc2_cert_pem system cmd els sprintf cmd del us893_tc2_cert_txt system cmd sprintf cmd del us893_tc2_cert_b64 system cmd sprintf cmd del us893_tc2_cert_pk7 system cmd sprintf cmd del us893_tc2_cert_pem system cmd endif static int us893_start_serv int manual_enrol int nid int first start est server act st_start us893_server_certkey us893_server_certkey us893 test realm us893_cacert us893_trusted_cert us893 est exampl cnf manual_enrol nid est_err_non return next start est proxi actg st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 nid return routin call cunit initi test suit use alloc data open resourc requir test case static int us893_init_suit void int est_init_logg est_log_lvl_info null read certif cacerts_len read_binary_fil us893_cacert cacert cacerts_len return us893_clean (); start instanc est server automat enrol enabl us893_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us893_destory_suit void st_stop (); st_proxy_stop (); free cacert return simpl reenrol rsa 2048 test case use libcurl test simpl reenrol 2048 bit rsa csr http basic authent use static void us893_test1 void long log_func_nm curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null sinc pass valid user password expect server respond 200 cu_assert 200 test case use exist expir cert attempt enrol expir cert contain sever x509 extens verifi new issu cert preserv extens use grep note preserv extens requir open ssl enabl copy_extens knob open ssl config file test suit use uniqu copi est exampl cnf static void us893_test2 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len unsign char new_cert null x509 cert null bio char cmd 200 unsign char attr_data null int attr_len log_func_nm creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null set authent mode use user password est_client_set_auth ectx us893_uid us893_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us893_server_ip us893_tcp_proxy_port null read privat key key_len read_binary_fil us893_expired_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us893_expired_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non retriev cert given est server est_err_non new_cert malloc pkcs7_len cu_assert new_cert null ectx new_cert cu_assert est_err_non save cert local file write_binary_fil us893_tc2_cert_b64 new_cert pkcs7_len cu_assert base decod cert respons sprintf cmd openssl base64 us893_tc2_cert_b64 us893_tc2_cert_pk7 system cmd cu_assert convert pkcs7 cert pem cert sprintf cmd openssl pkcs7 inform der print_cert us893_tc2_cert_pk7 us893_tc2_cert_pem system cmd cu_assert convert pem cert textual represent cert sprintf cmd openssl x509 text us893_tc2_cert_pem us893_tc2_cert_txt system cmd cu_assert verifi jimbob dns extens preserv grep us893_tc2_cert_txt jimbob ""); cu_assert verifi bobcat dns extens preserv grep us893_tc2_cert_txt bobcat ""); cu_assert verifi address extens preserv grep us893_tc2_cert_txt 172 ""); cu_assert verifi repudi key usag extens preserv grep us893_tc2_cert_txt repudi ""); cu_assert verifi public key preserv grep us893_tc2_cert_txt ""); cu_assert clean new_cert free new_cert est_destroy ectx simpl reenrol corrupt csr use libcurl send reenrol request contain corrupt csr static void us893_test3 void long log_func_nm curl_http_post us893_pkcs10_ct us893_pkcs10_corrupt us893_uidpwd_good us893_cacert curlauth_bas null null null sinc pass bad csr expect server respond 400 cu_assert 400 test attempt enrol expir cert est server configur manual approv server send back retri respons verifi proxi propag retri respons client static void us893_test4 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int int pkcs7_len x509 cert null bio int retry_v time_t time_v unsign char attr_data null int attr_len log_func_nm stop server st_stop (); st_proxy_stop (); restart server manual approv enabl us893_start_serv cu_assert creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null set authent mode use user password est_client_set_auth ectx us893_uid us893_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us893_server_ip us893_tcp_proxy_port null read privat key key_len read_binary_fil us893_expired_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us893_expired_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert server configur retri valu 3600 second default ectx retry_v time_v cu_assert est_err_non cu_assert retry_v 3600 clean est_destroy ectx stop server st_stop (); st_proxy_stop (); restart server manual approv disabl us893_start_serv cu_assert test attempt enrol expir cert est server configur enabl proxi server use cert contain cmc result failur static void us893_test5 void int log_func_nm make sure enabl server st_enable_pop (); stop proxi server restart use differ ident cert st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_server_certkey us893_server_certkey us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert use libcurl send enrol request use libcurl includ curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null check fail cu_assert 400 stop proxi server st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert test attempt enrol expir cert est server configur disabl proxi server use cert contain cmc result success reenrol static void us893_test6 void int log_func_nm make sure disabl server st_disable_pop (); stop proxi server restart use differ ident cert st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_server_certkey us893_server_certkey us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert use libcurl send enrol request use libcurl includ curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null reenrol work sinc enabl anywher cu_assert 200 stop proxi server st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert enabl server forthcom test case st_enable_pop (); test attempt enrol expir cert est server configur disabl proxi server use cert contain cmc csr contain forc check result failur sinc cert contain cmc follow includ never use applic use hack est_ctx valu mid way test includ ""../../ src est est_locl static void us893_test7 void int est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len int pkcs7_len x509 cert null bio unsign char attr_data null int attr_len log_func_nm make sure disabl server st_disable_pop (); stop proxi server restart use differ ident cert st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_server_certkey us893_server_certkey us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null set authent mode use user password est_client_set_auth ectx us893_uid us893_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us893_server_ip us893_tcp_proxy_port null read privat key key_len read_binary_fil us893_expired_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us893_expired_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens ectx csr_pop_requir hack test attempt need forc challeng password csr est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_http_bad_req stop proxi server st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert enabl server forthcom test case st_enable_pop (); est_destroy ectx test case use exist expir cert attempt enrol disabl est server static void us893_test8 void est_ctx ectx evp_pkey key unsign char key_raw int key_len unsign char cert_raw int cert_len x509 cert null int int pkcs7_len bio unsign char attr_data null int attr_len log_func_nm make sure disabl server st_disable_pop (); creat client context ectx est_client_init cacert cacerts_len est_cert_format_pem null cu_assert ectx null set authent mode use user password est_client_set_auth ectx us893_uid us893_pwd null null cu_assert est_err_non set est server address port est_client_set_serv ectx us893_server_ip us893_tcp_proxy_port null read privat key key_len read_binary_fil us893_expired_key key_raw cu_assert key_len key est_load_key key_raw key_len est_format_pem cu_assert key null free key_raw read old cert cert_len read_binary_fil us893_expired_cert cert_raw cu_assert cert_len bio_new_mem_buf cert_raw cert_len cu_assert null return cert null null null cu_assert cert null cert return bio_free_al free cert_raw get latest csr attribut ectx attr_data attr_len cu_assert est_err_non enrol expir cert contain x509 extens est_client_reenrol ectx cert pkcs7_len key cu_assert est_err_non est_destroy ectx enabl server forthcom test case st_enable_pop (); test case use exist expir cert attempt enrol disabl est server csr contain static void us893_test9 void int log_func_nm make sure disabl server st_disable_pop (); use libcurl send enrol request use libcurl includ curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null reenrol work sinc enabl anywher cu_assert 200 enabl server forthcom test case st_enable_pop (); test case use bad password configur est proxi context caus est server reject reenrol request static void us893_test10 void int log_func_nm stop proxi server restart use differ ident cert st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus bogus 127 cu_assert curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null cu_assert 401 stop proxi server st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert static void us893_test11 void int long http_code curl hnd struct curl_slist slist1 log_func_nm stop proxi server restart use differ ident cert st_proxy_stop (); restart proxi server use untrust cert st_proxy_start us893_tcp_proxy_port us893_untrusted_cert us893_untrusted_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert use normal curl util api need disabl tls peer verif special test case set content type header http request slist1 null slist1 curl_slist_append slist1 us893_pkcs10_ct setup field curl requir hnd curl_easy_init (); curl_easy_setopt hnd curlopt_url curl_easy_setopt hnd curlopt_noprogress curl_easy_setopt hnd curlopt_userpwd us893_uidpwd_good curl_easy_setopt hnd curlopt_postfield us893_pkcs10_rsa2048 curl_easy_setopt hnd curl_off_t strlen us893_pkcs10_rsa2048 )); curl_easy_setopt hnd curlopt_userag curl ""); curl_easy_setopt hnd curlopt_httphead slist1 curl_easy_setopt hnd curlopt_maxredir 50l curl_easy_setopt hnd curlopt_ssl_verifyp curl_easy_setopt hnd curlopt_httpauth curlauth_bas curl_easy_setopt hnd curlopt_cainfo us893_cacert curl_easy_setopt hnd curlopt_verbos curl_easy_setopt hnd curlopt_tcp_keepal curl_easy_setopt hnd curlopt_forbid_reus issu http request curl_easy_perform hnd get http repons status code server curl_easy_getinfo hnd http_code curl_easy_cleanup hnd hnd null curl_slist_free_al slist1 slist1 null cu_assert http_code 400 stop proxi server st_proxy_stop (); restart proxi server use cert st_proxy_start us893_tcp_proxy_port us893_proxy_cert us893_proxy_key us893 test realm us893_cacert us893_trusted_cert estus estpwd 127 cu_assert simpl reenrol rsa 2048 test case use libcurl test simpl reenrol 2048 bit rsa csr http basic authent use howev enabl proxi caus failur sinc libcurl includ static void us893_test12 void long log_func_nm st_proxy_enable_pop (); curl_http_post us893_pkcs10_ct us893_pkcs10_rsa2048 us893_uidpwd_good us893_cacert curlauth_bas null null null fail sinc proxi fail check cu_assert 400 st_proxy_disable_pop (); main function set run test return cue_success success run anoth cunit error code failur int us893_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us893_init_suit us893_destory_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit enrol rsa cert us893_test1 null cu_add_test suit enrol expir cert us893_test2 null cu_add_test suit enrol corrupt csr us893_test3 null cu_add_test suit enrol expir cert retri us893_test4 null cu_add_test suit enrol proxi cmc srv us893_test5 null cu_add_test suit enrol proxi cmc srv us893_test6 null cu_add_test suit enrol proxi cmc srv csr us893_test7 null cu_add_test suit enrol expir cert srv csr us893_test8 null cu_add_test suit enrol expir cert srv csr us893_test9 null cu_add_test suit enrol proxi misconfigur http auth us893_test10 null cu_add_test suit enrol proxi untrust ident cert us893_test11 null cu_add_test suit enrol enabl proxi csr us893_test12 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
test_data/LibEST_semeru_format/test/us895.c "unit test user stori proxi csr attribut novemb copyright cisco system inc right reserv includ stdio ifndef win includ unistd endif includ est includ curl curl includ curl util includ test util includ server includ proxi includ openssl ssl ifdef cunit includ cunit basic includ cunit autom endif static unsign char cacert null static int cacert len defin server port defin proxi port ifndef win32 defin us895_cacert est cacert crt defin us895_trusted_cert trustedcert crt defin server_ut_cacert est cacert crt defin server_ut_pubkey ""./ defin us895_server_ip 127 defin us895_cacert est cacert crt defin us895_trust_cert trustedcert crt defin us895_server_certkey est privat estservercertandkey pem els defin us895_cacert est cacert crt defin us895_trusted_cert trustedcert crt defin server_ut_cacert est cacert crt defin server_ut_pubkey defin us895_server_ip 127 defin us895_cacert est cacert crt defin us895_trust_cert trustedcert crt defin us895_server_certkey est privat estservercertandkey pem endif defin test_attr_pop mas gcsq gsib3dqejbw ==\ defin test_attr_nopop mhew laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg ==\ defin test_attr_nopoppop mhww laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yjko zihvc naqk defin test_attr_popad mhww laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yjko zihvc naqk defin test_attr1 mcygbi gaqebarygcsq gsib3dqejbw yfk4eeacigcwcgsafl qcag ==\ defin test_attr2 maa defin test_attr7 ==\ defin test_attr2_pop mas gcsq gsib3dqejbw ==\ defin test_attr8 mathisi bad gcsq gsib3dqejbw ==\ defin test_attr3 migsmfg ga4g3aj frexl qyxjz zsbtrvqg yxmg mi45otku yxrh exl qyxjz zsbtrvqg yxmg mi45otku yxrh exl qyxjz zsbtrvqg yxmg mi45otku ncbk yxrh bgkqhki g9w0bcqcw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebari defin test_attr4_122 mhow laydi cmsuga4g3aw ydi eexl qyxjz zsbtrvqg yxmg mi45otku yxrh bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yhkw ybaqebfg ==\ defin test_attr4_122pop migfmcw ga4g3aj oinw mga4g3bbmzugfyc2ug u0vuigfz idiu otk5lj jamdagg baqsw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebarygbi gaqebarygcsq gsib3dqejbw ==\ defin test_attr5_117 mhuw ydi cmsaga4g3aw ydi eex rqyxjz zsbtrvqg yxmg mi45otku yjyiziawudbaicbgkr jamdagg baqsw ydi bmrs tgvbhcn ifnfvcbhci ljk5os4x igrhd gegbi gaqebarygbi gaqebari defin test_attr5_117pop migamcc ga4g3aj oinw mga4g3bbmuugfyc2ug u0vuigfz idiu otk5lj igcwcgsafl qcag yjki qdaw iiaqelmciga4g3ateb exl qyxjz zsbtrvqg yxmg mi45otku msbk yxrh bgcr ebaqewbgcr ebaqewbgkqhki g9w0bcqc defin test_attr6_116 mhqw ydi cmsaga4g3aw ydi eex rqyxjz zsbtrvqg yxmg mi45otku yjyiziawudbaicbgkr jamdagg baqsw iqydi bmro tgfbhcn ifnfvcbhci ljk5os4x igrhd ayhkw ybaqebfg yhkw ybaqebfg ==\ defin test_attr_244 mih1mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey qgbys gaqebarygbi gaqebari defin test_attr_245 mih2mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1bgcr ebaqewbgcr ebaqew defin test_attr_250 mih7mgqga4g3aj oinw mga4g3bbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw zbni ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1mtiz ndugbi gaqebarygbi gaqebari defin test_attr_250pop miibbj oinw xqydi dbg oinw qtuvbhcn ifnfvcbhci ljk5os4i idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz jamdagg baqswaw ydi bmwqtyl bhcn ifnfvcbhci ljk5os4x igrhd geg mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw ywix m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0ntey q1bgcr ebaqewbgcr ebaqewbgkqhki g9w0bcqc defin test_all_attr mihtmigbbg oinw ixeg icap8ga4g3aw ydi ecg eceh m0nty3odkw qujdrevgex rqyxjz zsbtrvqg yxmg mi45otku qfmtiz nduubtey q1fg m0nro fmtiz nduc faaaadeaaaay aaaamw aaadqaaaa1hgo amqay admanaa1bglghkg bzqmeag igcssk mccaebcz oinw mzugfyc2ug u0vuigfz idiu otk5lj zgf0yqyhkw ybaqebfg yhkw ybaqebfg ebaa ==\ defin test_1024_nopop miid dcca2mga4g3aj gca1o ga4g3aw ydi eeiox m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtisztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw e1fqyxjz zsbtrvqg yxmg mi45otku m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otagcwcgsafl qcag yjki qdaw iiaqelmg ga4g3atfk e2jqyxjz zsbtrvqg yxmg mi45otku msbk yxrh idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mgfi mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndux m0nqyhkw ybaqebfg yhkw ybaqebfg ==\ defin test_1025_nopop miid tcca2qga4g3aj gca1 ga4g3aw ydi eeisx m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbnrugfyc2ug u0vuigfz idiu otk5lj mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw bglghkg bzqmeag igcssk mccaebcz oinw zbni ugfyc2ug u0vuigfz idiu otk5lj zgf0ysax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otbh q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1mtiz ndugbi gaqebarygbi gaqebari defin test_1024_pop miiebz cca2mga4g3aj gca1o ga4g3aw ydi eeiox m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtisztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw e1fqyxjz zsbtrvqg yxmg mi45otku m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otagcwcgsafl qcag yjki qdaw iiaqelmg ga4g3atfk e2jqyxjz zsbtrvqg yxmg mi45otku msbk yxrh idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mgfi mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndux m0nqyhkw ybaqebfg yhkw ybaqebfg yjko zihvc naqk defin test_long_attr miienz cca54ga4g3aj gca5uga4g3aw ydi eem m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otasztey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdax m0nty3odkw m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otaw mtiz ndu2nzg5mbjl mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mdey q1njc4otatuvbhcn ifnfvcbhci ljk5os4i idey q1njc4otax m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw mtiz jamdagg baqswaw ydi bmwqtyl bhcn ifnfvcbhci ljk5os4x igrhd geg mtiz ndu2nzg5mdey q1njc4otax m0nty3odkw ywix m0nty3odkw mtiz ndu2nzg5mdey q1njc4otax m0ntey q1bgcr ebaqewbgcr ebaqew defin est_ut_max_cmd_len 255 extern est_ctx ectx static void us895_clean void static int us895_start_serv int manual_enrol int nid int st_start us895_server_port us895_server_certkey us895_server_certkey us895 test realm us895_cacert us895_trusted_cert est exampl cnf manual_enrol nid return next start est proxi act st_proxy_start us895_proxy_port us895_server_certkey us895_server_certkey us895 test realm us895_cacert us895_trusted_cert estus estpwd 127 us895_server_port nid sleep return routin call cunit initi test suit use alloc data open resourc requir test case static int us895_init_suit void int char cmd est_ut_max_cmd_len printf start est server csr attribut unit test ""); gen keypair use est proxi test snprintf cmd est_ut_max_cmd_len openssl ecparam name prime256v1 genkey server_ut_pubkey printf (""% cmd system cmd read certif cacerts_len read_binary_fil us895_cacert cacert cacerts_len return start server test need talk server us895_clean (); start instanc est server us895_start_serv return routin call cunit uniniti test suit use dealloc data close resourc use test case static int us895_destroy_suit void st_stop (); st_proxy_stop (); sleep return static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr7 csr_data malloc csr_len strncpi char csr_data test_attr7 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr8 csr_data malloc csr_len strncpi char csr_data test_attr8 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_long_attr csr_data malloc csr_len strncpi char csr_data test_long_attr csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr1 csr_data malloc csr_len strncpi char csr_data test_attr1 csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len strlen test_attr_nopop csr_data malloc csr_len strncpi char csr_data test_attr_nopop csr_len csr_data csr_len return csr_data static unsign char int csr_len char path_seg void app_data unsign char csr_data csr_len csr_data null return csr_data callback function pass est_proxy_init static int x509 cur_cert int openssl_cert_error bio bio_err bio_err bio_new_fp stderr bio_noclos int approv print specif cert printf open ssl est server cert verif fail follow error openssl_cert_error __function__ openssl_cert_error openssl_cert_error )); printf fail cert ""); x509_print_fp stdout cur_cert next call print signatur use fingerprint fingerprint check anticip valu determin whether server cert approv x509_signature_print bio_err cur_cert sig_alg cur_cert signatur openssl_cert_error approv bio_fre bio_err return approv test1 exercis server side variat trigger static void us895_test1 void est_ctx ctx unsign char pkey null unsign char cacert null int cacerts_len est_error est_err_non evp_pkey priv_key int csr_len unsign char csr_data null sleep log_func_nm read certif cacerts_len read_binary_fil server_ut_cacert cacert cu_assert cacerts_len read privat key file priv_key read_private_key server_ut_pubkey priv_key null printf (""\ error read privat key file server_ut_pubkey return ctx est_client_init cacert cacerts_len est_cert_format_pem cu_assert ctx null est_client_set_auth ctx """", """", null priv_key cu_assert est_err_non est_client_set_serv ctx us895_server_ip us895_proxy_port null clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit clear csrattr ectx null cu_assert est_err_non get 204 data ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len cu_assert csr_data null real base64 string pass ectx test_attr_pop strlen test_attr_pop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_pop )); cu_assert strncmp test_attr_pop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit callback supersed init csrattr ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len clear csrattr ectx null cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit set smallest base64 size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2 )); cu_assert strncmp test_attr2 const char csr_data csr_len ectx test_attr3 strlen test_attr3 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr3 )); cu_assert strncmp test_attr3 const char csr_data csr_len clear csrattr ectx null cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len ectx test_1024_nopop strlen test_1024_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_1024_nopop )); cu_assert strncmp test_1024_nopop const char csr_data csr_len enabl test respons st_enable_pop (); ectx test_attr_pop strlen test_attr_pop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_data null cu_assert csr_len cu_assert strncmp test_attr_pop const char csr_data csr_len ectx test_1024_nopop strlen test_1024_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_1024_pop )); cu_assert strncmp test_1024_pop const char csr_data csr_len set size 122 ectx test_attr4_122 strlen test_attr4_122 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr4_122pop )); cu_assert strncmp test_attr4_122pop const char csr_data csr_len set size 117 ectx test_attr5_117 strlen test_attr5_117 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr5_117pop )); cu_assert strncmp test_attr5_117pop const char csr_data csr_len real base64 string need pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopoppop )); cu_assert strncmp test_attr_nopoppop const char csr_data csr_len real base64 string fail ectx us900 test1 cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_pop )); cu_assert strncmp test_attr_pop const char csr_data csr_len set smallest size ectx test_attr2 strlen test_attr2 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2_pop )); cu_assert strncmp test_attr2_pop const char csr_data csr_len set size 116 ectx test_attr6_116 strlen test_attr6_116 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 244 ectx test_attr_244 strlen test_attr_244 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 245 ectx test_attr_245 strlen test_attr_245 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non set size 250 ectx test_attr_250 strlen test_attr_250 )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_250pop )); cu_assert strncmp test_attr_250pop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr1 )); cu_assert strncmp test_attr1 const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopoppop )); cu_assert strncmp test_attr_nopoppop const char csr_data csr_len est_set_csr_cb ectx printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr2_pop )); cu_assert strncmp test_attr2_pop const char csr_data csr_len disabl st_disable_pop (); clear callback est_set_csr_cb ectx null printf (""\ unabl set est csr attribut callback abort !!!\ ""); exit real base64 string pass ectx test_attr_nopop strlen test_attr_nopop )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_attr_nopop )); cu_assert strncmp test_attr_nopop const char csr_data csr_len asn type support cisco ssl ectx test_all_attr strlen test_all_attr )); cu_assert est_err_non ctx csr_data csr_len cu_assert est_err_non cu_assert csr_len strlen test_all_attr )); cu_assert strncmp test_all_attr const char csr_data csr_len ctx est_destroy ctx cacert free cacert pkey free pkey main function set run test return cue_success success run anoth cunit error code failur int us895_add_suit void ifdef have_cunit cu_p suit suit null add suit registri suit cu_add_suit us895_proxy_csrattr us895_init_suit us895_destroy_suit null suit cu_cleanup_registri (); return cu_get_error (); add test suit null cu_add_test suit csr proxi attribut api1 us895_test1 ))) cu_cleanup_registri (); return cu_get_error (); return cue_success endif"
