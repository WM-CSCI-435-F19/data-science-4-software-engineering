▁70 ▁" Notification ▁ Processing ▁// ▁member ▁variables ▁for ▁menu ▁private ▁J Menu Bar ▁menu Bar ; ▁// ▁subscriber ▁list ▁private ▁J List ▁SubscriberList ; ▁private ▁Default List Model ▁listModel ; ▁// ▁popup ▁menu ▁private ▁ JPopupMenu ▁popup ; ▁// ▁database ▁and ▁eventserver ▁information ▁S ▁public ▁Notification _ Processing () ▁{ ▁setDefault CloseOperation ( JFrame . DO _ NOT HING _ ON _ C LO SE ); ▁add Window Listener ( ▁new ▁Window Adapter () ▁{ ▁public ▁void ▁window Closing ( Window Event ▁ev t ) ▁{ ▁try ▁public ▁static ▁void ▁main ( String ▁args []) ▁{ ▁try ▁{ ▁Notification _ Processing ▁mainFrame ▁= ▁new ▁Notification _ Processing (); ▁mainFrame . ▁setSize ( 600 , ▁400 ); ▁mainFrame . ▁ setLocation ( 10 0, ▁100 ); ▁mainFrame . ▁void ▁exit A pplication () ▁{ ▁try ▁{ ▁int ▁ re p ly ▁= ▁JOptionPane . ▁show Confirm Dialog ( ▁this , ▁"" D o ▁you ▁real ly ▁want ▁to ▁exit ? "", ▁"" No ▁// ▁action ▁for ▁"" Open ▁log ▁database "" ▁private ▁void ▁open MenuItem ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁new ▁ Config Dialog ( ▁this , ▁true ) . ▁show (); ▁if ( ▁m _ DSN . ▁equals ( """") ▁|| ▁m _ EventServerIP . ▁equals ( """") ▁|| ▁m _ // ▁action ▁for ▁"" Close ▁log ▁database "" ▁private ▁void ▁save MenuItem ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁try ▁{ ▁m _ ▁conn . ▁close (); ▁m _ DSN =""""; ▁m _ EventServerIP =""""; ▁m _ EventServer P or t =""""; ▁// ▁action ▁for ▁"" ▁exit "" ▁private ▁void ▁exit MenuItem ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁exit A pplication (); ▁} ▁// ▁action ▁for ▁"" Open ▁Events "" ▁in ▁popup ▁menu ▁private ▁void ▁popup Open ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁open Events MenuItem ActionPerformed ( ▁ev t ); ▁} ▁// ▁action ▁for ▁"" Open ▁Events "" ▁private ▁void ▁open Events MenuItem ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁if ▁(! ▁listModel . ▁ isEmpty ()) ▁{ ▁int ▁index ▁= ▁SubscriberList . ▁ getSelectedIndex (); ▁if ▁( ▁index ▁ != ▁-1) ▁// ▁action ▁for ▁"" ▁double ▁clic k ▁on ▁Subscriber ▁List "" ▁private ▁void ▁doubleClick Su b s c ri ber List ▁( MouseEvent ▁ev t ) ▁{ ▁if ▁(! ▁listModel . ▁ isEmpty ()) ▁{ ▁int ▁index ▁= ▁SubscriberList . ▁ getSelectedIndex (); ▁if ▁( ▁index ▁ != ▁-1 ▁// ▁action ▁for ▁"" About "" ▁private ▁void ▁about MenuItem ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁new ▁AboutDialog ▁( ▁this , ▁true ) . ▁show (); ▁} ▁void ▁Update Display List () ▁{ ▁listModel . ▁ re moveAllElements (); ▁String ▁mSQL ▁= ▁"" SELECT ▁di st in ct ▁SubscriberName ▁FR OM ▁EventDetail s ""; ▁try ▁{ ▁rs ▁= ▁stmt . ▁ executeQuery ( ▁mSQL ); ▁while ▁( ▁rs . ▁next ()) ▁{ ▁"