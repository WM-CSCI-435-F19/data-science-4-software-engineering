▁6 8 ▁" Events ▁Process or ▁// ▁event ▁list ▁private ▁J List ▁eventList ; ▁private ▁Default List Model ▁listModel ; ▁private ▁ArrayList ▁events ; ▁// ▁popup ▁menu ▁private ▁ JPopupMenu ▁popup ; ▁// ▁Subscriber ▁name ▁String ▁m _ SubscriberName ; ▁// ▁list ▁of ▁requirements ▁to ▁be ▁d ▁public ▁ EventsProcessor ( Notification _ Processing ▁parent , ▁boolean ▁modal , ▁String ▁ Su b s Name ) ▁{ ▁setTitle ("" EventsProcessor ""); ▁add Window Listener ( ▁new ▁Window Adapter () ▁{ ▁public ▁void ▁window Closing ( WindowEve ▁void ▁exit A pplication () ▁{ ▁m _ ▁parent . Update Display List (); ▁this . ▁setVisible ( ▁false ); ▁this . ▁dispose (); ▁} ▁// ▁action ▁for ▁"" ▁double ▁clic k ▁on ▁Event ▁List "" ▁private ▁void ▁doubleClick EventList ▁( MouseEvent ▁ev t ) ▁{ ▁int ▁index ▁= ▁eventList . ▁ getSelectedIndex (); ▁if ▁( ▁index ▁ != ▁-1) ▁{ ▁try ▁{ ▁Notification ▁// ▁action ▁for ▁"" Open ▁ First ▁ Record "" ▁in ▁popup ▁menu ▁private ▁void ▁popup Open ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁if ▁(! ▁listModel . ▁ isEmpty ()) ▁{ ▁int ▁index ▁ =0; ▁try ▁{ ▁Notification _ Event ▁nEvt 1 ▁= ▁( Not if i ca ti ▁/ ▁action ▁for ▁"" View ▁Current ▁ Record "" ▁in ▁popup ▁menu ▁private ▁void ▁popup View ActionPerformed ▁( ActionEvent ▁ev t ) ▁{ ▁int ▁index ▁= ▁eventList . ▁ getSelectedIndex (); ▁if ▁( ▁index ▁ != ▁-1) ▁{ ▁try ▁{ ▁ N ▁void ▁Delete Event ( String ▁SubscriberName , ▁String ▁ EventID ) ▁{ ▁try ▁{ ▁int ▁i , ▁j = -1; ▁for ▁( ▁i =0; ▁i < ▁events . ▁size (); ▁i ++) ▁{ ▁Notification _ Event ▁nEvt ▁= ▁( Notification _ Event ) ▁events . ▁get ( ▁i ); ▁i ▁void ▁Delete Re late d Events () ▁{ ▁while ▁( ▁m _ Delete requirement ▁List . ▁size ()!=0) ▁{ ▁Requirement ▁requirement = ▁( Requirement ) ( ▁m _ Delete requirement ▁List . ▁get (0) ); ▁m _ Delete requirement ▁List . ▁remove (0) ; ▁void ▁Add Subscription ( String ▁SubscriberName , ▁Requirement ▁requirement ▁) ▁{ ▁String ▁Subscriber Depend e nc y ▁= ▁"" Requirements ""; ▁String ▁Message ▁= ▁"" AD D _ SUBSCRIPTION "" +""|"" ; ▁Message ▁+= ▁m _ UserName ▁+ ▁""|"" ; ▁Message ▁+= ▁Subscriber void ▁Delete Subscription ( String ▁SubscriberName , ▁Requirement ▁requirement ▁) ▁{ ▁String ▁Message ▁= ▁"" RE MO VE _ SUBSCRIPTION "" +""|"" ; ▁Message ▁+= ▁SubscriberName ▁+ ▁""|"" ; ▁Message ▁+= ▁requirement ▁ . ▁m _ RequirementID ▁+ ▁"","" ; ▁Message ▁+= ▁ re q ▁void ▁Update Display List () ▁{ ▁listModel . ▁ re moveAllElements (); ▁for ▁( ▁int ▁j =0; ▁j < ▁events . ▁size (); ▁j ++) ▁{ ▁Notification _ Event ▁nEvt ▁= ▁( Notification _ Event ) ▁events . ▁get ( ▁j ); ▁String ▁display Stri ▁// ▁Pass es ▁a ▁C HE C K _ SUBSCRIPTION ▁message ▁to ▁the ▁eventserver ▁and ▁wait s ▁for ▁a ▁response ▁private ▁boolean ▁Check _ Subscription ( String ▁i p , ▁int ▁Port No , ▁String ▁SubscriberName , ▁String ▁Requirement ▁// ▁T a k es ▁an ▁event ▁string ▁returned ▁from ▁the ▁eventserver ▁and ▁// ▁extract s ▁True ▁or ▁False ▁response ▁private ▁boolean ▁Analyze _ Check Subscription ( String ▁str ) ▁{ ▁StringTokenizer ▁tokens ▁= ▁new ▁StringTokenizer ( ▁str ,""|""); ▁String ▁Messag "