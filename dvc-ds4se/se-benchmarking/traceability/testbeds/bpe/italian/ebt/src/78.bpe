▁78 ▁" Notification ▁Event ▁public ▁String ▁m _ SubscriberName ▁= ▁""""; ▁public ▁String ▁m _ EventID ▁= ▁""""; ▁public ▁String ▁m _ Message ▁type ▁= ▁""""; ▁public ▁String ▁m _ Event Type ▁= ▁""""; ▁public ▁int ▁m _ Number Of Requirements ▁= ▁0; ▁public ▁String ▁m _ Event Tim ▁// ▁constructor ▁public ▁Notification _ Event () ▁{ ▁m _ LeftSide ▁= ▁new ▁ArrayList (); ▁m _ RightS ide ▁= ▁new ▁ArrayList (); ▁} // ▁end ▁of ▁class ▁Notification _ Event ▁public ▁Object ▁clone () ▁throws ▁Cl one Not Su pportedException ▁{ ▁// ▁create ▁new ▁object ▁with ▁the ▁same ▁type ▁Notification _ Event ▁nEvt ▁= ▁( Notification _ Event ) ▁super . ▁clone (); ▁nEvt . ▁m _ LeftSide ▁= ▁new ▁ArrayList (); ▁n public ▁void ▁Parse Event ( String ▁TextLine ) ▁{ ▁String ▁msg ▁= ▁TextLine ; ▁if ( ▁msg . ▁start s With ("" Re - execute "" ) ▁) ▁{ ▁ModelDriver ▁m d ▁= ▁new ▁ModelDriver ( ▁msg ▁ ); ▁m d . ▁init (); ▁// To D o : ▁// ▁di vert ▁all ▁the ▁call s ▁fo ▁// ▁Set ▁the ▁other ▁members ▁before ▁call ing ▁this ▁function ▁public ▁void ▁Parse Left And RightList s ( String ▁Left Line , ▁String ▁Right Line ) ▁{ ▁m _ LeftSide ▁= ▁new ▁ArrayList (); ▁m _ RightS ide ▁= ▁new ▁ArrayList (); ▁if ▁( ▁m _ Eve ▁// Comment ▁Add ed ▁by ▁A mit ▁U chat ▁// This ▁method ▁display s ▁the ▁content s ▁of ▁two ▁array ▁list ▁to ▁con sol e ▁public ▁void ▁Display Values () ▁{ ▁System . ▁out . ▁println ("" \ ▁r \ ▁n Values ▁of ▁the ▁event : \ ▁r \ ▁n ""); ▁System . ▁out . ▁println ("" ▁"