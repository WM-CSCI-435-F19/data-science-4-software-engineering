▁p ackage ▁smos . application . userManagement ; ▁import ▁java . io . IOException ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . Collection ; ▁import ▁java . util . Iterator ; ▁import ▁java . util . Vector ; ▁import ▁java x . s ervlet . http . HttpServlet ; ▁import ▁java x . s ervlet . http . HttpServlet Request ; ▁import ▁java x . s ervlet . http . HttpServlet Response ; ▁import ▁java x . s ervlet . http . HttpSession ; ▁import ▁smos . Environment ; ▁import ▁smos . bean . Classroom ; ▁import ▁smos . bean . Role ; ▁import ▁smos . bean . User ; ▁import ▁smos . bean . UserListItem ; ▁import ▁smos . exception . Delete ManagerException ; ▁import ▁smos . exception . Entity N otFoundException ; ▁import ▁smos . exception . Invalid ValueException ; ▁import ▁smos . exception . Mandatory FieldException ; ▁import ▁smos . storage . ManagerClassroom ; ▁import ▁smos . storage . ManagerUser ; ▁import ▁smos . storage . connect ionManagement . exception . Connection Exception ; ▁p ublic ▁class ▁ServletAssign StudentClassroom ▁ext ends ▁HttpServlet ▁{ ▁/** ▁* ▁*/ ▁p rot ected ▁void ▁doGet ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁String ▁gotoPage ▁= ▁"./ s howUserList "; ▁String ▁errorMessage ▁= ▁" "; ▁ HttpSession ▁session ▁= ▁pRequest . get Session (); ▁ManagerUser ▁managerUser ▁= ▁ManagerUser . get Instance (); ▁ ManagerClassroom ▁ managerClassroom ▁= ▁ ManagerClassroom . get Instance (); ▁User ▁loggedUser ▁= ▁( User ) ▁session . get Attribute (" loggedUser "); ▁// ▁Verifica ▁che ▁l ' utente ▁abbia ▁effettuato ▁il ▁login ▁try ▁{ ▁if ▁( loggedUser ▁== ▁null ) ▁{ ▁pResponse . se ndRe direct ( "./ index . htm "); ▁return ; ▁} ▁if ▁((! managerUser . isAdministrator ( loggedUser ))) ▁{ ▁errorMessage ▁= ▁" L ' Utente ▁collegat o ▁non ▁ha ▁accesso ▁alla ▁" ▁+ ▁" funzionalit a '! "; ▁gotoPage ▁= ▁"./ error . jsp "; ▁} ▁// ▁Studente ▁selezionato ▁User ▁user ▁= ▁( User ) ▁session . get Attribute (" user "); ▁// ▁anno ▁accademico ▁selezionato ▁int ▁academicYear ▁= ▁Integer . valueOf ( pRequest ▁ . getParameter (" accademicYear ") ); ▁// ▁id ▁classe ▁selezionata ▁che ▁e ' ▁zero ▁se ▁vogli amo ▁eliminare ▁// ▁l ' associazione ▁int ▁idClassroom ▁= ▁Integer . valueOf ( pRequest . getParameter (" class Id ") ); ▁Classroom ▁p ▁= ▁null ; ▁p ▁= ▁ managerClassroom . getClassroomBy User AcademicYear ( user , academicYear ); ▁if ▁( p ▁ != ▁null ) ▁managerUser . remove StudentClassroom ( user , ▁p . getId Classroom ()); ▁if ( idClassroom > 0) ▁{ ▁managerUser . assign StudentClassroom ( user , ▁idClassroom ); ▁} ▁} ▁ catch ▁( Number FormatException ▁number FormatException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁number FormatException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁number FormatException . printStackTrace (); ▁} ▁ catch ▁( Entity N otFoundException ▁entit yN otFoundException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁entit yN otFoundException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁entit yN otFoundException . printStackTrace (); ▁} ▁ catch ▁( SQLException ▁SQLException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁SQLException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁SQLException . printStackTrace (); ▁} ▁ catch ▁( Connection Exception ▁connection Exception ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁connection Exception . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁connection Exception . printStackTrace (); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁ catch ▁( Invalid ValueException ▁e ) ▁{ ▁// ▁TODO ▁ Auto - generate d ▁ catch ▁block ▁e . printStackTrace (); ▁} ▁ catch ▁( Mandatory FieldException ▁e ) ▁{ ▁// ▁TODO ▁ Auto - generate d ▁ catch ▁block ▁e . printStackTrace (); ▁} ▁session . set Attribute (" errorMessage ", ▁errorMessage ); ▁try ▁{ ▁pResponse . se ndRe direct ( gotoPage ); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁} ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doPost ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doPost ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁this . doGet ( pRequest , ▁pResponse ); ▁} ▁}