▁p ackage ▁smos . application . userManagement ; ▁import ▁smos . Environment ; ▁import ▁smos . bean . Classroom ; ▁import ▁smos . bean . Teaching ; ▁import ▁smos . bean . User ; ▁import ▁smos . exception . Entity N otFoundException ; ▁import ▁smos . exception . Invalid ValueException ; ▁import ▁smos . storage . ManagerClassroom ; ▁import ▁smos . storage . ManagerTeaching ; ▁import ▁smos . storage . ManagerUser ; ▁import ▁smos . storage . connect ionManagement . exception . Connection Exception ; ▁import ▁java . io . IOException ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . Collection ; ▁import ▁java x . s ervlet . http . HttpServlet ; ▁import ▁java x . s ervlet . http . HttpServlet Request ; ▁import ▁java x . s ervlet . http . HttpServlet Response ; ▁import ▁java x . s ervlet . http . HttpSession ; ▁/** ▁* ▁Servlet ▁ utilizzata ▁per ▁visualizzare ▁tutti ▁gli ▁anni ▁accademic i ▁presenti ▁nel ▁* ▁db . ▁* ▁* ▁@ author ▁Giu lio ▁D ' Amora ▁* ▁@ version ▁1.0 ▁* ▁* ▁2009 ▁  ▁C opy right ▁by ▁SMOS ▁*/ ▁p ublic ▁class ▁ServletShow Teacher Teaching Form ByClass ▁ext ends ▁HttpServlet ▁{ ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁= ▁- 398 811 525 9 35608 499 6 L ; ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doGet ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doGet ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁String ▁gotoPage ▁= ▁"./ persist e ntDataManagement / userManagement / teacher Teachings . jsp "; ▁String ▁errorMessage ▁= ▁" "; ▁ HttpSession ▁session ▁= ▁pRequest . get Session (); ▁Collection < Teaching > ▁teachingList ▁= ▁null ; ▁ManagerUser ▁managerUser ▁= ▁ManagerUser . get Instance (); ▁User ▁loggedUser ▁= ▁( User ) ▁session . get Attribute (" loggedUser "); ▁// User ▁teacher ▁= ▁( User ) ▁session . get Attribute (" user "); ▁try ▁{ ▁if ▁( loggedUser ▁== ▁null ) ▁{ ▁pResponse . se ndRe direct ( "./ index . htm "); ▁return ; ▁} ▁if ▁(! managerUser . isAdministrator ( loggedUser )) ▁{ ▁errorMessage ▁= ▁" L ' Utente ▁collegat o ▁non ▁ha ▁accesso ▁alla ▁" ▁+ ▁" funzionalit a '! "; ▁gotoPage ▁= ▁"./ error . jsp "; ▁} ▁// ▁recuper iamo ▁l ' id ▁della ▁classe ▁selezionata ▁int ▁ selectedClassId ▁= ▁Integer . valueOf ( pRequest . getParameter (" class Id ") ); ▁ManagerTeaching ▁managerTeaching ▁= ▁ManagerTeaching . get Instance (); ▁// Calcol iamo ▁l ' elenco ▁degli ▁insegnamenti ▁associati ▁alla ▁class ▁e selezionata ▁teachingList ▁= ▁managerTeaching . getTeachingsBy Classroom Id ( selectedClassId ); ▁session . set Attribute (" teachingList ", ▁teachingList ); ▁Classroom ▁selectedClass ▁= ▁ ManagerClassroom . get Instance () . getClassroomBy ID ( selectedClassId ); ▁session . set Attribute (" selectedClass ", ▁selectedClass ); ▁pResponse . se ndRe direct ( gotoPage ); ▁return ; ▁} ▁ catch ▁( SQLException ▁sqlException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁sqlException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁sqlException . printStackTrace (); ▁} ▁ catch ▁( Entity N otFoundException ▁entit yN otFoundException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁entit yN otFoundException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁entit yN otFoundException . printStackTrace (); ▁} ▁ catch ▁( Connection Exception ▁connection Exception ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁connection Exception . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁connection Exception . printStackTrace (); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁ catch ▁( Invalid ValueException ▁invalid ValueException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁invalid ValueException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁invalid ValueException . printStackTrace (); ▁} ▁pRequest . get Session () . set Attribute (" errorMessage ", ▁errorMessage ); ▁try ▁{ ▁pResponse . se ndRe direct ( gotoPage ); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error 6. jsp "; ▁ioException . printStackTrace (); ▁} ▁} ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doPost ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doPost ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁this . doGet ( pRequest , ▁pResponse ); ▁} ▁}