▁p ackage ▁smos . storage . connect ionManagement ; ▁import ▁java . sql .* ; ▁/** ▁* ▁Implement azione ▁del ▁thread ▁in ▁grado ▁di ▁man tenere ▁la ▁connessione ▁al ▁database ▁* ▁Mysql ▁qual ora ▁non ▁vi ▁sia no ▁pi ù ▁connessioni ▁attive ▁( ri sol uzione ▁del ▁problema ▁* ▁dell ' a uto re connect ▁di ▁Mysql ) . ▁Tal e ▁classe ▁si ▁occupa ▁ anch e ▁di ▁richi mare ▁il ▁* ▁metodo ▁di ▁rilasci o ▁delle ▁connessioni ▁attive ▁che ▁non ▁h anno ▁eseguito ▁operazioni ▁* ▁in ▁un ▁cert o ▁interval lo ▁di ▁tempo . ▁*/ ▁p ublic ▁class ▁Control Connection ▁ext ends ▁Thread ▁{ ▁priv ate ▁static ▁Connection PoolDataSource ▁manager ▁= ▁null ; ▁priv ate ▁static ▁int ▁waitTimeout ; ▁/** ▁* ▁Crea ▁una ▁nuova ▁i stanza ▁del ▁Thread . ▁* ▁* ▁@ author ▁Di ▁Gior gio ▁D omen ico , ▁Cri s ▁Ma li nc onico ▁* ▁@ param ▁pManager ▁* ▁il ▁pool ▁delle ▁connessioni ▁attu la mente ▁in ▁ esecuzione . ▁*/ ▁p ublic ▁Control Connection ( Connection PoolDataSource ▁pManager ) ▁{ ▁Control Connection . manager ▁= ▁pManager ; ▁} ▁/** ▁* ▁Crea ▁una ▁nuova ▁i stanza ▁del ▁Thread . ▁* ▁* ▁@ param ▁pManager ▁* ▁il ▁pool ▁delle ▁connessioni ▁attu la mente ▁in ▁ esecuzione . ▁* ▁@ param ▁pTime ▁* ▁Il ▁tempo ▁ entro ▁cui ▁rist abili re ▁la ▁connessione ▁con ▁mysql ▁prima ▁* ▁che ▁s ca da . T ale ▁valore ▁dovr à ▁essere ▁necessari amente ▁min o re ▁del ▁* ▁valore ▁della ▁variabil e ▁g lo bale ▁ w a it _ time out ▁di ▁Mysql . ▁*/ ▁p ublic ▁Control Connection ( Connection PoolDataSource ▁pManager , ▁int ▁pTime ) ▁{ ▁Control Connection . waitTimeout ▁= ▁pTime ; ▁Control Connection . manager ▁= ▁pManager ; ▁} ▁/** ▁* ▁Il ▁thread ▁non ▁fa ▁al tro ▁che ▁do rmi re ▁qua ndo ▁ci ▁sono ▁utenti ▁attivi ▁e ▁* ▁man tenere ▁a per ta ▁la ▁connessione ▁con ▁M y SQL ▁altrimenti . ▁* ▁*/ ▁p ublic ▁void ▁run () ▁{ ▁try ▁{ ▁while ▁( true ) ▁{ ▁if ▁( manager . activeSize () ▁ > ▁0) ▁{ ▁this . set Priority ( Thread . MA X _ PRIORITY ); ▁manager . clear Active (); ▁this . set Priority ( Thread . NO RM _ PRIORITY ); ▁} ▁if ▁( manager . activeSize () ▁== ▁0) ▁{ ▁while ▁( true ) ▁{ ▁try ▁{ ▁manager . closeAll PooledConnection s (); ▁Connection ▁con ▁= ▁null ; ▁con ▁= ▁manager . getConnection (); ▁Statement ▁st ▁= ▁con . createStatement (); ▁st . executeQuery (" show ▁tables "); ▁manager . release ( con ); ▁brea k ; ▁} ▁ catch ▁( Exception ▁e ) ▁{ ▁System . out . println (" E ccezione ▁g ene ata ▁" ▁+ ▁" nel ▁Thread ▁Control Connection :" ▁+ ▁e ); ▁} ▁} ▁Thread . s le ep ( waitTimeout ); ▁} ▁else ▁{ ▁Thread . s le ep ( waitTimeout ); ▁} ▁} ▁} ▁ catch ▁( Interrupt edException ▁ex ) ▁{ ▁System . out . println (" Thread ▁Control Connection ▁interro tto :" ▁+ ▁ex ); ▁} ▁} ▁}