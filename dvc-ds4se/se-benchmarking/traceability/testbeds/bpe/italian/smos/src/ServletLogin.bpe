▁p ackage ▁smos . application . userManagement ; ▁import ▁smos . Environment ; ▁import ▁smos . bean . User ; ▁import ▁smos . exception . Entity N otFoundException ; ▁import ▁smos . exception . Invalid ValueException ; ▁import ▁smos . exception . LoginException ; ▁import ▁smos . storage . ManagerUser ; ▁import ▁smos . storage . connect ionManagement . exception . Connection Exception ; ▁import ▁java . io . IOException ; ▁import ▁java . sql . SQLException ; ▁import ▁java x . s ervlet . http . HttpServlet ; ▁import ▁java x . s ervlet . http . HttpServlet Request ; ▁import ▁java x . s ervlet . http . HttpServlet Response ; ▁import ▁java x . s ervlet . http . HttpSession ; ▁/** ▁* ▁Servlet ▁ utilizzata ▁per ▁effettuare ▁il ▁login ▁dell ' utente . ▁* ▁* ▁@ author ▁Napoli ta no ▁Vincen zo . ▁*/ ▁p ublic ▁class ▁Servlet Login ▁ext ends ▁HttpServlet ▁{ ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁= ▁1 L ; ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doGet ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doGet ( HttpServlet Request ▁pRequest , HttpServlet Response ▁pResponse ) ▁{ ▁String ▁gotoPage ▁= ▁" "; ▁String ▁errorMessage ▁= ▁" "; ▁ HttpSession ▁session ▁= ▁pRequest . get Session (); ▁// ▁Otten go ▁i ▁dati ▁dall a ▁request ▁String ▁login ▁= ▁pRequest . getParameter (" user "); ▁String ▁password ▁= ▁pRequest . getParameter (" password "); ▁// ▁Login ▁dell ' utente ▁try ▁{ ▁ManagerUser ▁managerUser ▁= ▁ManagerUser . get Instance (); ▁if ( managerUser . getUserBy Login ( login ) ▁ != ▁null ){ ▁User ▁loggedUser ▁= ▁managerUser . login ( login , ▁password ); ▁if ▁( loggedUser ▁ != ▁null ) ▁session . set Attribute (" loggedUser ", ▁loggedUser ); ▁else ▁throw ▁new ▁LoginException (" Nome ▁Utente ▁e / o ▁Password ▁errati !" ); ▁if ▁( managerUser . isAdministrator ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / home Admin . jsp "; ▁} else ▁if ▁( managerUser . isTeacher ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / homeP rofessor . jsp "; ▁} else ▁if ▁( managerUser . isStudent ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / home Student . jsp "; ▁} else ▁if ▁( managerUser . isParent ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / home Parent . jsp "; ▁} else ▁if ▁( managerUser . is AtaPeople ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / home AtaPeople . jsp "; ▁} else ▁if ▁( managerUser . isDirector ( loggedUser ) ▁ ){ ▁gotoPage ="./ homeP age / home Di re ct or . jsp "; ▁} ▁} ▁} ▁ catch ▁( LoginException ▁loginException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁loginException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁loginException . printStackTrace (); ▁} ▁ catch ▁( Connection Exception ▁connection Exception ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁connection Exception . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁connection Exception . printStackTrace (); ▁} ▁ catch ▁( SQLException ▁sqlException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁sqlException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁sqlException . printStackTrace (); ▁} ▁ catch ▁( Entity N otFoundException ▁entit yN otFoundException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁entit yN otFoundException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁entit yN otFoundException . printStackTrace (); ▁} ▁ catch ▁( Invalid ValueException ▁invalid ValueException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁invalid ValueException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁invalid ValueException . printStackTrace (); ▁} ▁session . set Attribute (" errorMessage ", ▁errorMessage ); ▁try ▁{ ▁pResponse . se ndRe direct ( gotoPage ); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁} ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doPost ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doPost ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁this . doGet ( pRequest , ▁pResponse ); ▁} ▁}