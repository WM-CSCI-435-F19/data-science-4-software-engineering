▁p ackage ▁smos . application . re gisterManagement ; ▁import ▁java . io . IOException ; ▁import ▁java . sql . SQLException ; ▁import ▁java x . s ervlet . http . HttpServlet ; ▁import ▁java x . s ervlet . http . HttpServlet Request ; ▁import ▁java x . s ervlet . http . HttpServlet Response ; ▁import ▁java x . s ervlet . http . HttpSession ; ▁import ▁smos . Environment ; ▁import ▁smos . bean . Classroom ; ▁import ▁smos . bean . Note ; ▁import ▁smos . bean . User ; ▁import ▁smos . exception . Entity N otFoundException ; ▁import ▁smos . exception . Invalid ValueException ; ▁import ▁smos . exception . Mandatory FieldException ; ▁import ▁smos . storage . ManagerRegister ; ▁import ▁smos . storage . ManagerUser ; ▁import ▁smos . storage . connect ionManagement . exception . Connection Exception ; ▁import ▁smos . utility . Utility ; ▁p ublic ▁class ▁Servlet I nsertNewNote ▁ext ends ▁HttpServlet ▁{ ▁/** ▁* ▁*/ ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁= ▁-6 4963 60730 20 1 10 13 00 L ; ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doGet ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doGet ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁String ▁gotoPage ▁= ▁" "; ▁String ▁errorMessage ▁= ▁" "; ▁ HttpSession ▁session ▁= ▁pRequest . get Session (); ▁ManagerUser ▁managerUser ▁= ▁ManagerUser . get Instance (); ▁User ▁loggedUser ▁= ▁( User ) ▁session . get Attribute (" loggedUser "); ▁// instan ziare ▁gli ▁oggett i ▁qua ▁ManagerRegister ▁managerRegister ▁= ▁ManagerRegister . get Instance (); ▁try ▁{ ▁if ▁( loggedUser ▁== ▁null ) ▁{ ▁pResponse . se ndRe direct ( "./ index . htm "); ▁return ; ▁} ▁if ▁(! managerUser . isAdministrator ( loggedUser )) ▁{ ▁errorMessage ▁= ▁" L ' Utente ▁collegat o ▁non ▁ha ▁accesso ▁alla ▁" ▁+ ▁" funzionalit a '! "; ▁gotoPage ▁= ▁"./ error . jsp "; ▁} ▁// settare ▁le ▁cos e ▁da ▁passa re ▁alla ▁session , ▁usa re ▁session . set Attribute ( String , ▁attribute ) ▁if ( pRequest . getParameter (" insert ") == null ){ ▁User ▁student ▁= ( User ) ▁session . get Attribute (" student "); ▁// managerUser . getUserBy Id ( Integer . valueOf ( ( String ) pRequest . get Attribute (" student "))); ▁session . set Attribute (" student ", ▁student ); ▁session . set Attribute (" idStudent ", ▁student . getId ()); ▁gotoPage ="./ re gisterManagement / i nsertNewNote . jsp "; ▁} else { ▁Note ▁nNote = ▁new ▁Note (); ▁nNote . s etAcademicYear ((( Classroom ) ▁session . get Attribute (" classroom ")) . getAcademicYear ()); ▁nNote . set DateNote ( Utility . String 2 Date ( pRequest . getParameter (" dateNote "))); ▁nNote . set IdUser ( ( Integer ) ▁session . get Attribute (" idStudent ") ); ▁nNote . set Teacher ( pRequest . getParameter (" note Teacher ") ); ▁nNote . set Description ( pRequest . getParameter (" note Description ") ); ▁try { ▁managerRegister . insert Note ( nNote ); ▁gotoPage ="./ showNoteList ? student ="+ session . get Attribute (" idStudent "); ▁} catch ( Mandatory FieldException ▁e ){ ▁session . set Attribute (" error ", ▁e . getMessage ()); ▁gotoPage ="./ re gisterManagement / i nsertNewNote . jsp "; ▁} ▁} ▁pResponse . se ndRe direct ( gotoPage ); ▁return ; ▁} ▁ catch ▁( SQLException ▁sqlException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁sqlException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁sqlException . printStackTrace (); ▁} ▁ catch ▁( Entity N otFoundException ▁entit yN otFoundException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁entit yN otFoundException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁entit yN otFoundException . printStackTrace (); ▁} ▁ catch ▁( Connection Exception ▁connection Exception ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁connection Exception . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁connection Exception . printStackTrace (); ▁} catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} catch ▁( Invalid ValueException ▁invalid ValueException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁invalid ValueException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁invalid ValueException . printStackTrace (); ▁} ▁pRequest . get Session () . set Attribute (" errorMessage ", ▁errorMessage ); ▁try ▁{ ▁pResponse . se ndRe direct ( gotoPage ); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁} ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doPost ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doPost ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁this . doGet ( pRequest , ▁pResponse ); ▁} ▁}