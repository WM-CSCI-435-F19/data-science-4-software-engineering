▁p ackage ▁smos . application . a ddressManagement ; ▁import ▁java . io . IOException ; ▁import ▁java . sql . SQLException ; ▁import ▁java x . s ervlet . http . HttpServlet ; ▁import ▁java x . s ervlet . http . HttpSession ; ▁import ▁java x . s ervlet . http . HttpServlet Request ; ▁import ▁java x . s ervlet . http . HttpServlet Response ; ▁import ▁smos . Environment ; ▁import ▁smos . bean . User ; ▁import ▁smos . bean . Address ; ▁import ▁smos . exception . Duplicate dEntityException ; ▁import ▁smos . exception . Entity N otFoundException ; ▁import ▁smos . exception . Invalid ValueException ; ▁import ▁smos . exception . Mandatory FieldException ; ▁import ▁smos . storage . ManagerAddress ; ▁import ▁smos . storage . ManagerUser ; ▁import ▁smos . storage . connect ionManagement . exception . Connection Exception ; ▁/** ▁* ▁Servlet ▁ utilizzata ▁per ▁inserire ▁un ▁indirizzo ▁nel ▁database ▁* ▁* ▁@ author ▁ Vecchi one ▁Giuseppe ▁*/ ▁p ublic ▁class ▁ServletInsert Address ▁ext ends ▁HttpServlet ▁{ ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁= ▁ 83189 058 33 953 1878 14 L ; ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doGet ▁* ▁* ▁@ param ▁pRequest ▁* ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p ublic ▁void ▁doGet ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ){ ▁String ▁gotoPage ="./ showAddressList "; ▁String ▁errorMessage =" "; ▁ HttpSession ▁session ▁= ▁pRequest . get Session (); ▁ManagerUser ▁managerUser = ▁ManagerUser . get Instance (); ▁ManagerAddress ▁managerAddress = ▁ManagerAddress . get Instance (); ▁User ▁loggedUser ▁= ▁( User ) ▁session . get Attribute (" loggedUser "); ▁try ▁{ ▁if ( loggedUser == null ){ ▁pResponse . se ndRe direct ( "./ index . htm "); ▁return ; ▁} ▁if (! managerUser . isAdministrator ( loggedUser )){ ▁errorMessage = ▁" L ' ▁utente ▁collegat o ▁non ▁ha ▁accesso ▁alla ▁funzionalit a '! "; ▁gotoPage ="./ error . jsp "; ▁} ▁Address ▁address = ▁new ▁Address (); ▁address . setName ( pRequest . getParameter (" name ") ); ▁/** ▁* ▁ Verific h iamo ▁che ▁l ' ▁indirizzo ▁non ▁sia ▁presente ▁nel ▁database ▁* ▁e ▁lo ▁inser iamo ▁*/ ▁if (! managerAddress . exists ( address )){ ▁managerAddress . insert ( address ); ▁} else { ▁throw ▁new ▁ Duplicate dEntityException (" Indirizzo ▁gia ' ▁esistente "); ▁} ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁ catch ▁( SQLException ▁sqlException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁sqlException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁sqlException . printStackTrace (); ▁} ▁ catch ▁( Entity N otFoundException ▁entit yN otFoundException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁entit yN otFoundException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁entit yN otFoundException . printStackTrace (); ▁} ▁ catch ▁( Connection Exception ▁connection Exception ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁connection Exception . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁connection Exception . printStackTrace (); ▁} ▁ catch ▁( Mandatory FieldException ▁mandat o ryFieldException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁mandat o ryFieldException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁mandat o ryFieldException . printStackTrace (); ▁} ▁ catch ▁( Invalid ValueException ▁invalid ValueException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁invalid ValueException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁invalid ValueException . printStackTrace (); ▁} ▁ catch ▁( Duplicate dEntityException ▁duplicate dEntityException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁duplicate dEntityException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁duplicate dEntityException . printStackTrace (); ▁} ▁session . set Attribute (" errorMessage ", ▁errorMessage ); ▁try ▁{ ▁pResponse . se ndRe direct ( gotoPage ); ▁} ▁ catch ▁( IOException ▁ioException ) ▁{ ▁errorMessage ▁= ▁Environment . DEF A ULT _ ERROR _ MESSAGE ▁+ ▁ioException . getMessage (); ▁gotoPage ▁= ▁"./ error . jsp "; ▁ioException . printStackTrace (); ▁} ▁} ▁/** ▁* ▁Definizione ▁del ▁metodo ▁doPost ▁* ▁* ▁@ param ▁pRequest ▁* ▁@ param ▁pResponse ▁* ▁*/ ▁p rot ected ▁void ▁doPost ( HttpServlet Request ▁pRequest , ▁HttpServlet Response ▁pResponse ) ▁{ ▁this . doGet ( pRequest , ▁pResponse ); ▁} ▁}