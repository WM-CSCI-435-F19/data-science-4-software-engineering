▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁modul i .* ; ▁p ublic ▁class ▁Aggiungi BeneServizio ▁ext ends ▁Inserisci BeniServizi ▁{ ▁Button ▁annulla 1, ▁annulla 2, ▁conferma 1, ▁conferma 2; ▁TextField ▁ tf _ supp , ▁ tf _ rid , ▁ tf _ stanza _ supp , ▁ tf _ stanza _ rid , ▁ tf _ mot _ supp , ▁ tf _ mot _ rid ; ▁Label ▁label _ supp , ▁label _ rid , ▁label _ stanza _ supp , ▁label _ stanza _ rid , ▁label _ mot _ supp , ▁label _ mot _ rid ; ▁p ublic ▁Aggiungi BeneServizio ( Frame ▁parent ) ▁{ ▁super (" Cre azione ▁di ▁un ▁nuovo ▁bene / servizio / riduzione / supplemento "); ▁padre ▁= ▁parent ; ▁padre . setEnabled ( false ); ▁setup Nuov i (); ▁inizializza (); ▁setSize ( 45 0, 600 ); ▁ setVisible ( true ); ▁} ▁void ▁setup Nuov i () ▁{ ▁// Cre o ▁i ▁pannelli ▁remove ( panel [0] ); ▁panel [0] ▁= ▁new ▁Panel (); ▁panel [0]. setLayout ( grid 1); ▁panel [0]. setVisible ( false ); ▁// Cre o ▁il ▁pannello ▁in ▁alto ▁label ▁= ▁new ▁Label (" Tip i "); ▁label . setFont ( Configurazione Sistema . font _ titolo ); ▁tipi ▁= ▁new ▁CheckboxGroup (); ▁panel [0]. add ( label ); ▁panel [0]. add ( prima _ scelta [0] ); ▁panel [0]. add ( prima _ scelta [1] ); ▁panel [0]. add ( prima _ scelta [2] ); ▁panel [0]. add ( prima _ scelta [3] ); ▁panel [0]. add ( prima _ scelta [4] ); ▁panel [0]. setVisible ( true ); ▁// Attac co ▁il ▁pannello ▁in ▁alto ▁al ▁frame ▁this . setLayout ( grid ); ▁this . add ( panel [0] ); ▁// Cre o ▁il ▁pannello ▁supplemento ▁panel [11] . setLayout ( gridbag ); ▁label _ supp ▁= ▁new ▁Label (" A mmon tare ▁del ▁supplemento ▁"+( Principale . config ) . get Valuta ()+"." ); ▁ tf _ supp ▁= ▁new ▁TextField ("", ▁10 ); ▁label _ stanza _ supp ▁= ▁new ▁Label (" A ▁caric o ▁della ▁stanza ▁numero "); ▁ tf _ stanza _ supp ▁= ▁new ▁TextField ("", ▁6 ); ▁if ▁( padre ▁instance of ▁MascheraC ontoRistorazione ) ▁ tf _ stanza _ supp . setEnabled ( false ); ▁label _ mot _ supp ▁= ▁new ▁Label (" Mo tivazione "); ▁ tf _ mot _ supp ▁= ▁new ▁TextField ("", ▁3 5); ▁annulla 1 ▁= ▁new ▁Button (" Annulla "); ▁conferma 1 ▁= ▁new ▁Button (" Conferma "); ▁ Utils . constrain ( panel [11] , ▁label _ supp , ▁0, ▁0, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁ tf _ supp , ▁1, ▁0, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁label _ stanza _ supp , ▁0, ▁1, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁ tf _ stanza _ supp , ▁1, ▁1, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁label _ mot _ supp , ▁0, ▁2, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁ tf _ mot _ supp , ▁1, ▁2, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁annulla 1, ▁1, ▁3, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . EAST , ▁ 0.0, ▁ 0.0, ▁ 5, ▁0, ▁ 5, ▁10 ); ▁ Utils . constrain ( panel [11] , ▁conferma 1, ▁3, ▁3, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 10, ▁ 5, ▁0) ; ▁// Cre o ▁il ▁pannello ▁riduzione ▁panel [12]. setLayout ( gridbag ); ▁label _ rid ▁= ▁new ▁Label (" A mmon tare ▁della ▁riduzione ▁"+( Principale . config ) . get Valuta ()+"." ); ▁ tf _ rid ▁= ▁new ▁TextField ("", 10 ); ▁label _ stanza _ rid ▁= ▁new ▁Label (" A ▁caric o ▁della ▁stanza ▁numero "); ▁ tf _ stanza _ rid ▁= ▁new ▁TextField ("", ▁6 ); ▁if ▁( padre ▁instance of ▁MascheraC ontoRistorazione ) ▁ tf _ stanza _ rid . setEnabled ( false ); ▁label _ mot _ rid ▁= ▁new ▁Label (" Mo tivazione "); ▁ tf _ mot _ rid ▁= ▁new ▁TextField ("", ▁3 5); ▁annulla 2 ▁= ▁new ▁Button (" Annulla "); ▁conferma 2 ▁= ▁new ▁Button (" Conferma "); ▁ Utils . constrain ( panel [12] , ▁label _ rid , ▁0, ▁0, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁ tf _ rid , ▁1, ▁0, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁label _ stanza _ rid , ▁0, ▁1, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁ tf _ stanza _ rid , ▁1, ▁1, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁label _ mot _ rid , ▁0, ▁2, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁ tf _ mot _ rid , ▁1, ▁2, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁annulla 2, ▁1, ▁3, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . EAST , ▁ 0.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁conferma 2, ▁2, ▁3, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁0) ; ▁} ▁p ublic ▁void ▁inizializza () ▁{ ▁prima _ scelta [3]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( prima _ scelta [3]. getStat e ()) ▁{ ▁inComune DE ( 11 , ▁BeneServizio . SUPPLEMENTI ); ▁} ▁} ▁} ); ▁prima _ scelta [4]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( prima _ scelta [4]. getStat e ()) ▁{ ▁inComune DE ( 12, ▁BeneServizio . RIDUZIONI ); ▁} ▁} ▁} ); ▁annulla 1. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁padre . setEnabled ( true ); ▁} ▁} ); ▁annulla 2. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁padre . setEnabled ( true ); ▁} ▁} ); ▁conferma 1. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁ scrivi Su DB ( ▁ tf _ supp . getText (), ▁ tf _ stanza _ supp . getText (), ▁ tf _ mot _ supp . getText () ▁ ); ▁} ▁} ); ▁conferma 2. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁ scrivi Su DB ( ▁new ▁String (" - "+ tf _ rid . getText ()), ▁ tf _ stanza _ rid . getText (), ▁ tf _ mot _ rid . getText () ▁ ); ▁} ▁} ); ▁} ▁// ▁init ▁void ▁inComune DE ( int ▁numero _ pannello , ▁char ▁c ) ▁{ ▁ level ▁= ▁0; ▁for ( int ▁i =1; i <13; ++ i ) ▁{ ▁if ( panel [ i ]. isVisible ()) ▁remove ( panel [ i ]); ▁} ▁this . add ( panel [ numero _ pannello ]); ▁panel [ numero _ pannello ]. setVisible ( true ); ▁ setVisible ( true ); ▁codice ▁= ▁compos e Code ( level , ▁c ); ▁} ▁void ▁ scrivi Su DB ( String ▁sup _ rid , ▁String ▁stanza , ▁String ▁ mot ) ▁{ ▁MessageDialog ▁msg ; ▁complete Code (); ▁Float ▁px ▁= ▁Float . valueOf ( sup _ rid ); ▁extra ▁= ▁new ▁BeneServizio ( ( new ▁String ( codice )) ▁+ ▁torna Cod Id ( ( Principale . config ) . getIdBene servizio ()), ▁ mot , ▁px . float Value ()); ▁if ▁( padre ▁instance of ▁ MascheraAddebiti ) ▁{ ▁if ▁( ▁( ( Principale . db ) . read Stanza ( stanza ) ▁ != ▁null ) ▁&& ▁ Utils . is Float Pos ( sup _ rid ) ▁&& ▁( mot . length () ▁< ▁33 ) ▁) ▁{ ▁L istaSoggiornanti ▁L _ sogg ▁= ▁( Principale . db ) . foundSoggiornant i ( stanza , ▁false ); ▁if ▁( L _ sogg ▁ != ▁null ) ▁{ ▁if ▁(! L _ sogg . isEmpty ()) ▁{ ▁int ▁j ; ▁if ▁( ( j ▁= ▁( Principale . db ) . new IdBene servizio ()) ▁== ▁DataBase . OK ) ▁{ ▁( Principale . config ) . update IdBene servizio (); ▁if ▁( ( j ▁= ▁( Principale . db ) . write BeneServizio ( extra )) ▁== ▁DataBase . OK ) ▁{ ▁Addebito ▁da _ addebitare ▁= ▁new ▁Addebito ( stanza , ▁extra . get Cod Extra (), ▁1, ▁px . float Value ()); ▁if ▁( ( j ▁= ▁( Principale . db ) . write Addebito ( da _ addebitare )) ▁== ▁DataBase . OK ) ▁{ ▁dispose (); ▁if ▁( ▁stanza . equals ((( MascheraAddebiti ) ▁padre ) . stanza _ prec ) ▁) ▁{ ▁((( MascheraAddebiti ) ▁padre ) . elenco _ addebiti ) . add Addebito ( da _ addebitare ); ▁((( MascheraAddebiti ) ▁padre ) . elenco _ extra _ addebitati ) . add BeneServizio ( extra ); ▁/* ▁tra va so ▁delle ▁quantita ▁modificate ▁nel ▁nuovo ▁array ▁per ▁poi ▁aggiungere ▁il ▁supplemento ▁o ▁riduzione ▁ appen a ▁inseriti ▁*/ ▁int ▁nuove _ quantita _ mod [] ▁= ▁new ▁int [ ( ( MascheraAddebiti ) ▁padre ) . elenco _ addebiti . length () ]; ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< ▁( ( MascheraAddebiti ) ▁padre ) . quantita _ mod . length ; ▁i ++) ▁nuove _ quantita _ mod [ i ] ▁= ▁( ( MascheraAddebiti ) ▁padre ) . quantita _ mod [ i ]; ▁nuove _ quantita _ mod [ nuove _ quantita _ mod . length -1] ▁= ▁0; ▁( ( MascheraAddebiti ) ▁padre ) . quantita _ mod ▁= ▁nuove _ quantita _ mod ; ▁( ( MascheraAddebiti ) ▁padre ) . continu a Aggiornamento (); ▁/* ▁se ▁il ▁numero ▁di ▁stanza ▁era ▁stato ▁cambiato ▁senza ▁addebiti ▁all ora ▁ri met to ▁il ▁precedente ▁numero ▁di ▁stanza ▁nel ▁text field ▁della ▁finestra ▁ Addebiti ▁*/ ▁} ▁if ▁( ▁!(( ( MascheraAddebiti ) ▁padre ) . num _ stanza . getText ()). equals ((( MascheraAddebiti ) ▁padre ) . stanza _ prec ) ▁) ▁( ( MascheraAddebiti ) ▁padre ) . num _ stanza . setText ( ▁( ( MascheraAddebiti ) ▁padre ) . stanza _ prec ▁ ); ▁padre . setEnabled ( true ); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" Errore ▁nell ' addebitare : ▁"+ DataBase . str Errore ( j )); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" P roblemi ▁con ▁il ▁database : ▁"+ DataBase . str Errore ( j )); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" Errore ▁nell ' aggiornamento : ▁"+ DataBase . str Errore ( j )); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁La ▁stanza ▁inserita ▁non ▁e ' ▁occupata ! ▁"); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ! ▁"); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" Errore ▁ne i ▁parametri !" ); ▁} ▁else ▁{ ▁// ▁si ▁t ratta ▁della ▁m aschera ▁del ▁conto ▁ristorazione ▁dispose (); ▁Addebito ▁da _ addebitare ▁= ▁new ▁Addebito (" RIST ", ▁extra . get Cod Extra (), ▁1, ▁px . float Value ()); ▁((( MascheraC ontoRistorazione ) ▁padre ) . elenco _ addebiti ) . add Addebito ( da _ addebitare ); ▁((( MascheraC ontoRistorazione ) ▁padre ) . elenco _ extra _ addebitati ) . add BeneServizio ( extra ); ▁/* ▁tra va so ▁delle ▁quantita ▁modificate ▁nel ▁nuovo ▁array ▁per ▁poi ▁aggiungere ▁il ▁supplemento ▁o ▁riduzione ▁ appen a ▁inseriti ▁*/ ▁int ▁nuove _ quantita _ mod [] ▁= ▁new ▁int [ ( ( MascheraC ontoRistorazione ) ▁padre ) . elenco _ addebiti . length () ]; ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< ▁( ( MascheraC ontoRistorazione ) ▁padre ) . quantita _ mod . length ; ▁i ++) ▁nuove _ quantita _ mod [ i ] ▁= ▁( ( MascheraC ontoRistorazione ) ▁padre ) . quantita _ mod [ i ]; ▁nuove _ quantita _ mod [ nuove _ quantita _ mod . length -1] ▁= ▁1; ▁( ( MascheraC ontoRistorazione ) ▁padre ) . quantita _ mod ▁= ▁nuove _ quantita _ mod ; ▁( ( MascheraC ontoRistorazione ) ▁padre ) . continu a Aggiornamento (); ▁padre . setEnabled ( true ); ▁} ▁} ▁}