▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁modul i . BeneServizio ; ▁import ▁modul i . DataBase ; ▁p ublic ▁class ▁Inserisci BeniServizi ▁ext ends ▁Maschera BeneServizio ▁{ ▁BeneServizio ▁extra ▁= ▁null ; ▁p ublic ▁Inserisci BeniServizi ( String ▁title ) ▁{ ▁super ( title ); ▁initialize (); ▁setSize (350, 520 ); ▁} ▁p ublic ▁void ▁initialize () ▁{ ▁scelta _ piatto [4]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ piatto [4]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . DES SERT ); ▁p (); ▁} ▁} ▁} ); ▁scelta _ piatto [5]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ piatto [5]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . FR UT TA ); ▁p (); ▁} ▁} ▁} ); ▁scelta _ servizio [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ servizio [0]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . RIC RE A TIVI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ servizio [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ servizio [1]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . ALT RO ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . CA FF ETT ERI A ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . A NAL COL ICI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [2]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [2]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . AL COL ICI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ cibo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ cibo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . DO L CI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ cibo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ cibo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . SA L ATI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ antipasto [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ antipasto [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . F RED DI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ antipasto [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ antipasto [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . CAL DI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ primo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ primo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . SOL IDI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ primo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ primo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . LI QU IDI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ secondo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ secondo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . C ARN E ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ secondo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ secondo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . P ESC E ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . VER D URA _ C OTTA ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . VER D URA _ CR UD A ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [2]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [2]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . FORMA G GIO ); ▁o (); ▁} ▁} ▁} ); ▁conferma . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁startConferma ( padre ); ▁} ▁} ); ▁} ▁// ▁init ▁void ▁startConferma ( Frame ▁padre ) ▁{ ▁MessageDialog ▁msg ; ▁if ▁(! errore ()) ▁{ ▁Float ▁px ▁= ▁Float . valueOf ( testo 4. getText ()); ▁extra ▁= ▁new ▁BeneServizio ( ( new ▁String ( codice ) )+ torna Cod Id ( ( Principale . config ) . getIdBene servizio ()), ▁testo 3. getText (), ▁px . float Value ()); ▁int ▁j ; ▁if ▁( ▁( j ▁= ▁( Principale . db ) . new IdBene servizio ()) ▁== ▁DataBase . OK ▁) ▁{ ▁( Principale . config ) . update IdBene servizio (); ▁if ▁( ( j ▁= ▁( Principale . db ) . write BeneServizio ( extra )) ▁== ▁DataBase . OK ) ▁{ ▁if ▁( padre ▁instance of ▁ MascheraAddebiti ) ▁{ ▁// ▁questo ▁serve ▁in ▁quanto ▁l ' Aggiungi BeneServizio ▁e ' ▁una ▁est ensione ▁di ▁questa ▁classe ▁dispose (); ▁padre . setEnabled ( true ); ▁( ( MascheraAddebiti ) ▁padre ) . iniz Extra (); ▁} ▁else ▁{ ▁// ▁questo ▁serve ▁in ▁quanto ▁Aggiungi BeneServizio ▁e ' ▁una ▁est ensione ▁di ▁questa ▁// ▁classe ▁ed ▁e ' ▁ utilizzata ▁dall a ▁m aschera ▁del ▁conto ▁ristorazione ▁if ▁( padre ▁instance of ▁MascheraC ontoRistorazione ) ▁{ ▁dispose (); ▁padre . setEnabled ( true ); ▁( ( MascheraC ontoRistorazione ) ▁padre ) . iniz Extra (); ▁} ▁else ▁{ ▁testo 3. setText (" "); ▁testo 4. setText (" "); ▁panel [10]. setVisible ( true ); ▁} ▁} ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" P roblemi ▁con ▁il ▁database : ▁"+ DataBase . str Errore ( j )); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" P roblemi ▁con ▁il ▁database : ▁"+ DataBase . str Errore ( j )); ▁} ▁} ▁void ▁o () ▁{ ▁complete Code (); ▁this . add ( panel [10] ); ▁panel [10]. setVisible ( true ); ▁testo 3. setText (" "); ▁testo 4. setText (" "); ▁ setVisible ( true ); ▁} ▁void ▁p () ▁{ ▁complete Code (); ▁if ( panel [1]. isVisible ()) ▁remove ( panel [1] ); ▁for ( int ▁i =3; i <13; ++ i ) ▁{ ▁if ( panel [ i ]. isVisible ()) ▁remove ( panel [ i ]); ▁} ▁o (); ▁} ▁String ▁torna Cod Id ( long ▁id ) ▁{ ▁complete Code (); ▁String ▁str _ id ▁= ▁L ong . toString ( id ); ▁while ▁( str _ id . length () ▁< ▁5) ▁str _ id ▁= ▁new ▁String ( "0" + str _ id ); ▁return ▁str _ id ; ▁} ▁}