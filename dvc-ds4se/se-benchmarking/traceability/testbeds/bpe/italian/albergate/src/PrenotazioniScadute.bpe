▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁common . def .* ; ▁import ▁java . util . Date ; ▁import ▁modul i .* ; ▁p ublic ▁class ▁Prenotazioni Scadut e ▁ext ends ▁Frame ▁{ ▁Prenotazione ▁prenotazione ; ▁// Dichiar azioni ▁di ▁variabili ▁Panel ▁panel 2, ▁panel 3; ▁Label ▁label 3; ▁List ▁lista ; ▁Button ▁Annulla , ▁Scegli ; ▁GridBagLayout ▁gridbag ▁= ▁new ▁GridBagLayout (); ▁SubPrenotazione ▁padre ▁= ▁new ▁SubPrenotazione (); ▁L istaPrenotazioni ▁L _ pren ; ▁Frame ▁figlio ; ▁int ▁to _ call ; ▁boolean ▁first _ time ▁= ▁true ; ▁p ublic ▁Prenotazioni Scadut e ▁( SubPrenotazione ▁p , ▁L istaPrenotazioni ▁L ) ▁{ ▁super (" Prenotazioni ▁in ▁scadenza "); ▁padre ▁= ▁p ; ▁L _ pren ▁= ▁L ; ▁setupPanel s (); ▁init (); ▁pack (); ▁} ▁void ▁setupPanel s () ▁{ ▁this . setFont ( Configurazione Sistema . font _ base ); ▁// Cre o ▁dei ▁pulsanti ▁e ▁ne ▁disabilit o ▁due ▁Annulla ▁= ▁new ▁Button (" ▁Fine ▁"); ▁Scegli ▁= ▁new ▁Button (" ▁Visualizza ▁"); ▁// Cre o ▁le ▁etichette ▁label 3 ▁= ▁new ▁Label (" Elenco ▁delle ▁prenotazioni ▁non ▁conferma te ▁"); ▁label 3. setFont ( Configurazione Sistema . font _ titolo ); ▁// Cre o ▁il ▁pannello ▁in ▁basso ▁con ▁due ▁pulsanti ▁panel 2 ▁= ▁new ▁Panel (); ▁panel 2. setLayout ( gridbag ); ▁ Utils . constrain ( panel 2, ▁Annulla , ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁ Utils . constrain ( panel 2, ▁Scegli , ▁1, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁// Cre o ▁il ▁pannello ▁con ▁la ▁lista ▁dei ▁risultati ▁della ▁ricerca ▁lista ▁= ▁new ▁List (10, false ); ▁panel 3 ▁= ▁new ▁Panel (); ▁panel 3. setLayout ( gridbag ); ▁ Utils . constrain ( panel 3, ▁label 3, ▁0, ▁0, ▁2, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 3, ▁lista , ▁0, ▁1, ▁ 4, ▁3, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . CENTER , ▁3. 0, ▁3. 0, ▁0, ▁0, ▁0, ▁0) ; ▁// Attac co ▁i ▁pannelli ▁al ▁frame ▁this . setLayout ( gridbag ); ▁ Utils . constrain ( this , ▁panel 3, ▁0, ▁0, ▁ 4, ▁ 10, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁ Utils . constrain ( this , ▁panel 2, ▁0, ▁ 10, ▁ 4, ▁1, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁pack (); ▁} ▁p ublic ▁void ▁init () ▁{ ▁if ▁( lista . getItemCount () ▁ != ▁0) ▁lista . removeAll (); ▁for ( int ▁i ▁= ▁1; ▁i <= L _ pren . length (); ▁i ++) ▁lista . addItem ( ( L _ pren . get Prenotazione ( i )). toString ()); ▁lista . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁prenotazione ▁= ▁L _ pren . get Prenotazione ( ( lista . getSelectedIndex es ()) [0] +1 ); ▁start ControllaPren ( prenotazione ); ▁} ▁} ); ▁Scegli . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁if ▁(! no Selection ()) ▁{ ▁prenotazione ▁= ▁L _ pren . get Prenotazione ( ( lista . getSelectedIndex es ()) [0] +1 ); ▁start ControllaPren ( prenotazione ); ▁} ▁} ▁} ); ▁Annulla . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁if ▁( ▁( SubPrenotazione . ric _ stanza ▁== ▁null ) ▁&& ▁( SubPrenotazione . ric _ stanza ▁== ▁null ) ▁) ▁padre . setEnabled ( true ); ▁} ▁} ); ▁} ▁void ▁start ControllaPren ( Prenotazione ▁pren ) ▁{ ▁this . setEnabled ( false ); ▁Stanza ▁stanza ▁= ▁( Principale . db ) . read Stanza ( pren . getNumStanz a ()); ▁Controlla Prenotazione ▁ctrl ▁= ▁new ▁Controlla Prenotazione ( pren , ▁stanza , ▁this ); ▁ctrl . setVisible ( true ); ▁ctrl . padre ▁= ▁this ; ▁} ▁boolean ▁no Selection () ▁{ ▁Frame ▁msg ; ▁if ▁( lista . getSelectedIndex () ▁== ▁-1) ▁{ ▁msg ▁= ▁new ▁Avviso Dialog ( this ," ▁ Selezionare ▁una ▁prenotazione ▁dall a ▁lista ▁e ▁ripr eme re ▁il ▁tasto "); ▁return ▁true ; ▁} ▁return ▁false ; ▁} ▁}