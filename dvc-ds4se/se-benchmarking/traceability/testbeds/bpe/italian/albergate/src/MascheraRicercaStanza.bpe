▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁common . def .* ; ▁import ▁java . util . Date ; ▁import ▁modul i .* ; ▁p ublic ▁class ▁Maschera RicercaStanza ▁ext ends ▁Frame ▁{ ▁// Dichiar o ▁gli ▁oggett i ▁che ▁mi ▁servi ranno ▁per ▁costrui re ▁la ▁finestra ▁Panel ▁panel 1, ▁panel 2, ▁panel 3, ▁panel 4, ▁panel 5; ▁Label ▁etichetta 1, ▁etichetta 2, ▁etichetta 3, ▁etichetta , ▁etichetta 4, ▁etichetta 5; ▁Button ▁Avvio , ▁Annulla , ▁ShowDisp , ▁Annulla 1, ▁Conferma ; ▁TextField ▁data _ inizio , ▁data _ fine , ▁nome _ ag ; ▁List ▁lista ; ▁Checkbox ▁con _ ag ; ▁GridBagLayout ▁gridbag ▁= ▁new ▁GridBagLayout (); ▁Inserisci Prenotazione ▁pren ; ▁Inserisci Commissioni ▁comm ; ▁Frame ▁figlio ; ▁Frame ▁padre ▁= ▁new ▁Frame (); ▁MascheraCambio ▁father ; ▁int ▁caller ; ▁ListaStanze ▁stanze _ disp ; ▁Date ▁save _ date ; ▁String ▁nomi _ agenzie [] ▁= ▁new ▁String [0] ; ▁// ▁se gu ono ▁due ▁variabili ▁necessari e ▁per ▁il ▁pass aggio ▁dei ▁parametri ▁// ▁della ▁Inserisci ▁String ▁data 1; ▁String ▁data 2; ▁p ublic ▁Maschera RicercaStanza ( String ▁title , ▁int ▁c ) ▁{ ▁super ( title ); ▁caller ▁= ▁c ; ▁setupPanel s (); ▁init (); ▁pack (); ▁} ▁void ▁setupPanel s () ▁{ ▁this . setFont ( Configurazione Sistema . font _ base ); ▁// Cre o ▁i ▁TextField ▁data _ inizio ▁= ▁new ▁TextField ("", ▁12) ; ▁data _ fine ▁= ▁new ▁TextField ("", ▁12) ; ▁nome _ ag ▁= ▁new ▁TextField ("", ▁20 ); ▁nome _ ag . setEditable ( false ); ▁// Cre o ▁i ▁pulsanti ▁e ▁ne ▁disabilit o ▁due ▁Annulla ▁= ▁new ▁Button (" Indietro "); ▁Annulla 1 ▁= ▁new ▁Button (" Annulla "); ▁Conferma ▁= ▁new ▁Button (" ▁Scegli ▁"); ▁Avvio ▁= ▁new ▁Button (" Avvio ▁Ricerca "); ▁ShowDisp ▁= ▁new ▁Button (" Disponibilita ' "); ▁Annulla 1. setEnabled ( false ); ▁Conferma . setEnabled ( false ); ▁// Cre o ▁le ▁etichette ▁etichetta = ▁new ▁Label (" Periodo ▁di ▁soggiorno "); ▁etichetta . setFont ( Configurazione Sistema . font _ titolo ); ▁etichetta 1 ▁= ▁new ▁Label (" Data ▁inizio : "); ▁etichetta 2 ▁= ▁new ▁Label (" Data ▁fine : "); ▁etichetta 3 ▁= ▁new ▁Label ▁ (" Risultat o ▁della ▁ricerca : "); ▁etichetta 3. setFont ( Configurazione Sistema . font _ titolo ); ▁etichetta 4 ▁= ▁new ▁Label (" ▁Nome ▁agenzia "); ▁etichetta 5 ▁= ▁new ▁Label ▁ (" Prenotazione ▁di ▁stanze ▁commissionate : "); ▁etichetta 5. setFont ( Configurazione Sistema . font _ titolo ); ▁// Cre o ▁la ▁lista ▁lista ▁= ▁new ▁List ( 15, ▁false ); ▁// Cre o ▁il ▁checkbox ▁con _ ag ▁= ▁new ▁Checkbox (" ▁Prenotazione ▁ tramite ▁agenzia ", ▁false ); ▁// Cre o ▁il ▁pannello ▁in ▁alto ▁panel 1 ▁= ▁new ▁Panel (); ▁panel 1. setLayout ( gridbag ); ▁ Utils . constrain ( panel 1, ▁etichetta , ▁0, ▁0, ▁ 4, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁ 10, ▁0) ; ▁ Utils . constrain ( panel 1, ▁etichetta 1, ▁0, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 1, ▁data _ inizio , ▁1, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST ,1.0,0.0, 0,0,0,0 ); ▁ Utils . constrain ( panel 1, ▁etichetta 2, ▁2, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 1, data _ fine , ▁3, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁panel 5 ▁= ▁new ▁Panel (); ▁panel 5. setLayout ( gridbag ); ▁ Utils . constrain ( panel 5, ▁etichetta 5, ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 5, ▁con _ ag , ▁0, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 5, ▁etichetta 4, ▁1, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 5, ▁nome _ ag , ▁2, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁// Cre o ▁un ▁pannello ▁con ▁due ▁pulsanti ▁panel 2 ▁= ▁new ▁Panel (); ▁panel 2. setLayout ( gridbag ); ▁ Utils . constrain ( panel 2, ▁Annulla , ▁1, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁0.3 , ▁ 0.0, ▁0, ▁0, ▁0, ▁1 ); ▁ Utils . constrain ( panel 2, ▁Avvio , ▁2, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁0.3 , ▁ 0.0, ▁0, ▁0, ▁0, ▁1 ); ▁ Utils . constrain ( panel 2, ▁ShowDisp , ▁3, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . NORTH WEST , ▁0.3 , ▁ 0.0, ▁0, ▁0, ▁0, ▁1 ); ▁// Cre o ▁il ▁pannello ▁contenente ▁la ▁lista ▁panel 3 ▁= ▁new ▁Panel (); ▁panel 3. setLayout ( gridbag ); ▁ Utils . constrain ( panel 3, ▁etichetta 3, ▁0, ▁0, ▁2, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 3, lista , ▁0, ▁1, ▁ 4, ▁3, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . CENTER , ▁3. 0, ▁3. 0, ▁0, ▁0, ▁0, ▁0) ; ▁// Cre o ▁il ▁pannello ▁in ▁basso ▁con ▁due ▁pulsanti ▁panel 4 ▁= ▁new ▁Panel (); ▁panel 4. setLayout ( gridbag ); ▁ Utils . constrain ( panel 4, ▁Annulla 1, ▁0, ▁1, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . SOUTH EAST , ▁0.3 , ▁ 0.0, ▁0, ▁0, ▁0, ▁10 ); ▁ Utils . constrain ( panel 4, ▁Conferma , ▁1, ▁1, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . SOUTH WEST , ▁0.3 , ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁// Attac co ▁i ▁pannelli ▁al ▁frame ▁this . setLayout ( gridbag ); ▁ Utils . constrain ( this , ▁panel 1, ▁0, ▁0, ▁ 4, ▁2, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁ 15, ▁ 10, ▁ 10, ▁10 ); ▁ Utils . constrain ( this , ▁panel 5, ▁0, ▁2, ▁ 4, ▁1, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . NORTH WEST , ▁1.0, ▁ 0.0, ▁ 15, ▁ 10, ▁ 10, ▁10 ); ▁ Utils . constrain ( this , ▁panel 2, ▁0, ▁3, ▁ 4, ▁1, Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . NORTH EAST , ▁1.0, ▁ 0.0, ▁ 10, ▁ 10, ▁0, ▁10 ); ▁ Utils . constrain ( this , ▁panel 3, ▁0, ▁ 4, ▁ 4, ▁3, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . CENTER , ▁2.0 , ▁2.0 , ▁ 10, ▁ 10, ▁ 10, ▁10 ); ▁ Utils . constrain ( this , ▁panel 4, ▁0, ▁ 7, ▁ 4, ▁1, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . SOUTH WEST , ▁1.0, ▁1.0, ▁ 10, ▁ 10, ▁ 15, ▁10 ); ▁if ▁( caller ▁== ▁1) ▁{ ▁panel 5. setVisible ( false ); ▁pack (); ▁} ▁} ▁// Gestione ▁degli ▁eventi ▁p ublic ▁void ▁init () ▁{ ▁// A scoltatore ▁del ▁pulsante ▁Avvio , se ▁il ▁pulsante ▁viene ▁prem uto ▁viene ▁// la ncia ta ▁la ▁proced ura ▁di ▁ricerca ▁stanze ▁liber e ▁Avvio . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁ctrl Avvio (); ▁} ▁} ); ▁// A scoltatore ▁del ▁pulsante ▁Annulla , se ▁il ▁pulsante ▁viene ▁pr um e to ▁si ▁torna ▁// alla ▁m aschera ▁precedente ▁Annulla . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁if ▁( caller ▁== ▁3) ▁father . setEnabled ( true ); ▁else ▁padre . setEnabled ( true ); ▁} ▁} ); ▁// A scoltatore ▁del ▁pulsante ▁ShowDisp , se ▁il ▁pulsante ▁viene ▁prem uto ▁si ▁// mo str er a ' ▁una ▁m aschera ▁con ▁le ▁disponibilita ▁dell ' albergo ▁ShowDisp . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁look Disp (); ▁} ▁} ); ▁// A scoltatore ▁del ▁pulsante ▁Annulla 1, se ▁il ▁pulsante ▁viene ▁prem uto ▁si ▁// vengono ▁ri abilita ti ▁i ▁ componenti ▁del ▁pannello ▁in ▁alto ▁e ▁// disabilita ti ▁quell i ▁del ▁pannello ▁in ▁basso ▁Annulla 1. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁start Annulla 1 (); ▁} ▁} ); ▁// A scoltatore ▁del ▁pulsante ▁Conferma , ▁se ▁il ▁pulsante ▁viene ▁prem uto ▁si ▁a pre ▁// la ▁finestra ▁riguardant e ▁l ' inserimento ▁della ▁prenotazione ▁Conferma . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁start Inserimento (); ▁} ▁} ); ▁lista . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁start Inserimento (); ▁} ▁} ); ▁con _ ag . add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ▁( con _ ag . getStat e ()) ▁nome _ ag . setEditable ( true ); ▁else ▁{ ▁nome _ ag . setEditable ( false ); ▁nome _ ag . setText (" "); ▁} ▁} ▁} ); ▁} ▁boolean ▁data Inizio Is Not Before To day () ▁{ ▁Date ▁inizio _ pren ▁= ▁ DateUtils . convert Date ( data _ inizio . getText ()); ▁Date ▁today ▁= ▁new ▁Date (); ▁if ▁( inizio _ pren . getYear () ▁< ▁today . getYear ()) ▁return ▁false ; ▁else ▁if ▁( inizio _ pren . getYear () ▁ > ▁today . getYear ()) ▁return ▁true ; ▁else ▁// ▁l ' anno ▁e ' ▁il ▁medesim o ▁if ▁( inizio _ pren . getMonth () ▁< ▁today . getMonth ()) ▁return ▁false ; ▁else ▁if ▁( inizio _ pren . getMonth () ▁ > ▁today . getMonth ()) ▁return ▁true ; ▁else ▁// ▁l ' anno ▁e ▁il ▁mese ▁sono ▁i ▁medesim i ▁if ▁( inizio _ pren . getDate () ▁< ▁today . getDate ()) ▁return ▁false ; ▁else ▁return ▁true ; ▁} ▁/* ▁se ▁la ▁ricerca ▁viene ▁la ncia ta ▁per ▁un ▁cambio ▁stanza ▁( caller ▁= ▁3) ▁si ▁deve ▁* ▁i mpe dire ▁che ▁la ▁data ▁di ▁fine ▁veng a ▁posticipata ▁rispett o ▁la ▁fine ▁del ▁soggiorno ▁* ▁o ▁anticipata ▁rispett o ▁la ▁data ▁del ▁cambio ▁stanza . ▁*/ ▁void ▁ctrl Avvio () ▁{ ▁Frame ▁msg ; ▁if ▁( Utils . date E Periodo Corretti ( this , ▁data _ inizio . getText (), ▁data _ fine . getText ())) ▁{ ▁if ▁( con _ ag . getStat e () ▁&& ▁nome _ ag . getText () . equals ("")) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Man ca ▁il ▁nome ▁dell ' agenzia ! ▁"); ▁return ; ▁} ▁Lista Disponibilita ▁L _ disp ▁= ▁( Principale . db ) . elenco Disponibilita (); ▁if ▁( L _ disp ▁== ▁null ) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ▁nella ▁lettura ▁delle ▁disponibilita '! ▁"); ▁return ; ▁} ▁if ▁( caller ▁== ▁3) ▁{ ▁if ▁( Utils . data 1 M aggiore Data 2( DateUtils . convert Date ( data _ fine . getText ()), ▁save _ date ) ▁) ▁{ ▁msg ▁= ▁new ▁Avviso Dialog ( this , ▁" ATT ENZIONE : ▁la ▁data ▁non ▁pu o ' ▁essere ▁posticipata "); ▁data _ fine . setText ( DateUtils . parse Date ( DateUtils . give String Of Date ( save _ date ))); ▁} ▁else ▁if ▁( Utils . data 1 Min oreDat a 2( DateUtils . convert Date ( data _ fine . getText ()), ▁ DateUtils . convert Date ( data _ inizio . getText ()) ▁) ▁) ▁{ ▁msg ▁= ▁new ▁Avviso Dialog ( this , ▁" ATT ENZIONE : ▁la ▁data ▁non ▁pu o ' ▁essere ▁precedente ▁alla ▁data ▁di ▁inizio "); ▁data _ fine . setText ( DateUtils . parse Date ( DateUtils . give String Of Date ( save _ date ))); ▁} ▁else ▁{ ▁stanze _ disp ▁= ▁new ▁ListaStanze (); ▁startAvvi o ( L _ disp , ▁0) ; ▁} ▁} ▁else ▁{ ▁if ▁( data Inizio Is Not Before To day ()) ▁{ ▁stanze _ disp ▁= ▁new ▁ListaStanze (); ▁startAvvi o ( L _ disp , ▁0) ; ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁La ▁data ▁di ▁inizio ▁deve ▁essere ▁maggiore ▁o ▁ u gu ale ▁di ▁quell a ▁odierna ! ▁"); ▁} ▁} ▁} ▁void ▁start Annulla 1() ▁{ ▁data _ inizio . setEditable ( true ); ▁data _ fine . setEditable ( true ); ▁con _ ag . setEnabled ( true ); ▁if ▁( ▁con _ ag . getStat e () ▁) ▁nome _ ag . setEditable ( true ); ▁Annulla . setEnabled ( true ); ▁Avvio . setEnabled ( true ); ▁Annulla 1. setEnabled ( false ); ▁Conferma . setEnabled ( false ); ▁if ▁( lista . getItemCount () ▁ > ▁0) ▁lista . removeAll (); ▁stanze _ disp ▁= ▁new ▁ListaStanze (); ▁} ▁void ▁startAvvi o ( Lista Disponibilita ▁L _ disp , ▁int ▁k ) ▁{ ▁if ▁( con _ ag . getStat e ()) ▁startSearchComm ( L _ disp , ▁k ); ▁// ▁le ▁date ▁sono ▁corrette ▁se ▁si ▁arriva ▁qui ▁in ▁quanto ▁controll ate ▁in ▁ctrl Avvio () ▁Frame ▁msg ; ▁String ▁str ▁= ▁new ▁String (" "); ▁Lista Commissionamenti ▁L _ comm ▁= ▁new ▁Lista Commissionamenti (); ▁ListaStanze ▁elenco _ stanze _ disp ▁= ▁new ▁ListaStanze (); ▁// ▁variabili ▁necessari e ▁per ▁pass aggio ▁dei ▁parametri ▁della ▁Inserisci ▁data 1 ▁= ▁ DateUtils . parse Date ( data _ inizio . getText ()); ▁data 2 ▁= ▁ DateUtils . parse Date ( data _ fine . getText ()); ▁// ▁scan sione ▁delle ▁disponibilita ▁Stanza ▁stanza ▁= ▁null ; ▁Disponibilita ▁disp _ attuale ▁= ▁null ; ▁for ▁( int ▁i ▁= ▁1; ▁i ▁<= ▁L _ disp . length (); ▁i ++) ▁{ ▁disp _ attuale ▁= ▁L _ disp . get Disponibilita ( i ); ▁if ▁( ▁disp _ attuale . is Disponibil e ( ▁ DateUtils . convert Date ( data _ inizio . getText ()), ▁ DateUtils . convert Date ( data _ fine . getText ()), ▁ Flag . DISPONIBILE ) ▁) ▁{ ▁stanza ▁= ▁( Principale . db ) . read Stanza ( disp _ attuale . getNumStanz a ()); ▁if ▁( stanza ▁ != ▁null ) ▁{ ▁elenco _ stanze _ disp . add Stanza ( stanza ); ▁stanze _ disp . add Stanza ( stanza ); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ! ▁"); ▁} ▁} ▁if ▁(! stanze _ disp . isEmpty ()) ▁{ ▁Avvio . setEnabled ( false ); ▁Annulla . setEnabled ( false ); ▁data _ inizio . setEditable ( false ); ▁data _ fine . setEditable ( false ); ▁Annulla 1. setEnabled ( true ); ▁Conferma . setEnabled ( true ); ▁con _ ag . setEnabled ( false ); ▁nome _ ag . setEditable ( false ); ▁for ▁( int ▁i ▁= ▁1; ▁i ▁<= ▁elenco _ stanze _ disp . length (); ▁i ++) ▁lista . addItem ( str +( elenco _ stanze _ disp . get Stanza ( i )). toString ()); ▁} ▁else ▁if ▁( k ▁== ▁0) ▁if ▁(! con _ ag . getStat e ()) ▁msg ▁= ▁new ▁Avviso Dialog ( this , ▁" ▁Nessun a ▁stanza ▁disponibile ▁in ▁ tale ▁periodo ! ▁"); ▁else ▁msg ▁= ▁new ▁Avviso Dialog ( this , ▁" ▁Nessun a ▁stanza ▁disponibile ▁o ▁comm is ion ata ▁in ▁ tale ▁periodo ! ▁"); ▁} ▁void ▁startSearchComm ( Lista Disponibilita ▁L _ disp , ▁int ▁k ) ▁{ ▁// ▁le ▁date ▁sono ▁corrette ▁se ▁si ▁arriva ▁qui ▁in ▁quanto ▁controll ate ▁in ▁ctrl Avvio () ▁Frame ▁msg ; ▁ Commissionamento ▁c ; ▁Stanza ▁stanza ▁= ▁null ; ▁Disponibilita ▁disp _ loc ▁= ▁null ; ▁Lista Commissionamenti ▁L _ comm ▁= ▁new ▁Lista Commissionamenti (); ; ▁ListaStanze ▁elenco _ stanze _ disp ▁= ▁new ▁ListaStanze (); ▁Date ▁d 1 ▁= ▁ DateUtils . convert Date ( data _ inizio . getText ()); ▁Date ▁d 2 ▁= ▁ DateUtils . convert Date ( data _ fine . getText ()); ▁data 1 ▁= ▁ DateUtils . parse Date ( data _ inizio . getText ()); ▁data 2 ▁= ▁ DateUtils . parse Date ( data _ fine . getText ()); ▁L _ comm ▁= ▁( Principale . db ) . found Commissionamenti Senza L ike ( nome _ ag . getText ()); ▁if ▁( L _ comm ▁== ▁null ) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ▁nella ▁lettura ▁delle ▁commissioni ! ▁"); ▁return ; ▁} ▁if ▁( ▁! L _ comm . isEmpty () ▁) ▁{ ▁nomi _ agenzie ▁= ▁new ▁String [ L _ comm . length () ]; ▁int ▁indice _ nomi ▁= ▁0; ▁for ▁( int ▁i ▁= ▁1; ▁i ▁<= ▁L _ comm . length (); ▁i ++) ▁{ ▁c ▁= ▁L _ comm . get Commissionamento ( i ); ▁// ▁Controllo ▁che ▁le ▁date ▁inserite ▁a p p a rt en ga no ▁al ▁periodo ▁commissionato ▁if ( ▁(! Utils . data 1 M aggiore Data 2( c . getInizio Comm (), ▁d 1) ) ▁&& ▁(!( c . getFine Comm ()). before ( d 2 ))) ▁{ ▁disp _ loc ▁= ▁ Utils . get DispOf Room ( L _ disp , ▁c . getNumStanz a (), ▁false ); ▁if ▁( disp _ loc . is Disponibil e ( d 1, ▁d 2, ▁ Flag . COMMISSIONATA )) ▁{ ▁stanza ▁= ▁( Principale . db ) . read Stanza ( disp _ loc . getNumStanz a ()); ▁if ▁( stanza ▁ != ▁null ) ▁{ ▁elenco _ stanze _ disp . add Stanza ( stanza ); ▁stanze _ disp . add Stanza ( stanza ); ▁nomi _ agenzie [ indice _ nomi ] ▁= ▁new ▁String ( c . getNome Agenzia ()); ▁indice _ nomi ++ ; ▁} ▁else ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ! ▁"); ▁return ; ▁} ▁} ▁} ▁} ▁} ▁if ▁(! stanze _ disp . isEmpty ()) ▁{ ▁Avvio . setEnabled ( false ); ▁Annulla . setEnabled ( false ); ▁data _ inizio . setEditable ( false ); ▁data _ fine . setEditable ( false ); ▁Annulla 1. setEnabled ( true ); ▁Conferma . setEnabled ( true ); ▁for ▁( int ▁i ▁= ▁1; ▁i ▁<= ▁elenco _ stanze _ disp . length (); ▁i ++) ▁lista . addItem (" COMMISSIONATA ▁A ▁"+ nomi _ agenzie [ i -1]+" ▁"+( elenco _ stanze _ disp . get Stanza ( i )). toString ()); ▁} ▁} ▁// ▁startSearchComm ▁void ▁ re startAvvi o () ▁{ ▁Frame ▁msg ; ▁Lista Disponibilita ▁L _ disp ▁= ▁( Principale . db ) . elenco Disponibilita (); ▁if ▁( L _ disp ▁== ▁null ) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁P roblemi ▁con ▁il ▁database ▁nella ▁lettura ▁delle ▁disponibilita '! ▁"); ▁return ; ▁} ▁start Annulla 1 (); ▁startAvvi o ( L _ disp , ▁1 ); ▁} ▁void ▁start Inserimento () ▁{ ▁Frame ▁msg ; ▁if ▁( lista . getSelectedIndex () ▁ != ▁-1) ▁s witch ▁( caller ) ▁{ ▁case ▁1: ▁visualInsert Comm (); ▁brea k ; ▁case ▁2: ▁visualInsert Pren (); ▁brea k ; ▁case ▁3: ▁return Fre e Room (); ▁brea k ; ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Man ca ▁la ▁selezione ! ▁"); ▁} ▁void ▁look Disp () ▁{ ▁figlio ▁= ▁new ▁Maschera Disponibilita ( this , ▁nome _ ag . getText ()); ▁} ▁void ▁visualInsert Pren () ▁{ ▁this . setEnabled ( false ); ▁Stanza ▁stanza ▁= ▁stanze _ disp . get Stanza ( lista . getSelectedIndex ()+1) ; ▁if ▁( con _ ag . getStat e ()) ▁pren ▁= ▁new ▁Inserisci Prenotazione ( stanza , ▁data 1, ▁data 2, ▁nome _ ag . getText ()); ▁else ▁pren ▁= ▁new ▁Inserisci Prenotazione ( stanza , ▁data 1, ▁data 2, ▁" "); ▁pren . setVisible ( true ); ▁pren . m ask _ ricerca ▁= ▁this ; ▁} ▁void ▁visualInsert Comm () ▁{ ▁this . setEnabled ( false ); ▁Stanza ▁stanza ▁= ▁stanze _ disp . get Stanza ( lista . getSelectedIndex ()+1) ; ▁comm ▁= ▁new ▁Inserisci Commissioni ( stanza , ▁data 1, ▁data 2 ); ▁comm . setVisible ( true ); ▁comm . m ask _ ricerca ▁= ▁this ; ▁} ▁void ▁return Fre e Room () ▁{ ▁Stanza ▁stanza ▁= ▁stanze _ disp . get Stanza ( lista . getSelectedIndex ()+1) ; ▁father . stanza 2. setText ( stanza . getNumStanz a ()); ▁father . setEnabled ( true ); ▁father . stanza 1. setEditable ( false ); ▁father . Ricerca . setEnabled ( false ); ▁father . Conferma . setEnabled ( true ); ▁dispose (); ▁} ▁}