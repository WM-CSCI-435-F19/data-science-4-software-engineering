▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁modul i .* ; ▁import ▁common . utility .* ; ▁import ▁common . def .* ; ▁import ▁interfacce .* ; ▁import ▁java . util . Date ; ▁p ublic ▁class ▁Inserisci Soggiornante ▁ext ends ▁M ascheraSoggiorno ▁{ ▁Prenotazione ▁prenotazione ; ▁int ▁counter _ ins ▁= ▁1; ▁int ▁counter _ tot ; ▁p ublic ▁Inserisci Soggiornante ( Ricerca Prenotazione ▁parent , ▁Prenotazione ▁p ) ▁{ ▁super (" Inserimento ▁dati ", ▁" Inserisci ", ▁p . getP ensionamento (), ▁ Flag . ADULTO ); ▁padre ▁= ▁parent ; ▁padre . setEnabled ( false ); ▁prenotazione ▁= ▁p ; ▁inizializza (); ▁} ▁p ublic ▁void ▁inizializza () ▁{ ▁testo 1. setText ( prenotazione . getNumStanz a ()); ▁testo 1. setEditable ( false ); ▁testo 2. setText ( prenotazione . getCognome ()); ▁testo 3. setText ( prenotazione . getNome ()); ▁testo 7. setText ( prenotazione . getNum Tel ()); ▁testo 13. setText ( DateUtils . give String Of Date ( prenotazione . getInizio Sogg ())); ▁testo 13. setEditable ( false ); ▁testo 14. setText ( DateUtils . give String Of Date ( prenotazione . getFine Sogg ())); ▁testo 14. setEditable ( false ); ▁counter _ tot ▁= ▁prenotazione . getNum Pers (); ▁if ▁( prenotazione . getRich Letto Agg () ▁== ▁Const . SI ) ▁counter _ tot ++ ; ▁change Title ( counter _ ins , ▁counter _ tot ); ▁Conferma . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁startConferma (); ▁} ▁} ); ▁} ▁void ▁startConferma () ▁{ ▁Frame ▁msg ; ▁if ▁(! errori Locale ()) ▁{ ▁Soggiornante ▁sogg ▁= ▁readDati Sogg ( prenotazione , ▁counter _ ins ); ▁int ▁j ; ▁if ▁( ▁( j ▁= ▁( Principale . db ) . write Soggiornante ( sogg )) ▁== ▁DataBase . OK ▁) ▁{ ▁Annulla . setEnabled ( false ); ▁c lean Fields (); ▁if ▁( counter _ ins ▁== ▁counter _ tot ) ▁{ ▁aggiorna Disp ( sogg , ▁ Flag . OCCUPATA ▁ ); ▁dispose (); ▁padre . crea Lista ( 1); ▁padre . setEnabled ( true ); ▁} ▁counter _ ins ++ ; ▁change Title ( counter _ ins , ▁counter _ tot ); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" P roblemi ▁con ▁il ▁database : ▁"+ DataBase . str Errore ( j )); ▁} ▁} ▁boolean ▁errori Locale () ▁{ ▁if ▁(! errori ()) ▁{ ▁if ▁( counter _ ins ▁== ▁1) ▁{ ▁Frame ▁msg ; ▁if ▁( ▁( testo 2. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁cognome ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 3. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁nome ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 6. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁numero ▁di ▁documento ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 7. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁numero ▁telefonico ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 8. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁l ' indirizzo ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 9. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁C . A . P . ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 10. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat o ▁il ▁comune ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 11. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat a ▁la ▁citta ! ▁"); ▁return ▁true ; ▁} ▁if ▁( ▁( testo 12. getText ()). equals ("") ▁) ▁{ ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" ▁Per ▁il ▁ primo ▁soggiornante ▁inserito ▁deve ▁essere ▁digitat a ▁la ▁nazione ! ▁"); ▁return ▁true ; ▁} ▁} ▁return ▁false ; ▁} ▁return ▁true ; ▁} ▁}