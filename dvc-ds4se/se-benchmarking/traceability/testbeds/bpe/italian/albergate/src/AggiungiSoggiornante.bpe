▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁modul i .* ; ▁import ▁common . utility .* ; ▁import ▁common . def .* ; ▁import ▁interfacce .* ; ▁import ▁java . util . Date ; ▁p ublic ▁class ▁Aggiungi Soggiornante ▁ext ends ▁M ascheraSoggiorno ▁{ ▁Prenotazione ▁prenotazione ; ▁int ▁num _ sogg ; ▁Stanza ▁stanza ; ▁p ublic ▁Aggiungi Soggiornante ( Ricerca Prenotazione ▁parent , ▁Prenotazione ▁p , ▁Stanza ▁s , ▁int ▁num ) ▁{ ▁super (" Inserimento ▁dati ▁del ▁soggiornante "," Aggiungi ▁ agli ▁altri ", ▁p . getP ensionamento (), ▁ Flag . ADULTO ); ▁padre ▁= ▁parent ; ▁stanza ▁= ▁s ; ▁num _ sogg = ▁num ; ▁prenotazione ▁= ▁p ; ▁inizializza (); ▁} ▁p ublic ▁void ▁inizializza () ▁{ ▁testo 1. setText ( stanza . getNumStanz a ()); ▁testo 1. setEditable ( false ); ▁testo 13. setText ( DateUtils . give String Of Date ( new ▁Date ())); ▁testo 13. setEditable ( false ); ▁testo 14. setText ( DateUtils . give String Of Date ( prenotazione . getFine Sogg ())); ▁testo 14. setEditable ( false ); ▁Conferma . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁startConferma (); ▁} ▁} ); ▁} ▁void ▁startConferma () ▁{ ▁Frame ▁msg ; ▁if ▁(! errori ()) ▁{ ▁Soggiornante ▁sogg ▁= ▁readDati Sogg ( prenotazione , ▁num _ sogg +1 ); ▁sogg . setInizio Sogg ( new ▁Date ()); ▁sogg . setFine Sogg ( prenotazione . getFine Sogg ()); ▁sogg . setNumStanz a ( stanza . getNumStanz a ()); ▁int ▁j ; ▁if ▁( ▁( j ▁= ▁( Principale . db ) . write Soggiornante ( sogg )) ▁== ▁DataBase . OK ▁) ▁{ ▁// ▁Mod if ico ▁la ▁prenotazione ▁relativa ▁if ▁( stanza . get Posti Letto () ▁ > ▁num _ sogg ) ▁prenotazione . setNum Pers ( num _ sogg +1 ); ▁else ▁if ▁( ▁( stanza . get Posti Letto () ▁== ▁num _ sogg ) ▁&& ▁( stanza . getDisp Letto Agg () ▁== ▁Const . SI ) ▁) ▁prenotazione . setRich Letto Agg ( Const . SI ); ▁( Principale . db ) . change Prenotazione ( prenotazione . getId Prenotazione (), ▁prenotazione . getNumStanz a (), ▁prenotazione . getNum Pers (), prenotazione . getNome (), prenotazione . getCognome (), ▁prenotazione . getNum Tel (), ▁prenotazione . getInizio Sogg (), ▁prenotazione . getFine Sogg (), ▁prenotazione . getData Pren (), ▁prenotazione . get Caparra (), ▁prenotazione . getRich Letto Agg (), ▁prenotazione . getP ensionamento (), ▁prenotazione . getT ramite Agenzia (), ▁prenotazione . getNome Agenzia (), ▁prenotazione . getRich P articolari ()); ▁msg ▁= ▁new ▁AvvisoLocale ( this , ▁" ▁Nuovo ▁soggiornante ▁registrato ! ▁"); ▁} ▁else ▁msg ▁= ▁new ▁MessageDialog ( this , ▁" P roblemi ▁con ▁il ▁database : ▁"+ DataBase . str Errore ( j )); ▁} ▁} ▁} ▁class ▁AvvisoLocale ▁ext ends ▁Frame ▁{ ▁Button ▁OK ; ▁Aggiungi Soggiornante ▁padre ; ▁p ublic ▁AvvisoLocale ( Aggiungi Soggiornante ▁parent , ▁String ▁testo ) ▁{ ▁super (" Avviso "); ▁padre ▁= ▁parent ; ▁padre . setEnabled ( false ); ▁this . setFont ( Configurazione Sistema . font _ titolo ); ▁Panel ▁textPanel ▁= ▁new ▁Panel (); ▁Panel ▁buttonPanel ▁= ▁new ▁Panel (); ▁textPanel . add ( new ▁Label ( testo )); ▁OK ▁= ▁new ▁Button (" OK "); ▁buttonPanel . add ( OK ); ▁add (" Nor th ", textPanel ); ▁add (" Center ", buttonPanel ); ▁init (); ▁pack (); ▁// setSize ( 250, 100 ); ▁ setVisible ( true ); ▁} ▁p ublic ▁void ▁init () ▁{ ▁OK . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁ setVisible ( false ); ▁dispose (); ▁padre . dispose (); ▁padre . padre . setEnabled ( true ); ▁} ▁} ); ▁} ▁}