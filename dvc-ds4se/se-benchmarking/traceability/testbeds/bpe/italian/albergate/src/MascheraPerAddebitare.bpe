▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁common . def .* ; ▁import ▁modul i .* ; ▁p ublic ▁class ▁Maschera PerAddebitare ▁ext ends ▁Frame ▁{ ▁// ▁variabili ▁per ▁tenere ▁tutt o ▁in ▁memoria ▁ ListaBeniServizi ▁elenco _ extra ▁= ▁new ▁ ListaBeniServizi (); ▁ListaAddebiti ▁elenco _ addebiti ▁= ▁new ▁ListaAddebiti (); ▁ ListaBeniServizi ▁elenco _ extra _ addebitati ▁= ▁new ▁ ListaBeniServizi (); ▁// ▁oggett i ▁per ▁la ▁costru zione ▁della ▁finestra ▁Label ▁etich 4, ▁etich 5, ▁etich 6, ▁etich 7; ▁Panel ▁panel 1, ▁panel 2, ▁panel 3, ▁panel 4, ▁panel 5, ▁panel 6, ▁panel 7; ▁Button ▁conferma , ▁annulla , ▁addebita , ▁deaddebita , ▁aggiungi ; ▁TextField ▁extra _ add , ▁totale ; ▁List ▁addebiti , ▁extra ; ▁GridBagLayout ▁gridbag ▁= ▁new ▁GridBagLayout (); ▁// ▁attribut i ▁per ▁la ▁gestione ▁della ▁gerarchia ▁delle ▁finestre ; ▁Frame ▁padre ▁= ▁new ▁Frame (); ▁Aggiungi BeneServizio ▁nuovo ; ▁// ▁flag ▁per ▁cap i re ▁se ▁si ▁t ratta ▁di ▁un ▁addebito ▁o ▁di ▁un ▁de addebito ▁boolean ▁addebito ; ▁// ▁variabili ▁per ▁il ▁tra va so ▁del ▁database ▁in ▁memoria ▁int ▁quantita _ mod [] ▁= ▁new ▁int [0] ; ▁// ▁quantita ▁aggiunge ▁o ▁to l te ▁a ▁vecchi ▁addebiti ▁p ublic ▁Maschera PerAddebitare ( String ▁ titolo , ▁String ▁botton e _ conf ) ▁{ ▁super ( titolo ); ▁setupPanel s ( botton e _ conf ); ▁init (); ▁pack (); ▁} ▁// ▁Crea zione ▁della ▁finestra ▁void ▁setupPanel s ( String ▁botton e _ conf ) ▁{ ▁this . setFont ( Configurazione Sistema . font _ base ); ▁// ▁cre o ▁l ' elenco ▁degli ▁addebiti ▁alla ▁stanza ▁e ▁degli ▁extra ▁addebiti ▁= ▁new ▁List (10, ▁false ); ▁addebiti . setFont ( Configurazione Sistema . font _ allineato ); ▁extra ▁= ▁new ▁List (10, ▁false ); ▁extra . setFont ( Configurazione Sistema . font _ allineato ); ▁// ▁cre o ▁i ▁text field ▁extra _ add ▁= ▁new ▁TextField ("", ▁40 ); ▁totale ▁= ▁new ▁TextField ("", ▁20 ); ▁extra _ add . setEditable ( false ); ▁totale . setEditable ( false ); ▁// ▁cre o ▁i ▁pulsanti ▁addebita ▁= ▁new ▁Button (" Add e b ita "); ▁deaddebita ▁= ▁new ▁Button (" To gli ▁dall ' addebito "); ▁aggiungi ▁= ▁new ▁Button (" Aggiungi ▁nuovo ▁bene / servizio "); ▁annulla ▁= ▁new ▁Button (" Annulla "); ▁conferma ▁= ▁new ▁Button ( botton e _ conf ); ▁// ▁cre o ▁le ▁label ▁etich 4 ▁= ▁new ▁Label (" I nformazioni ▁su gli ▁addebiti "); ▁etich 4. setFont ( Configurazione Sistema . font _ titolo ); ▁etich 5 ▁= ▁new ▁Label (" U l ti mo ▁addebito ▁effettuato "); ▁etich 6 ▁= ▁new ▁Label (" Lista ▁degli ▁addebiti "); ▁etich 7 ▁= ▁new ▁Label (" Totale ▁dell ' addebito "); ▁// ▁cre o ▁il ▁ primo ▁pannello ▁vuoto ▁panel 1 ▁= ▁new ▁Panel (); ▁// ▁cre o ▁pannello ▁di ▁informazion e ▁degli ▁addebiti ▁panel 2 ▁= ▁new ▁Panel (); ▁panel 2. setLayout ( gridbag ); ▁ Utils . constrain ( panel 2, ▁etich 4, ▁0, ▁0, ▁3, ▁1 ); ▁ Utils . constrain ( panel 2, ▁etich 5, ▁0, ▁2, ▁3, ▁1, ▁ 10, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 2, ▁extra _ add , ▁0, ▁3, ▁1, ▁1, ▁0, ▁20 , ▁0, ▁0) ; ▁ Utils . constrain ( panel 2, ▁etich 6, ▁0, ▁ 5, ▁3, ▁1, ▁ 10, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 2, ▁addebiti , ▁0, ▁ 6, ▁2, ▁ 4, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . WEST , ▁1.0, ▁1.0, ▁0, ▁20 , ▁0, ▁20 ); ▁ Utils . constrain ( panel 2, ▁etich 7, ▁0, ▁12, ▁3, ▁1, ▁ 10, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel 2, ▁totale , ▁0, ▁ 13, ▁1, ▁1, ▁0, ▁20 , ▁0, ▁0) ; ▁// ▁cre o ▁pannello ▁per ▁addebita ▁panel 3 ▁= ▁new ▁Panel (); ▁panel 3. setLayout ( gridbag ); ▁ Utils . constrain ( panel 3, ▁addebita , ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁ 5); ▁ Utils . constrain ( panel 3, ▁deaddebita , ▁1, ▁0, ▁1, ▁1, ▁Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁0, ▁0) ; ▁// ▁cre o ▁pannello ▁vuoto ▁per ▁num _ stanza ▁o ▁coperti ▁panel 4 ▁= ▁new ▁Panel (); ▁// ▁cre o ▁pannello ▁per ▁aggiungi ▁panel 5 ▁= ▁new ▁Panel (); ▁panel 5. setLayout ( gridbag ); ▁ Utils . constrain ( panel 5, ▁aggiungi , ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁// ▁cre o ▁pannello ▁per ▁annulla ▁panel 6 ▁= ▁new ▁Panel (); ▁panel 6. setLayout ( gridbag ); ▁ Utils . constrain ( panel 6, ▁annulla , ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁// ▁cre o ▁pannello ▁per ▁conferma ▁panel 7 ▁= ▁new ▁Panel (); ▁panel 7. setLayout ( gridbag ); ▁ Utils . constrain ( panel 7, ▁conferma , ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁// ▁costrui s co ▁la ▁finestra ▁defini tiva ▁att a cca ndo ▁i ▁pannelli ▁this . setLayout ( gridbag ); ▁ Utils . constrain ( this , ▁panel 1, ▁0, ▁0, ▁1, ▁1, ▁Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . WEST , ▁0. 5, ▁0. 5, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁ Utils . constrain ( this , ▁panel 2, ▁1, ▁0, ▁1, ▁ 4, ▁Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . WEST , ▁0. 5, ▁0. 5, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁ Utils . constrain ( this , ▁panel 3, ▁0, ▁1, ▁1, ▁1, ▁Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁0, ▁ 5, ▁0) ; ▁ Utils . constrain ( this , ▁panel 4, ▁0, ▁2, ▁1, ▁1, ▁Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . WEST , ▁0. 5, ▁0. 5, ▁ 5, ▁0, ▁ 5, ▁0) ; ▁ Utils . constrain ( this , ▁panel 5, ▁0, ▁3, ▁1, ▁1, ▁Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁ Utils . constrain ( this , ▁panel 6, ▁0, ▁ 4, ▁1, ▁1, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁0, ▁ 5, ▁0) ; ▁ Utils . constrain ( this , ▁panel 7, ▁1, ▁ 4, ▁2, ▁1, ▁Grid BagConstraints . BOTH , ▁Grid BagConstraints . CENTER , ▁ 0.0, ▁ 0.0, ▁ 5, ▁0, ▁ 5, ▁0) ; ▁} ▁// ▁Per ▁la ▁gestione ▁degli ▁eventi ▁della ▁finestra ▁void ▁init () ▁{ ▁annulla . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁padre . setEnabled ( true ); ▁} ▁} ); ▁aggiungi . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁start Aggiungi (); ▁} ▁} ); ▁} ▁void ▁start Aggiungi () ▁{ ▁nuovo ▁= ▁new ▁Aggiungi BeneServizio ( this ); ▁} ▁}