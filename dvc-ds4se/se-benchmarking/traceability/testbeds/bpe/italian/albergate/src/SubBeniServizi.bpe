▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁java . io .* ; ▁import ▁common . utility .* ; ▁import ▁java . util . Random ; ▁p ublic ▁class ▁SubBeniServizi ▁ext ends ▁Frame ▁{ ▁Label ▁label ; ▁Panel ▁panel 0, ▁panel 1; ▁Button ▁Inserimento , ▁Modifica ▁ , Cancellazione , ▁Ricerca , ▁Annulla ▁ ; ▁GridBagLayout ▁gridbag = new ▁GridBagLayout (); ▁SubGestione ▁s ▁= ▁new ▁SubGestione (); ▁Cancella BeniServizi ▁call _ 3; ▁Modifica BeniServizi ▁call _ 2; ▁Inserisci BeniServizi ▁call _ 1; ▁VediBeniServizi ▁call _ 4; ▁p ublic ▁SubBeniServizi () ▁{ ▁super (" Gestione ▁dei ▁Beni & Servizi "); ▁setup (); ▁init (); ▁pack (); ▁} ▁void ▁setup () ▁{ ▁this . setFont ( Configurazione Sistema . font _ sub ); ▁panel 0 = new ▁Panel (); ▁panel 0. setLayout ( gridbag ); ▁panel 0. setBackground ( Color . whi te ); ▁// Carica mento ▁di ▁un ' immagine ▁scelta ▁a ▁cas o ▁tra ▁quell e ▁disponibili ▁Random ▁ rnd ▁= ▁new ▁Random (); ▁int ▁num ; ▁if ▁( ( num ▁= ▁( rnd . next Int () ▁ % ▁5) ▁) ▁< ▁0) ▁num ▁= ▁num ▁* ▁ -1; ▁num ▁++ ; ▁String ▁file _ name ▁= ▁new ▁String (" servizi "+ num +" . j pg "); ▁Immagine ▁ figura ▁= ▁new ▁Immagine ( file _ name ); ▁Etichetta ▁etich ▁= ▁new ▁Etichetta (" Beni & Servizi . gif "); ▁ Utils . constrain ( panel 0, etich , ▁0, ▁0, ▁2, ▁12, Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . CENTER , ▁0. 5, ▁1.0, 0,0,0,0 ); ▁ Utils . constrain ( panel 0, figura , ▁2, ▁0, ▁ 10, ▁12, Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . CENTER , ▁0. 5, ▁1.0, 0,0,0,0 ); ▁panel 1 ▁= ▁new ▁Panel (); ▁panel 1. setLayout ( new ▁GridLayout ( 5, 1) ); ▁Inserimento ▁= ▁new ▁Button (" ▁Inserimento ▁"); ▁Modifica ▁= ▁new ▁Button (" Modifica "); ▁Cancellazione ▁= ▁new ▁Button (" ▁Cancellazione ▁"); ▁Ricerca ▁= ▁new ▁Button (" Ricerca . . . "); ▁Annulla ▁= ▁new ▁Button (" Indietro "); ▁panel 1. add ( Inserimento ); ▁panel 1. add ( Modifica ); ▁panel 1. add ( Cancellazione ); ▁panel 1. add ( Ricerca ); ▁panel 1. add ( Annulla ); ▁this . setLayout ( gridbag ); ▁ Utils . constrain ( this , panel 0, ▁0, ▁0, ▁12, ▁12, Grid BagConstraints . VERTICAL , ▁Grid BagConstraints . WEST , ▁1.0, ▁1.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( this , panel 1, ▁12, ▁0, ▁1, ▁12, Grid BagConstraints . BOTH , ▁Grid BagConstraints . WEST , ▁1.0, ▁1.0, ▁0, ▁0, ▁0, ▁0) ; ▁} ▁void ▁init () ▁{ ▁Annulla . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁s . setEnabled ( true ); ▁} ▁} ); ▁Inserimento . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁in s BeneServizio (); ▁} ▁} ); ▁Modifica . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁mod BeneServizio (); ▁} ▁} ); ▁Cancellazione . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁canc BeneServizio (); ▁} ▁} ); ▁Ricerca . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁vedi BeneServizio (); ▁} ▁} ); ▁} ▁void ▁in s BeneServizio () ▁{ ▁this . setEnabled ( false ); ▁call _ 1 ▁= ▁new ▁Inserisci BeniServizi (" Inserimento ▁di ▁beni ▁e ▁servizi "); ▁call _ 1. padre ▁= ▁this ; ▁call _ 1. setVisible ( true ); ▁} ▁void ▁mod BeneServizio () ▁{ ▁this . setEnabled ( false ); ▁call _ 2 ▁= ▁new ▁Modifica BeniServizi (); ▁call _2. padre ▁= ▁this ; ▁call _2. setVisible ( true ); ▁} ▁void ▁canc BeneServizio () ▁{ ▁this . setEnabled ( false ); ▁call _ 3 ▁= ▁new ▁Cancella BeniServizi (); ▁call _3. padre ▁= ▁this ; ▁call _3. setVisible ( true ); ▁} ▁void ▁vedi BeneServizio () ▁{ ▁this . setEnabled ( false ); ▁call _ 4 ▁= ▁new ▁VediBeniServizi (); ▁call _4. padre ▁= ▁this ; ▁call _4. setVisible ( true ); ▁} ▁}