▁p ackage ▁interfacce ; ▁import ▁java . awt .* ; ▁import ▁java . awt . event .* ; ▁import ▁common . utility .* ; ▁import ▁modul i . BeneServizio ; ▁import ▁modul i . DataBase ; ▁import ▁modul i . ListaBeniServizi ; ▁p ublic ▁class ▁VediBeniServizi ▁ext ends ▁Maschera BeneServizio ▁{ ▁BeneServizio ▁extra ▁= ▁null ; ▁Label ▁elenco _ extra 1, ▁elenco _ extra 2, ▁desc _ extra , ▁px _ extra ; ▁TextField ▁desc , ▁prezzo ; ▁Button ▁annulla 3, ▁annulla _ canc ; ▁p ublic ▁VediBeniServizi () ▁{ ▁super (" Visualizzazione ▁dei ▁dati ▁di ▁un ▁bene ▁o ▁servizio "); ▁setup Pannello (); ▁initialize (); ▁} ▁void ▁setup Pannello () ▁{ ▁panel [11] . setLayout ( gridbag ); ▁elenco _ extra 1 ▁= ▁new ▁Label (" Sceglie re ▁il ▁bene ▁o ▁servizio , ▁appartenen te "); ▁elenco _ extra 2 ▁= ▁new ▁Label (" alla ▁categori a ▁selezionata , ▁da ▁visualizzare "); ▁annulla 3 ▁= ▁new ▁Button (" ▁Fine ▁"); ▁ Utils . constrain ( panel [11] , ▁elenco _ extra 1, ▁0, ▁0, ▁ 5, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁0, ▁0, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁elenco _ extra 2, ▁0, ▁1, ▁ 5, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁0, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁elenco , ▁0, ▁2, ▁ 5, ▁1, Grid BagConstraints . HORIZONTAL , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [11] , ▁annulla 3, ▁2, ▁3, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . CENTER , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁ 5); ▁panel [12]. setLayout ( gridbag ); ▁desc _ extra ▁= ▁new ▁Label (" Nome ▁del ▁bene "); ▁px _ extra ▁= ▁new ▁Label (" Prezzo ▁del ▁bene "); ▁desc ▁= ▁new ▁TextField ("",4 0) ; ▁prezzo ▁= ▁new ▁TextField ("", 10 ); ▁desc . setEditable ( false ); ▁prezzo . setEditable ( false ); ▁annulla _ canc ▁= ▁new ▁Button (" ▁Indietro ▁"); ▁ Utils . constrain ( panel [12] , ▁desc _ extra , ▁0, ▁0, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁desc , ▁1, ▁0, ▁ 4, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁0, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁px _ extra , ▁0, ▁1, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁ 0.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁prezzo , ▁1, ▁1, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . WEST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁ 5, ▁0) ; ▁ Utils . constrain ( panel [12] , ▁annulla _ canc , ▁1, ▁2, ▁1, ▁1, Grid BagConstraints . NONE , ▁Grid BagConstraints . EAST , ▁1.0, ▁ 0.0, ▁ 5, ▁ 5, ▁0, ▁ 5); ▁} ▁p ublic ▁void ▁initialize () ▁{ ▁scelta _ piatto [4]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ piatto [4]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . DES SERT ); ▁p (); ▁} ▁} ▁} ); ▁scelta _ piatto [5]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ piatto [5]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . FR UT TA ); ▁p (); ▁} ▁} ▁} ); ▁scelta _ servizio [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ servizio [0]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . RIC RE A TIVI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ servizio [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ servizio [1]. getStat e ()) ▁{ ▁ level ▁= ▁1; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . ALT RO ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . CA FF ETT ERI A ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . A NAL COL ICI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ bevanda [2]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ bevanda [2]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . AL COL ICI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ cibo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ cibo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . DO L CI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ cibo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ cibo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . SA L ATI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ antipasto [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ antipasto [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . F RED DI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ antipasto [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ antipasto [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . CAL DI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ primo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ primo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . SOL IDI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ primo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ primo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . LI QU IDI ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ secondo [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ secondo [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . C ARN E ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ secondo [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ secondo [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . P ESC E ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [0]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [0]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . VER D URA _ C OTTA ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [1]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [1]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . VER D URA _ CR UD A ); ▁o (); ▁} ▁} ▁} ); ▁scelta _ contorno [2]. add ItemListener ( new ▁ ItemListener () ▁{ ▁p ublic ▁void ▁item S tateChanged ( ItemEvent ▁e ) ▁{ ▁if ( scelta _ contorno [2]. getStat e ()) ▁{ ▁ level ▁= ▁2 ; ▁codice ▁= ▁compos e Code ( level , ▁BeneServizio . FORMA G GIO ); ▁o (); ▁} ▁} ▁} ); ▁annulla _ canc . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁go Back (); ▁} ▁} ); ▁annulla 3. a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁dispose (); ▁padre . setEnabled ( true ); ▁} ▁} ); ▁elenco . a ddActionListener ( new ▁ActionListener () ▁{ ▁p ublic ▁void ▁actionPerformed ( ActionEvent ▁e ) ▁{ ▁bene Seleziona to (); ▁} ▁} ); ▁} ▁// ▁init ▁void ▁bene Seleziona to () ▁{ ▁extra ▁= ▁L . get BeneServizio ( ( elenco . getSelectedIndex es ()) [0] +1 ); ▁remove ( panel [11] ); ▁this . add ( panel [12] ); ▁desc . setText ( extra . getDescrizione ()); ▁prezzo . setText ( extra . getP xUnit ario ()+" "); ▁panel [12]. setVisible ( true ); ▁ setVisible ( true ); ▁} ▁void ▁go Back () ▁{ ▁remove ( panel [12] ); ▁this . add ( panel [11] ); ▁panel [11] . setVisible ( true ); ▁ setVisible ( true ); ▁} ▁}