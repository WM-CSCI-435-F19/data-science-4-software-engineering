▁ ï»¿ p ackage ▁unisa . gps . etour . gui . operatoreagenzia . tables ; ▁import ▁java . awt . Component ; ▁import ▁java x . swing . JLabel ; ▁import ▁java x . swing . JTable ; ▁import ▁java x . swing . SwingConstants ; ▁import ▁java x . swing . table . T ableCellRenderer ; ▁import ▁unisa . gps . etour . util . Punto 3 D ; ▁/ ▁** ▁* ▁< b > ▁Punto 3 DRenderer ▁</ ▁b > ▁< p > ▁* ▁ This ▁class ▁creates ▁a ▁custom ▁renderer ▁for ▁* ▁Object s ▁of ▁type ▁Punto 3 D . ▁</ ▁P > ▁* ▁* ▁@ ▁Se e ▁java x . swing . table . T ableCellRenderer ▁* ▁@ ▁Se e ▁unisa . gps . etour . util . Punto 3 D ▁* ▁@ ▁Version ▁1.0 ▁* ▁@ ▁Auth or ▁M ario ▁G allo ▁* ▁* ▁* ▁/ ▁p ublic ▁class ▁Punto 3 DRenderer ▁implements ▁T ableCellRenderer ▁( ▁/ ▁** ▁* ▁Method ▁that ▁returns ▁the ▁custom ▁component ▁for ▁the ▁* ▁Display ▁of ▁the ▁data ▁contain ed ▁in ▁the ▁cell ▁of ▁a ▁table . ▁* ▁* ▁@ ▁Param ▁pTable ▁JTable ▁- ▁the ▁table . ▁* ▁@ ▁Param ▁Object ▁pValue ▁- ▁the ▁data . ▁* ▁@ ▁Param ▁boolean ▁pSelected ▁-- ▁* ▁< ul > ▁* ▁< li > ▁< i > ▁True ▁</ ▁i > ▁if ▁the ▁cell ▁is ▁selected . ▁* ▁< li > ▁< i > ▁False ▁</ ▁i > ▁otherwise . ▁* ▁</ ▁U l > ▁* ▁@ ▁Param ▁boolean ▁pHasFocus ▁-- ▁* ▁< ul > ▁* ▁< li > ▁< i > ▁True ▁</ ▁i > ▁if ▁the ▁cell ▁has ▁the ▁focus . ▁* ▁< li > ▁< i > ▁False ▁</ ▁i > ▁otherwise . ▁* ▁</ ▁U l > ▁* ▁@ ▁Param ▁int ▁pRow ▁- ▁the ▁line ▁number . ▁* ▁@ ▁Param ▁int ▁pColumn ▁- ▁the ▁column ▁number . ▁* ▁@ ▁Return ▁Component ▁- ▁the ▁component ▁that ▁c ustomize s ▁render ▁the ▁cell . ▁* ▁@ ▁Throw s ▁ Illegal A rgumentException ▁- ▁if ▁the ▁value ▁of ▁the ▁cell ▁can ▁not ▁* ▁Be ▁render ed ▁by ▁this ▁renderer . ▁* ▁/ ▁p ublic ▁Component ▁getT ableCellRenderer Component ▁( JTable ▁pTable , ▁Object ▁pValue , ▁boolean ▁pSelected , ▁boolean ▁pHasFocus , ▁int ▁p row , ▁int ▁pColumn ) ▁( ▁if ▁( ( pValue ▁instance of ▁Punto 3 D )) ▁( ▁throw ▁new ▁ Illegal A rgumentException ▁( ▁" Value ▁Cell a ▁ unexpected . "); ▁) ▁Pointe ▁Punto 3 D ▁= ▁( Punto 3 D ) ▁pValue ; ▁A Point . get Latitudine ▁String ▁point ▁= ▁() ▁+ ▁" ; " ▁A Point . get Longitudine ▁+ ▁() ▁+ ▁"" ▁+ ▁a Point . get Altitudine ▁(); ▁JLabel ▁aLabel ▁= ▁new ▁JLabel ▁( point , ▁ SwingConstants . CENTER ); ▁if ▁( pSelected ) ▁( ▁aLabel . setForeground ▁( pTable . getSelection Foreground ▁()); ▁aLabel . setBackground ▁( pTable . getSelection Background ▁()); ▁) ▁aLabel ▁return ; ▁) ▁)