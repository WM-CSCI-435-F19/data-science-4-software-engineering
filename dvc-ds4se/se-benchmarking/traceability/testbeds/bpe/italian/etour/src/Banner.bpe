▁p ackage ▁unisa . gps . etour . gui . operatoreagenzia ; ▁import ▁java . awt ▁ .* ; ▁import ▁java . awt . event ▁ .* ; ▁import ▁java . io . File N otFoundException ; ▁import ▁java . rmi . RemoteException ; ▁import ▁java . rmi . registry . LocateRegistry ; ▁import ▁java . rmi . registry . Registry ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . HashMap ; ▁import ▁java . util . Iterator ; ▁import ▁java x . swing ▁ .* ; ▁import ▁java . util ▁ .* ; ▁import ▁java x . swing . tree ▁ .* ; ▁import ▁java x . swing . border ▁ .* ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . Banner Dialog ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . Home ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . TagPanel ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . tables . BannerNode ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . tables . PRNode ; ▁import ▁unisa . gps . etour . bean . BeanBanner ; ▁import ▁unisa . gps . etour . bean . Bean PuntoDiRistoro ; ▁import ▁unisa . gps . etour . bean . BeanTag ; ▁import ▁unisa . gps . etour . control . Gestione Advertisement . IGestioneAdve rtisementAgenzia ; ▁import ▁unisa . gps . etour . control . Gestione PuntiDiRistoro . IGestione PuntiDiRistoro Agenzia ; ▁import ▁unisa . gps . etour . control . GestioneTag . IGestione TagComune ; ▁import ▁unisa . gps . etour . gui . DeskManager ; ▁import ▁unisa . gps . etour . gui . HelpManager ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . tables . BannerRenderer ; ▁p ublic ▁class ▁JInternalFrame ▁ext ends ▁Banner ▁( ▁priv ate ▁JPanel ▁jContentPane ▁= ▁null ; ▁priv ate ▁JPanel ▁rightPanel ▁= ▁null ; ▁Pr ivate ▁JToolBar ▁bannerToolbar ▁= ▁null ; ▁priv ate ▁JButton ▁btnInserisci ▁= ▁null ; ▁priv ate ▁JButton ▁btnSostituisci ▁= ▁null ; ▁priv ate ▁JButton ▁btnElimina ▁= ▁null ; ▁priv ate ▁JScrollPane ▁JScrollPane ▁= ▁null ; ▁priv ate ▁JPanel ▁helpPanel ▁= ▁null ; ▁priv ate ▁ JTextPane ▁textGuida ▁= ▁null ; ▁Pr ivate ▁ TagPanel ▁panelTag ▁= ▁null ; ▁priv ate ▁JButton ▁btnRicerca ▁= ▁null ; ▁priv ate ▁JButton ▁btnAzzera ▁= ▁null ; ▁priv ate ▁JPanel ▁panelSearch ▁= ▁null ; ▁priv ate ▁JTextField ▁nomePR ▁= ▁null ; ▁priv ate ▁JTree ▁treeBanner ▁= ▁null ; ▁Pr ivate ▁JDesktopPane ▁JDesktopPane ; ▁Pr ivate ▁ HelpManager ▁bannerHelp ; ▁p rot ected ▁DeskManager ▁desktopManager ; ▁p rot ected ▁IGestione PuntiDiRistoro Agenzia ▁gestione PuntiRistoro ; ▁p rot ected ▁IGestioneAdve rtisementAgenzia ▁gestioneBanner ; ▁p rot ected ▁IGestione TagComune ▁tags ; ▁/ ▁** ▁* ▁ This ▁& g rave ; ▁the ▁default ▁constructor . ▁* ▁/ ▁p ublic ▁Banner ▁() ▁( ▁super ▁( ▁" Banner "); ▁res izable ▁= ▁true ; ▁clos able ▁= ▁true ; ▁icon able ▁= ▁true ; ▁maxim izable ▁= ▁true ; ▁ setPreferredSize ▁( Home . CHI LD _ SIZE ); ▁frameIcon ▁= ▁new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" banner 2. png ") ); ▁/ ▁/ ▁Set ting ▁up ▁dell ' help ▁manager ▁for ▁cultural . ▁textGuida ▁= ▁new ▁ JTextPane ▁(); ▁TR Y ▁( ▁bannerHelp ▁= ▁new ▁ HelpManager ▁( Home . URL _ HE L P ▁+ ▁" Banner . txt " ▁textGuida ); ▁) ▁ catch ▁( File N otFoundException ▁e ) ▁( ▁textGuida ▁ . ▁setText ▁( ▁"< html > ▁< b > ▁Help ▁not ▁ava i lable ▁</ ▁b > ▁</ ▁html > "); ▁) ▁set ContentPane ▁( getJ ContentPane ▁()); ▁add InternalFrame Listener ▁( new ▁ InternalFrame Adapter ▁() ▁( ▁/ ▁* ▁* ▁I nclusion ▁of ▁the ▁frame ▁on ▁the ▁desktop ▁retrieve s ▁the ▁bread ▁* ▁ Link ▁to ▁the ▁desktop ▁pane . ▁* ▁/ ▁p ublic ▁void ▁internalFrame Open ed ▁( InternalFrame Event ▁pEvent ) ▁( ▁P Event . get InternalFrame ▁JInternalFrame ▁frame ▁= ▁(); ▁JDesktopPane ▁frame . get DesktopPane ▁= ▁(); ▁desktopManager ▁= ▁( DeskManager ) ▁j DesktopPane . get DesktopManager ▁(); ▁/ ▁/ ▁Set ting ▁up ▁of ▁remote ▁objects ▁for ▁the ▁management ▁of ▁cultural ▁heritage . ▁TR Y ▁( ▁ Registry ▁reg ▁= ▁ LocateRegistry . get Registry ▁( Home . HO ST ); ▁gestioneBanner ▁= ▁( IGestioneAdve rtisementAgenzia ) ▁reg . look up ▁( Gestione BeniCulturali Agenzia ▁"); ▁tag ▁= ▁( IGestione TagComune ) ▁reg . look up ▁( Gestione TagComune ▁"); ▁gestione PuntiRistoro ▁= ▁( IGestione PuntiDiRistoro Agenzia ) ▁reg . look up ▁( Gestione PuntiDiRistoro Agenzia ▁"); ▁/ ▁/ ▁Load ▁data . ▁create Tree ▁(); ▁carica Tags ▁(); ▁) ▁/ ▁* ▁* ▁T wo ▁exceptions : ▁RemoteException ▁and ▁ NotB oundException . ▁The ▁* ▁Result ▁is ▁the ▁same . ▁The ▁management ▁is ▁not ▁opera ble ▁and ▁* ▁A f ter ▁the ▁error ▁message ▁window ▁closes . ▁* ▁/ ▁ catch ▁( Exception ▁ex ) ▁( ▁JLabel ▁error ▁= ▁new ▁JLabel ▁( ▁"< html > ▁< h 2> ▁Un able ▁to ▁communicat e ▁with ▁the ▁server ▁eTour . ▁</ ▁h 2 >" ▁+ ▁"< h 3> ▁< u > ▁The ▁dialog ▁management ▁request ▁is ▁closed . ▁</ ▁U > ▁</ ▁h 3 >" ▁+ ▁"< p > ▁< b > ▁Pos sible ▁C aus es : ▁</ ▁b >" ▁+ ▁"< ul > ▁< li > ▁No ▁connection ▁to ▁the ▁ne t work . ▁</ ▁Li >" ▁+ ▁" Server ▁< li > ▁inactive . ▁</ ▁Li >" ▁+ ▁" Server ▁< li > ▁c logged . ▁</ ▁Li > ▁</ ▁ul >" ▁+ ▁"< p > ▁P lease ▁try ▁again ▁later . ▁</ ▁P >" ▁+ ▁"< p > ▁I f ▁the ▁error ▁ persist s , ▁p lease ▁conta ct ▁te ch n ical ▁support . ▁</ ▁P >" ▁+ ▁"< p > ▁We ▁a pologi ze ▁for ▁the ▁in convenien ce . ▁</ ▁H tml > "); ▁Err ▁= ▁new ▁ImageIcon ▁ImageIcon ▁( getClass ▁() . ▁GetR e source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" error 48 . png ") ); ▁JOptionPane . show MessageDialog ▁( JDesktopPane , ▁error , ▁" Error !" ▁JOptionPane . ERROR _ MESSAGE , ▁err ); ▁frame . dispose ▁(); ▁) ▁) ▁) ); ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁content ▁pane . ▁* ▁* ▁@ ▁Return ▁java x . swing . JPanel ▁- ▁the ▁content ▁pane . ▁* ▁/ ▁priv ate ▁JPanel ▁getJ ContentPane ▁() ▁( ▁if ▁( null ▁== ▁jContentPane ) ▁( ▁jContentPane ▁= ▁new ▁JPanel ▁(); ▁jContentPane . setLayout ▁( new ▁BorderLayout ▁()); ▁jContentPane . add ▁( get RightPanel ▁(), ▁BorderLayout . EAST ); ▁jContentPane . add ▁( getB annerToolbar ▁(), ▁BorderLayout . NORTH ); ▁jContentPane . add ▁( getT reeBanner ▁(), ▁BorderLayout . CENTER ); ▁) ▁jContentPane ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁toolbar ▁to ▁the ▁function s ▁of ▁management ▁* ▁Banner . ▁* ▁* ▁@ ▁Return ▁java x . swing . JToolBar ▁- ▁the ▁toolbar . ▁* ▁/ ▁Pr ivate ▁JToolBar ▁ getB annerToolbar ▁() ▁( ▁if ▁( null ▁== ▁bannerToolbar ) ▁( ▁bannerToolbar ▁JToolBar ▁= ▁new ▁(); ▁bannerToolbar . setLayout ▁( null ); ▁bannerToolbar . setPreferredSize ▁( new ▁Dimension ▁( 1, ▁50) ); ▁bannerToolbar . set Float able ▁( false ); ▁bannerToolbar . add ▁( getBtn Inserisci ▁()); ▁bannerToolbar . add ▁( getBtn Sostituisci ▁()); ▁bannerToolbar . add ▁( getBtnElimina ▁()); ▁) ▁bannerToolbar ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁button ▁to ▁insert ▁a ▁banner . ▁* ▁* ▁@ ▁Return ▁java x . swing . JButton ▁- ▁the ▁button ▁for ▁the ▁insertion . ▁* ▁/ ▁priv ate ▁JButton ▁getBtn Inserisci ▁() ▁( ▁if ▁( null ▁== ▁btnInserisci ) ▁( ▁btnInserisci ▁= ▁new ▁JButton ▁(); ▁btnInserisci . set Bounds ▁(5, ▁ 5, ▁14 0, ▁40 ); ▁btnInserisci . setText ▁( ▁"< html > ▁< br > ▁Show ▁Banner ▁</ ▁html > "); ▁btnInserisci . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" Nuovo Banner 32. png ▁ "))); ▁btnInserisci . setEnabled ▁( false ); ▁btnInserisci . setName ▁( btnInserisci ▁"); ▁btnInserisci . addMouse Listener ▁( bannerHelp ); ▁btnInserisci . a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁Default MutableTreeNode ▁ selectedNode ▁= ▁( Default MutableTreeNode ) ▁treeBanner ▁ . ▁getSelection Path ▁() . ▁getLast Path Component ▁(); ▁Open Dialog ▁( selectedNode ); ▁) ▁) ); ▁) ▁btnInserisci ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁button ▁for ▁editing ▁a ▁banner . ▁* ▁* ▁@ ▁Return ▁java x . swing . JButton ▁- ▁the ▁button ▁for ▁the ▁change . ▁* ▁/ ▁priv ate ▁JButton ▁getBtn Sostituisci ▁() ▁( ▁if ▁( null ▁== ▁btnSostituisci ) ▁( ▁btnSostituisci ▁= ▁new ▁JButton ▁(); ▁btnSostituisci . set Bounds ▁(15 5, ▁ 5, ▁14 0, ▁40 ); ▁btnSostituisci . setText ▁( ▁" Replace ▁< html > ▁< br > ▁Banner ▁</ ▁html > "); ▁btnSostituisci . setEnabled ▁( false ); ▁btnSostituisci . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" S ostituisciBanner 32. png ▁ "))); ▁btnSostituisci . setName ▁( btnSostituisci ▁"); ▁btnSostituisci . addMouse Listener ▁( bannerHelp ); ▁btnSostituisci . a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁Default MutableTreeNode ▁ selectedNode ▁= ▁( Default MutableTreeNode ) ▁treeBanner ▁ . ▁getSelection Path ▁() . ▁getLast Path Component ▁(); ▁Open Dialog ▁( selectedNode ); ▁) ▁) ); ▁) ▁btnSostituisci ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁delete ▁button ▁for ▁a ▁banner . ▁* ▁* ▁@ ▁Return ▁java x . swing . JButton ▁- ▁the ▁delete ▁button ▁for . ▁* ▁/ ▁priv ate ▁JButton ▁getBtnElimina ▁() ▁( ▁if ▁( null ▁== ▁btnElimina ) ▁( ▁btnElimina ▁= ▁new ▁JButton ▁(); ▁btnElimina . set Bounds ▁(30 5, ▁ 5, ▁14 0, ▁40 ); ▁btnElimina . setText ▁( ▁" Delete ▁< html > ▁< br > ▁Banner ▁</ ▁html > "); ▁btnElimina . setEnabled ▁( false ); ▁btnElimina . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" EliminaBanner 32. png ▁ "))); ▁btnElimina . setName ▁( btnElimina ▁"); ▁btnElimina . addMouse Listener ▁( bannerHelp ); ▁btnElimina . a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁Root ▁= ▁new ▁JPanel ▁JPanel ▁( new ▁BorderLayout ▁()); ▁JLabel ▁message ▁= ▁new ▁JLabel ▁( ▁" Are ▁you ▁ sure ▁you ▁want ▁to ▁delete ▁the ▁banner ▁selected ? "); ▁message . setFont ▁( new ▁Font ▁( ▁" Dialog ", ▁Font . BOLD , ▁14)) ; ▁JLabel ▁alert ▁= ▁new ▁JLabel ▁( ▁" The ▁banner ▁can ▁not ▁be ▁mo re ▁ re cover ed . " ▁ SwingConstants . CENTER ); ▁avvis o . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" warning 16. png ▁ "))); ▁root . add ▁( message , ▁BorderLayout . NORTH ); ▁root . add ▁( n otice , ▁BorderLayout . CENTER ); ▁String ▁[] ▁options ▁= ▁( ▁" Delete ", ▁" Cancel "); ▁int ▁choice ▁= ▁JOptionPane . showInternal Option Dialog ▁( ▁jContentPane , ▁root , ▁" Confirm ▁Delete ", ▁JOptionPane . YES _ NO _ OPTION , ▁JOptionPane . QU ESTION _ MESSAGE , ▁new ▁ImageIcon ▁( ▁getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" EliminaBanner 48 . png ")), ▁options , ▁options ▁[1] ); ▁if ▁( choice ▁== ▁JOptionPane . YES _ OPTION ) ▁( ▁ DefaultTreeModel ▁model ▁= ▁( DefaultTreeModel ) ▁treeBanner ▁ . ▁get Model ▁(); ▁model ▁ . ▁remove Node From Parent ▁( ( Default MutableTreeNode ) ▁treeBanner ▁ . ▁getSelection Path ▁() ▁ . ▁getLast Path Component ▁()); ▁JLabel ▁confirm ▁= ▁new ▁JLabel ▁( ▁" The ▁banner ▁selected " ▁+ ▁" Wa s ▁deleted . "); ▁confirm . setFont ▁( new ▁Font ▁( ▁" Dialog ", ▁Font . BOLD , ▁14)) ; ▁JOptionPane . showInternal MessageDialog ▁( jContentPane , ▁confirm , ▁" Banner ▁out !" ▁JOptionPane . OK _ OPTION , ▁new ▁ImageIcon ▁( getClass ▁() ▁ . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" ok 32. png ▁ "))); ▁) ▁) ▁) ); ▁) ▁btnElimina ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁creates ▁the ▁tree ▁start ing ▁from ▁the ▁information ▁contain ed ▁in ▁the ▁two ▁* ▁ArrayList ▁of ▁bean . ▁* ▁* ▁@ ▁Param ▁ArrayList ▁P PR ▁< Bean PuntoDiRistoro > ▁- ▁the ▁array ▁of ▁place s ▁to ▁eat . ▁* ▁@ ▁Param ▁pBanner ▁ArrayList ▁< BeanBanner > ▁- ▁the ▁array ▁of ▁banners ▁associated . ▁* ▁/ ▁priv ate ▁void ▁create Tree ▁() ▁( ▁/ ▁/ ▁Create ▁the ▁root ▁Default MutableTreeNode ▁root ▁= ▁new ▁Default MutableTreeNode ▁( ▁" eTour "); ▁/ ▁/ ▁For ▁each ▁refreshment ▁dell ' array list ▁call s ▁the ▁method ▁get ▁/ ▁/ ▁Banner . ▁TR Y ▁( ▁ArrayList ▁< Bean PuntoDiRistoro > ▁P PR ▁= ▁gestione PuntiRistoro . ottieni PuntiDiRistoro ▁(); ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< pPR . size ▁(); ▁i ▁+ ▁+) ▁( ▁Bean PuntoDiRistoro ▁current ▁= ▁p PR . get ▁( i ); ▁int ▁id ▁= ▁corrente . getId ▁(); ▁PRNode ▁puntoDiRistoro ▁= ▁new ▁PRNode ▁( corrente . getNome ▁(), ▁id ); ▁ HashMap ▁< BeanBanner , ▁ImageIcon > ▁banner ▁= ▁gestioneBanner . ottieniBanner sDa ID ▁( id ); ▁Iterator ▁< BeanBanner > ▁iteraBanner ▁= ▁banner . key Set ▁() . ▁Iterator ▁(); ▁while ▁( iteraBanner . hasNext ▁()) ▁( ▁BeanBanner ▁bannercorrente ▁= ▁iteraBanner . next ▁(); ▁BannerNode ▁ nuovoBanner ▁= ▁new ▁BannerNode ▁( banner ▁ . ▁get ▁( bannercorrente ) ▁bannercorrente . getId ▁()); ▁puntoDiRistoro . add ▁( nuovoBanner ); ▁) ▁root . add ▁( puntoDiRistoro ); ▁) ▁) ▁ catch ▁( RemoteException ▁ex ) ▁( ▁JLabel ▁error ▁= ▁new ▁JLabel ▁( ▁"< html > ▁< h 2> ▁Un able ▁to ▁communicat e ▁with ▁the ▁server ▁eTour . ▁</ ▁h 2 >" ▁+ ▁< h 3> ▁< u > ▁The ▁list ▁of ▁banners ▁was ▁not ▁loaded . ▁</ ▁U > ▁</ ▁h 3> ▁" ▁+ ▁"< p > ▁P lease ▁try ▁again ▁later . ▁</ ▁P >" ▁+ ▁"< p > ▁I f ▁the ▁error ▁ persist s , ▁p lease ▁conta ct ▁te ch n ical ▁support . ▁</ ▁P >" ▁+ ▁"< p > ▁We ▁a pologi ze ▁for ▁the ▁in convenien ce . ▁</ ▁H tml > "); ▁Err ▁= ▁new ▁ImageIcon ▁ImageIcon ▁( getClass ▁() . ▁GetR e source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" error 48 . png ") ); ▁JOptionPane . showInternal MessageDialog ▁( this , ▁error , ▁" Error !" ▁JOptionPane . ERROR _ MESSAGE , ▁err ); ▁) ▁finally ▁( ▁treeBanner . set Model ▁( new ▁ DefaultTreeModel ▁( root )); ▁) ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁tree ▁whe re ▁it ▁display s ▁the ▁banner . ▁* ▁* ▁@ ▁Return ▁java x . swing . JTree ▁* ▁/ ▁priv ate ▁JScrollPane ▁getT reeBanner ▁() ▁( ▁if ▁( null ▁== ▁treeBanner ) ▁( ▁treeBanner ▁= ▁new ▁JTree ▁( new ▁ DefaultTreeModel ▁( new ▁Default MutableTreeNode ▁( ▁" "))); ▁eTour ▁treeBanner . set Scroll sOn Expand ▁( true ); ▁treeBanner . setAuto scroll s ▁( true ); ▁treeBanner . set Scroll sOn Expand ▁( true ); ▁treeBanner . get SelectionModel ▁() . ▁s etSelectionMode ▁( ▁TreeSelection Model . S ING LE _ TR E E _ SELECT ION ); ▁treeBanner . setName ▁( treeBanner ▁"); ▁treeBanner . addMouse Listener ▁( bannerHelp ); ▁treeBanner . set R o o t V i sible ▁( false ); ▁treeBanner . set CellRenderer ▁( new ▁ BannerRenderer ▁()); ▁treeBanner . add TreeSelection Listener ▁( new ▁TreeSelection Listener ▁() ▁( ▁p ublic ▁void ▁Value Changed ▁( TreeSelection Event ▁s ) ▁( ▁Default MutableTreeNode ▁node ▁= ▁( Default MutableTreeNode ) ▁treeBanner ▁ . ▁getLast Selected Path Component ▁(); ▁if ▁( node ▁instance of ▁PRNode ) ▁( ▁btnInserisci . setEnabled ▁( true ); ▁btnElimina . setEnabled ▁( false ); ▁btnSostituisci . setEnabled ▁( false ); ▁) ▁else ▁if ▁( node ▁instance of ▁BannerNode ) ▁( ▁btnInserisci . setEnabled ▁( false ); ▁btnSostituisci . setEnabled ▁( true ); ▁btnElimina . setEnabled ▁( true ); ▁) ▁else ▁( ▁btnInserisci . setEnabled ▁( false ); ▁btnSostituisci . setEnabled ▁( false ); ▁btnElimina . setEnabled ▁( false ); ▁) ▁) ▁) ); ▁) ▁JScrollPane ▁= ▁new ▁JScrollPane ▁( treeBanner ); ▁JScrollPane ▁ . ▁ setVertical Scroll Bar Po lic y ▁( JScrollPane . VERTICAL _ SC ROLL BAR _ AL WA YS ); ▁JScrollPane ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁ right ▁side ▁panel . ▁* ▁* ▁@ ▁Return ▁java x . swing . JPanel ▁- ▁the ▁ right ▁panel . ▁* ▁/ ▁priv ate ▁JPanel ▁get RightPanel ▁() ▁( ▁if ▁( null ▁== ▁rightPanel ) ▁( ▁rightPanel ▁= ▁new ▁JPanel ▁(); ▁rightPanel . setLayout ▁( new ▁GridBagLayout ▁()); ▁Grid BagConstraints ▁g ▁= ▁new ▁Grid BagConstraints ▁(); ▁g . gridx ▁= ▁0; ▁g . grid y ▁= ▁0; ▁g . fill ▁= ▁Grid BagConstraints . BOTH ; ▁g . weight y ▁= ▁0. 7; ▁rightPanel . add ▁( getS earchPanel ▁(), ▁g ); ▁g . grid y ▁+ ▁+ ; ▁g . weight y ▁= ▁0.3 ; ▁rightPanel . add ▁( get HelpPanel ▁(), ▁g ); ▁) ▁rightPanel ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁panel ▁that ▁contain s ▁the ▁online ▁help . ▁* ▁* ▁@ ▁Return ▁java x . swing . JPanel ▁- ▁the ▁panel ▁for ▁the ▁guide . ▁* ▁/ ▁priv ate ▁JPanel ▁get HelpPanel ▁() ▁( ▁if ▁( null ▁== ▁helpPanel ) ▁( ▁helpPanel ▁= ▁new ▁JPanel ▁(); ▁helpPanel . setLayout ▁( new ▁BorderLayout ▁()); ▁helpPanel . set Border ▁( BorderFactory . create TitledBorder ▁( BorderFactory ▁ . ▁create Line Border ▁( new ▁Color ▁(51, ▁102, ▁255) , ▁3), ▁" Help ", ▁ TitledBorder . DEF A ULT _ JUSTIF ICA TION , ▁ TitledBorder . DEF A ULT _ POS I TION , ▁new ▁Font ▁( ▁" Dialog ", ▁Font . BOLD , ▁12), ▁new ▁Color ▁(0, ▁102, ▁ 204 ))); ▁helpPanel . setPreferredSize ▁( new ▁Dimension ▁(200 , ▁60 )); ▁textGuida . setPreferredSize ▁( new ▁Dimension ▁( 6, ▁30) ); ▁textGuida . setOp aque ▁( false ); ▁textGuida . setContent Type ▁( ▁" text ▁/ ▁html "); ▁textGuida . setText ▁( ▁"< html > ▁M ove ▁you r ▁mouse ▁point er ▁ over ▁a ▁control " ▁+ ▁" of ▁interest ▁to ▁display ▁the ▁con text - sen sitive ▁help . ▁</ ▁html > "); ▁textGuida . setEditable ▁( false ); ▁textGuida . setName ▁( textGuida ▁"); ▁textGuida . addMouse Listener ▁( bannerHelp ); ▁helpPanel . add ▁( textGuida , ▁BorderLayout . CENTER ); ▁) ▁helpPanel ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁panel ▁for ▁the ▁detect ion ▁of ▁points ▁* ▁Refreshments . ▁* ▁* ▁@ ▁Return ▁java x . swing . JPanel ▁- ▁the ▁panel ▁for ▁research . ▁* ▁/ ▁priv ate ▁JPanel ▁getS earchPanel ▁() ▁( ▁if ▁( null ▁== ▁panelSearch ) ▁( ▁panelSearch ▁= ▁new ▁JPanel ▁(); ▁panelSearch . setLayout ▁( new ▁GridBagLayout ▁()); ▁panelSearch . set Border ▁( BorderFactory . create TitledBorder ▁( ▁ BorderFactory . create Line Border ▁( new ▁Color ▁(51, ▁102, ▁255) , ▁3), ▁Research ▁Refreshment ▁" ▁ TitledBorder . DEF A ULT _ JUSTIF ICA TION , ▁ TitledBorder . DEF A ULT _ POS I TION , ▁new ▁Font ▁( ▁" Dialog ", ▁Font . BOLD , ▁12), ▁new ▁Color ▁(0, ▁102, ▁ 204 ))); ▁Grid BagConstraints ▁g ▁= ▁new ▁Grid BagConstraints ▁(); ▁g . anch or ▁= ▁Grid BagConstraints . CENTER ; ▁g . gridx ▁= ▁0; ▁g . grid y ▁= ▁0; ▁g . grid width ▁= ▁2 ; ▁g . i nsets ▁= ▁new ▁ Insets ▁(5, ▁ 5, ▁ 5, ▁ 5); ▁panelSearch . add ▁( new ▁JLabel ▁( ▁" Name ▁Refreshments : "), ▁g ); ▁nomePR ▁= ▁new ▁JTextField ▁(); ▁nomePR . setName ▁( nomePR ▁"); ▁nomePR . addMouse Listener ▁( bannerHelp ); ▁nomePR . setColumn s ▁(12 ); ▁g . i nsets ▁= ▁new ▁ Insets ▁(5, ▁ 5, ▁ 10, ▁ 5); ▁g . grid y ▁+ ▁+ ; ▁panelSearch . add ▁( nomePR , ▁g ); ▁g . i nsets ▁= ▁new ▁ Insets ▁(5, ▁ 5, ▁ 5, ▁ 5); ▁g . grid y ▁+ ▁+ ; ▁panelSearch . add ▁( new ▁JLabel ▁( ▁" Select ▁search ▁tags : "), ▁g ); ▁g . weight y ▁= ▁1.0 ; ▁g . i nsets ▁= ▁new ▁ Insets ▁(5, ▁ 5, ▁ 10, ▁ 5); ▁g . grid y ▁+ ▁+ ; ▁panelTag ▁= ▁new ▁ TagPanel ▁(); ▁panelTag . setName ▁( pannelloTag ▁"); ▁panelTag . addMouse Listener ▁( bannerHelp ); ▁panelTag . setPreferredSize ▁( new ▁Dimension ▁(180 , ▁10) ); ▁g . fill ▁= ▁Grid BagConstraints . VERTICAL ; ▁panelSearch . add ▁( panel Tag , ▁g ); ▁g . fill ▁= ▁Grid BagConstraints . NONE ; ▁g . i nsets ▁= ▁new ▁ Insets ▁(5, ▁ 5, ▁ 5, ▁ 5); ▁g . weight y ▁= ▁0; ▁g . grid y ▁+ ▁+ ; ▁g . grid width ▁= ▁1; ▁panelSearch . add ▁( getBtnRicerca ▁(), ▁g ); ▁g . gridx ▁+ ▁+ ; ▁panelSearch . add ▁( getBtnAzzera ▁(), ▁g ); ▁) ▁panelSearch ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁button ▁for ▁the ▁submission ▁of ▁the ▁form ▁* ▁Search ▁for ▁a ▁refreshment . ▁* ▁* ▁@ ▁Return ▁java x . swing . JButton ▁- ▁the ▁search ▁button . ▁* ▁/ ▁priv ate ▁JButton ▁getBtnRicerca ▁() ▁( ▁if ▁( null ▁== ▁btnRicerca ) ▁( ▁btnRicerca ▁= ▁new ▁JButton ▁(); ▁btnRicerca . setPreferredSize ▁( new ▁Dimension ▁( 98 , ▁26)) ; ▁btnRicerca . setText ▁( ▁" Search "); ▁btnRicerca . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" Ricerca 16. png ▁ "))); ▁btnRicerca . setName ▁( btnRicerca ▁"); ▁btnRicerca . addMouse Listener ▁( bannerHelp ); ▁) ▁btnRicerca ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁button ▁to ▁reset ▁the ▁fields ▁of ▁* ▁Search ▁ Form ▁for ▁a ▁refreshment . ▁* ▁* ▁@ ▁Return ▁java x . swing . JButton ▁- ▁the ▁ Reset ▁button . ▁* ▁/ ▁priv ate ▁JButton ▁getBtnAzzera ▁() ▁( ▁if ▁( null ▁== ▁btnAzzera ) ▁( ▁btnAzzera ▁= ▁new ▁JButton ▁(); ▁btnAzzera . setPreferredSize ▁( new ▁Dimension ▁( 98 , ▁26)) ; ▁btnAzzera . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" Azzera 16. png ▁ "))); ▁btnAzzera . setText ▁( ▁" Clear "); ▁btnAzzera . setHorizontal Text Position ▁( SwingConstants . LE AD ING ); ▁btnAzzera . setName ▁( btnAzzera ▁"); ▁btnAzzera . addMouse Listener ▁( bannerHelp ); ▁btnAzzera . a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁panelTag . azzera ▁(); ▁nomePR . setText ▁ (" "); ▁) ▁) ); ▁) ▁btnAzzera ▁return ; ▁) ▁/ ▁** ▁* ▁ This ▁method ▁open s ▁the ▁dialog ▁ box ▁for ▁entering ▁a ▁new ▁* ▁Banner ▁or ▁editing ▁a ▁banner ▁selected . ▁* ▁* ▁@ ▁Param ▁pSelectedNode ▁Default MutableTreeNode ▁- ▁the ▁selected ▁node . ▁* ▁/ ▁priv ate ▁void ▁Open Dialog ▁( Default MutableTreeNode ▁pSelectedNode ) ▁( ▁/ ▁/ ▁ This ▁class ▁inter cept s ▁mouse ▁event s ▁and ▁then ▁/ ▁/ ▁Make s ▁the ▁frame ▁be lo w ▁block ed . ▁class ▁Mod al Adapter ▁ext ends ▁ InternalFrame Adapter ▁( ▁Component ▁glass ; ▁p ublic ▁Mod al Adapter ▁( Component ▁pGlassComponent ) ▁( ▁this . glass ▁= ▁pGlassComponent ; ▁Mouse Input Adapter ▁ adapter ▁= ▁new ▁Mouse Input Adapter ▁() ▁( ▁ ); ▁pGlassComponent . addMouse Listener ▁( adapter ); ▁pGlassComponent . addMouse Mo tion Listener ▁( adapter ); ▁) ▁p ublic ▁void ▁internalFrame Closed ▁( InternalFrame Event ▁s ) ▁( ▁glass . setVisible ▁( false ); ▁) ▁) ▁/ ▁/ ▁Co nstruction ▁of ▁the ▁dialog ▁JOptionPane ▁optionPane ▁= ▁new ▁JOptionPane ▁(); ▁final ▁JInternalFrame ▁modal ▁= ▁optionPane . create InternalFrame ▁( ▁JDesktopPane , ▁" "); ▁final ▁JPanel ▁glass ▁= ▁new ▁JPanel ▁(); ▁BannerDialog ▁final ▁BannerDialog ▁dialog ▁= ▁new ▁(); ▁optionPane . setMessage ▁( dialogue ); ▁optionPane . setMessage Type ▁( JOptionPane . IN FORMA TION _ MESSAGE ); ▁JButton ▁[] ▁options ▁= ▁new ▁JButton ▁[2] ; ▁options ▁[0] ▁= ▁new ▁JButton ▁(); ▁options ▁[1] ▁= ▁new ▁JButton ▁( ▁" Cancel "); ▁options ▁ [0]. ▁setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" Salva 16. png ▁ "))); ▁options ▁ [1]. ▁setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" Annulla 16. png ▁ "))); ▁optionPane . set Option s ▁( options ); ▁options ▁ [1]. ▁a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁modal . setVisible ▁( false ); ▁glass . setVisible ▁( false ); ▁) ▁) ); ▁glass . setOp aque ▁( false ); ▁modal . add InternalFrame Listener ▁( new ▁Mod al Adapter ▁( glass )); ▁glass . add ▁( modal ); ▁set G la s s P an e ▁( glass ); ▁modal . set Location ▁( this . getW idth ▁() ▁/ ▁2, ▁this . getH eight ▁() ▁/ ▁2 ); ▁glass . setVisible ▁( true ); ▁modal . setVisible ▁( true ); ▁if ▁( pSelectedNode ▁instance of ▁BannerNode ) ▁/ ▁/ ▁Replace ▁( ▁final ▁BannerNode ▁banner ▁= ▁( BannerNode ) ▁pSelectedNode ; ▁options ▁ [0]. ▁setText ▁( ▁" Replace "); ▁options ▁ [0]. ▁a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁ DefaultTreeModel ▁model ▁= ▁( DefaultTreeModel ) ▁treeBanner ▁ . ▁get Model ▁(); ▁banner . set Banner ▁( dialog o . getSelected Banner ▁()); ▁model . node Changed ▁( banner ); ▁glass . setVisible ▁( false ); ▁modal . setVisible ▁( false ); ▁) ▁) ); ▁optionPane . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" S ostituisciBanner 48 . png ▁ "))); ▁modal . setTitle ▁( ▁" Replace ▁the ▁banner ▁to ▁the ▁point ▁of ▁rel i ef " ▁+ ▁( ( PRNode ) ▁pSelectedNode . get Parent ▁()) . ▁GetUser Object ▁() ▁ . ▁toString ▁()); ▁) ▁else ▁if ▁( pSelectedNode ▁instance of ▁PRNode ) ▁/ ▁/ ▁Inserting ▁( ▁PRNode ▁final ▁pr ▁= ▁( PRNode ) ▁pSelectedNode ; ▁options ▁ [0]. ▁setText ▁( ▁" Save "); ▁options ▁ [0]. ▁a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁ DefaultTreeModel ▁model ▁= ▁( DefaultTreeModel ) ▁treeBanner ▁ . ▁get Model ▁(); ▁BannerNode ▁new ▁= ▁new ▁BannerNode ▁( dialogue ▁ . ▁getSelected Banner ▁(), ▁pr . getID ▁()); ▁model . insert Node Int o ▁( new , ▁pr , ▁0) ; ▁glass . setVisible ▁( false ); ▁modal . setVisible ▁( false ); ▁) ▁) ); ▁optionPane . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" nuovoBanner 48 . png ▁ "))); ▁modal . setTitle ▁( ▁" Enter ▁banner ▁to ▁the ▁point ▁of ▁rel i ef " ▁P Selected Node . get User Object ▁+ ▁() . ▁ToString ▁()); ▁) ▁) ▁priv ate ▁void ▁carica Tags ▁() ▁( ▁ArrayList ▁< BeanTag > ▁beanTags ▁= ▁null ; ▁TR Y ▁( ▁beanTags ▁= ▁tag . ottieniTags ▁(); ▁) ▁/ ▁/ ▁I f ▁an ▁error ▁display s ▁an ▁error ▁message . ▁ catch ▁( RemoteException ▁e ) ▁( ▁) ▁finally ▁( ▁for ▁( BeanTag ▁b : ▁beanTags ) ▁( ▁panelTag . insert Tag ▁( b ); ▁) ▁panelTag . repaint ▁(); ▁) ▁) ▁)