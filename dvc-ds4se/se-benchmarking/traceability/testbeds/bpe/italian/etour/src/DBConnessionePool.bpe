▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁ Java . sql . Connection ; ▁import ▁java . sql . DriverManager ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁/ ▁** ▁* ▁Class ▁that ▁creates ▁the ▁connection ▁to ▁the ▁database ▁us ing ▁J D BC ▁and ▁* ▁Allow s ▁you ▁to ▁query ▁bo th ▁read ▁and ▁edit ▁the ▁content s ▁of ▁* ▁Database . ▁E ▁' i mplemented ▁to ▁provide ▁a ▁pool ▁of ▁connections ▁to ▁* ▁Provide ▁a ▁connection ▁to ▁each ▁thread . ▁* ▁* ▁@ ▁Auth or ▁M auro ▁M ir anda ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁D BConnessionePool ▁( ▁priv ate ▁final ▁static ▁String ▁driver ▁= ▁" com . mysql . jdbc . Driver "; ▁priv ate ▁final ▁static ▁String ▁ urlConnessione ▁= ▁" jdbc : ▁mysql : ▁/ ▁/ ▁localhost ▁/ ▁eTour ? ▁user ▁= ▁& ▁password ▁= ▁mauro ▁mauro "; ▁priv ate ▁static ▁List ▁< Connection > ▁c onnessioniLibere ; ▁/ ▁* ▁Pr ivate ▁constructor ▁that ▁init i ate s ▁the ▁connection ▁to ▁the ▁database ▁* ▁/ ▁/ ▁* ▁* ▁S tatic ▁initialization ▁block ▁is ▁ used ▁to ▁load ▁the ▁driver ▁* ▁M e mo ry ▁* ▁/ ▁static ▁( ▁c onnessioniLibere ▁= ▁< Connection > ▁new ▁ArrayList ▁(); ▁TR Y ▁( ▁Class . forName ▁( driver ); ▁) ▁ catch ▁( Class N otFoundException ▁e ) ▁( ▁e . printStackTrace ▁(); ▁) ▁) ▁/ ▁** ▁* ▁Method ▁to ▁get ▁the ▁connection ▁to ▁the ▁server . ▁* ▁* ▁@ ▁Return ▁Return s ▁the ▁database ▁connection ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁static ▁sy nch ron ized ▁Connection ▁ottieni Connessione ▁() ▁throws ▁SQLException ▁( ▁Connection ▁connection ; ▁if ▁(! ▁c onnessioniLibere . isEmpty ▁()) ▁( ▁/ ▁/ ▁E xtract ▁a ▁connection ▁from ▁the ▁fre e ▁db ▁connection ▁queue ▁connection ▁= ▁c onnessioniLibere . get ▁(0) ; ▁D BConnessionePool . c onnessioniLibere . remove ▁(0) ; ▁TR Y ▁( ▁/ ▁/ ▁I f ▁the ▁connection ▁is ▁not ▁valid , ▁a ▁new ▁connection ▁will ▁be ▁/ ▁/ ▁A nalyzed ▁if ▁( connection . isClosed ▁()) ▁D BConnessionePool . ottieni Connessione ▁connection ▁= ▁(); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁D BConnessionePool . ottieni Connessione ▁connection ▁= ▁(); ▁) ▁) ▁else ▁/ ▁/ ▁The ▁fre e ▁db ▁connection ▁queue ▁is ▁empty , ▁so ▁a ▁new ▁connection ▁will ▁/ ▁/ ▁Be ▁create d ▁D BConnessionePool . crea DBConnessione ▁connection ▁= ▁(); ▁return ▁connection ; ▁) ▁p ublic ▁static ▁void ▁rilascia Connessione ▁( Connection ▁p Released Connection ) ▁( ▁/ ▁/ ▁Add ▁the ▁connection ▁to ▁the ▁fre e ▁db ▁connection ▁queue ▁D BConnessionePool . c onnessioniLibere . add ▁( p Released Connection ); ▁) ▁priv ate ▁static ▁Connection ▁crea DBConnessione ▁() ▁throws ▁SQLException ▁( ▁Connection ▁ nuovaConnessione ▁= ▁null ; ▁/ ▁/ ▁Create ▁a ▁new ▁db ▁connection ▁us ing ▁the ▁db ▁properties ▁ nuovaConnessione ▁= ▁ DriverManager . getConnection ▁( urlConnessione ); ▁ nuovaConnessione . setAutoCommit ▁( true ); ▁ nuovaConnessione ▁return ; ▁) ▁)