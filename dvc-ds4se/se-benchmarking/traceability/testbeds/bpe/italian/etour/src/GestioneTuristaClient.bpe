▁ ï»¿ p ackage ▁unisa . gps . etour . control . Gestione UtentiRegistrati ; ▁import ▁java . rmi . RemoteException ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Iterator ; ▁import ▁unisa . gps . etour . bean . Bean BeneCulturale ; ▁import ▁unisa . gps . etour . bean . BeanPreferenz aDiRicerca ; ▁import ▁unisa . gps . etour . bean . BeanPreferenz eGeneriche ; ▁import ▁unisa . gps . etour . bean . Bean PuntoDiRistoro ; ▁import ▁unisa . gps . etour . bean . BeanTurista ; ▁import ▁unisa . gps . etour . bean . BeanVisitaBC ; ▁import ▁unisa . gps . etour . bean . BeanVisitaPR ; ▁import ▁unisa . gps . etour . repository . DBBeneCulturale ; ▁import ▁unisa . gps . etour . repository . DBPreferenze DiRicerca ; ▁import ▁unisa . gps . etour . repository . DBPreferenze Generiche ; ▁import ▁unisa . gps . etour . repository . DBPuntoDiRistoro ; ▁import ▁unisa . gps . etour . repository . DBTurista ; ▁import ▁unisa . gps . etour . repository . DBVisitaBC ; ▁import ▁unisa . gps . etour . repository . DBVisitaPR ; ▁import ▁unisa . gps . etour . repository . IDBBeneCulturale ; ▁import ▁unisa . gps . etour . repository . IDBPreferenze DiRicerca ; ▁import ▁unisa . gps . etour . repository . IDBPreferenze Generiche ; ▁import ▁unisa . gps . etour . repository . IDB PuntoDiRistoro ; ▁import ▁unisa . gps . etour . repository . IDBTurista ; ▁import ▁unisa . gps . etour . repository . IDBVisitaBC ; ▁import ▁unisa . gps . etour . repository . IDBVisitaPR ; ▁import ▁unisa . gps . etour . util . ControlloDati ; ▁import ▁unisa . gps . etour . util . MessaggiErrore ; ▁/ ▁** ▁* ▁Class ▁on ▁the ▁Management ▁of ▁Tourist ▁Information ▁* ▁* ▁@ ▁Auth or ▁F ed e rico ▁Le on ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁University ▁of ▁DMI ▁* ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁Gestione TuristaClient ▁ext ends ▁Gestione TuristaComune ▁implements ▁IGestione TuristaClient ▁( ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁=-6 161 592 8 5072 1 5373 85 L ; ▁Pr ivate ▁IDBTurista ▁profiloTurista ▁/ ▁/ ▁Data ▁Management ▁for ▁tourists ▁Pr ivate ▁IDBPreferenze Generiche ▁prefGenTurista ▁/ ▁/ ▁preferences , ▁general ▁manager ▁of ▁the ▁tourist ▁Pr ivate ▁IDBPreferenze DiRicerca ▁prefRicTurista , ▁/ ▁/ ▁Hand le ▁search ▁preferences ▁of ▁tourists ▁Pr ivate ▁IDBVisitaBC ▁visitatiBC ▁/ ▁/ ▁Manag ing ▁cultural ▁Visited ▁Pr ivate ▁IDBVisitaPR ▁visitatiPR ▁/ ▁/ ▁Manager ▁ca tering ▁outlets ▁visited ▁Pr ivate ▁ IDBBeneCulturale ▁beneCulturale ▁/ ▁/ ▁Manag ing ▁cultural ▁heritage ▁( w e ▁need ▁on ly ▁obtain ▁a ▁bean ▁ BeneCulturale ▁ x ▁/ ▁/ ▁from ▁its ▁ID ▁Pr ivate ▁I DBPuntoDiRistoro ▁puntoDiRistoro ▁/ ▁/ ▁Management ▁refreshment ▁areas ▁( us e ▁the ▁same ▁object ▁" beneCulturale " ▁p ublic ▁Gestione TuristaClient ▁() ▁throws ▁RemoteException ▁( ▁super ▁(); ▁profiloTurista ▁= ▁new ▁ DBTurista ▁(); ▁prefGenTurista ▁= ▁new ▁DBPreferenze Generiche ▁(); ▁prefRicTurista ▁= ▁new ▁DBPreferenze DiRicerca ▁(); ▁visitatiBC ▁= ▁new ▁ DBVisitaBC ▁(); ▁visitatiPR ▁= ▁new ▁ DBVisitaPR ▁(); ▁beneCulturale ▁= ▁new ▁ DBBeneCulturale ▁(); ▁puntoDiRistoro ▁= ▁new ▁ DBPuntoDiRistoro ▁(); ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁cancella Preferenz eDiRicerca ▁( int , ▁* ▁Int ) ▁* ▁/ ▁p ublic ▁BeanPreferenz aDiRicerca ▁cancella Preferenz eDiRicerca ▁( pIdTurista ▁int , ▁int ▁pIdPreferenza DiRicerca ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁boolean ▁delete ▁= ▁true ; ▁BeanPreferenz aDiRicerca ▁ PrefRic ▁= ▁new ▁BeanPreferenz aDiRicerca ▁(); ▁< BeanPreferenz aDiRicerca > ▁ElencoPrefRic ▁ArrayList ▁< BeanPreferenz aDiRicerca > ▁= ▁new ▁ArrayList ▁(); ▁ElencoPrefRic ▁= ▁prefRicTurista . ottieniPreferenz eDiRicercaDel Turista ▁( pIdTurista ); ▁< BeanPreferenz aDiRicerca > ▁= ▁ElencoPrefRic . iterator ▁list ▁iterator ▁(); ▁while ▁( elenco . hasNext ▁() ▁& ▁& ▁cancel ▁== ▁true ) ▁( ▁ PrefRic ▁= ▁elenco . next ▁(); ▁if ▁( PrefRic . getId ▁() ▁== ▁pIdPreferenza DiRicerca ) ▁delete ▁= ▁false ; ▁/ ▁/ ▁Fin d ▁the ▁anni vers ary ▁with ▁the ▁id ▁/ ▁/ ▁We ▁le ave ▁the ▁interest ed ▁/ ▁/ ▁Cycle ▁) ▁Cancellation ▁prefRicTurista . cancella Preferenz aDiRicerca Turista ▁= ▁( ▁pIdTurista , ▁pIdPreferenza DiRicerca ); ▁ PrefRic ▁return ; ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁cancella Preferenz eGeneriche ▁( int ) ▁* ▁/ ▁p ublic ▁BeanPreferenz eGeneriche ▁cancella Preferenz eGeneriche ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁BeanPreferenz eGeneriche ▁temp ▁= ▁prefGenTurista . ottieni PreferenzaGene rica ▁( pIdTurista ); ▁boolean ▁cancel ed ▁= ▁prefGenTurista . cancella PreferenzaGene rica ▁( temp . getId ▁()); ▁if ▁( cancel ) ▁return ▁temp ; ▁else ▁return ▁null ; ▁/ ▁/ ▁The ▁cancellation ▁occur red ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁in serisciPreferenz aDiRicerca ▁( int , ▁* ▁Uni s a . gps . etour . bean . BeanPreferenz aDiRicerca ) ▁* ▁/ ▁p ublic ▁boolean ▁in serisciPreferenz aDiRicerca ▁( int ▁pIdTurista , ▁BeanPreferenz aDiRicerca ▁pPreferenz aDiRicerca ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁boolean ▁ checkdate ▁= ▁ControlloDati . check BeanPreferenz aDiRicerca ▁( pPreferenz aDiRicerca ); ▁if ▁( checkdate ) ▁( / ▁/ ▁I f ▁the ▁data ▁control ▁is ▁positive ▁return ▁prefRicTurista . in serisciPreferenz aDiRicercaDel Turista ▁( pIdTurista , ▁pPreferenz aDiRicerca . getId ▁()); ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Data ▁error ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁in serisciPreferenz eGeneriche ▁( unisa . gps . etour . bean . BeanPreferenz eGeneriche ) ▁* ▁/ ▁p ublic ▁boolean ▁in serisciPreferenz eGeneriche ▁( BeanPreferenz eGeneriche ▁pPreferenz eGeneriche ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁boolean ▁ checkdate ▁= ▁ControlloDati . check BeanPreferenz eGeneriche ▁( pPreferenz eGeneriche ); ▁if ▁( checkdate ) ▁( / ▁/ ▁I f ▁the ▁data ▁control ▁is ▁positive ▁return ▁prefGenTurista . inserisci PreferenzaGene neric a ▁( pPreferenz eGeneriche ); ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Data ▁error ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁inserisci Turista ▁( unisa . gps . etour . bean . BeanTurista ) ▁* ▁/ ▁p ublic ▁boolean ▁inserisci Turista ▁( BeanTurista ▁pTurista ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁/ ▁/ ▁Check ▁if ▁the ▁username ▁entered ▁is ▁al read y ▁present ▁in ▁DB ▁BeanTurista ▁temp ▁= ▁profiloTurista . ottieniTurista ▁( pTurista . get Username ▁()); ▁/ ▁/ ▁I f ▁there ▁is ▁no ▁choice ▁all ' username ▁Tourist ▁ Office s ▁if ▁( temp ▁== ▁null ) ▁( ▁boolean ▁ checkdate ▁= ▁ControlloDati . check BeanTurista ▁( pTurista ); ▁if ▁( checkdate ) ▁( / ▁/ ▁I f ▁the ▁data ▁control ▁is ▁positive ▁return ▁profiloTurista . inserisci Turista ▁( pTurista ); ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Data ▁error ▁) ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Username ▁al read y ▁exists ▁in ▁DB ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁modifica Preferenz eGeneriche ▁( unisa . gps . etour . bean . BeanPreferenz eGeneriche ) ▁* ▁/ ▁p ublic ▁boolean ▁modifica Preferenz eGeneriche ▁( BeanPreferenz eGeneriche ▁pPreferenz eGenericheNuove ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁boolean ▁ checkdate ▁= ▁ControlloDati . check BeanPreferenz eGeneriche ▁( pPreferenz eGenericheNuove ); ▁if ▁( checkdate ) ▁( / ▁/ ▁I f ▁the ▁data ▁control ▁is ▁positive ▁return ▁prefGenTurista . modifica PreferenzaGene rica ▁( pPreferenz eGenericheNuove ); ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Data ▁error ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ ottieniPreferenz eDiRicerca ▁( int ) ▁* ▁/ ▁p ublic ▁BeanPreferenz aDiRicerca ▁[] ▁ ottieniPreferenz eDiRicerca ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Array ▁containing ▁the ▁list ▁of ▁search ▁preferences ▁tourists ▁ID ▁= ▁pIdTurista ▁BeanPreferenz aDiRicerca ▁[] ▁preferences ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁** ▁Convert ▁ArrayList ▁( return ▁type ▁of ▁method ▁" ottieniPreferenz eDiRicerca ") ▁to ▁ simple ▁array ▁** ▁ArrayList ▁< BeanPreferenz aDiRicerca > ▁listaPreferenze ▁= ▁prefRicTurista . ottieniPreferenz eDiRicercaDel Turista ▁( pIdTurista ); ▁preferences ▁= ▁new ▁BeanPreferenz aDiRicerca ▁[ listaPreferenze . size ▁() ]; ▁= ▁listaPreferenze . to Array ▁preferences ▁( preferences ); ▁/ ▁/ ▁** ▁** ▁End ▁Conversion ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁return ▁preferences ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ ottieniPreferenz eGeneriche ▁( int ) ▁* ▁/ ▁p ublic ▁BeanPreferenz eGeneriche ▁ ottieniPreferenz eGeneriche ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁return ▁prefGenTurista . ottieni PreferenzaGene rica ▁( pIdTurista ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . Gestione TuristaComune ▁# ▁modificaTurista ▁( unisa . gps . etour . bean . BeanTurista ) ▁* ▁/ ▁p ublic ▁boolean ▁modificaTurista ▁( BeanTurista ▁p profiloTurista ) ▁throws ▁RemoteException ▁( ▁TR Y ▁( ▁/ ▁/ ▁Boolean ▁variable ▁that ▁will ▁hold ▁true ▁if ▁the ▁bean ▁is ▁correct , ▁false ▁otherwise ▁boolean ▁ checkdate ▁= ▁ControlloDati . check BeanTurista ▁( p profiloTurista ); ▁if ▁( checkdate ) ▁( / ▁/ ▁I f ▁the ▁data ▁control ▁is ▁positive ▁return ▁profiloTurista . modificaTurista ▁( p profiloTurista ); ▁) ▁else ▁( ▁return ▁false ; ▁/ ▁/ ▁Data ▁error ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ottieni BeniCulturali Visita ti ▁( int ) ▁* ▁/ ▁p ublic ▁BeanVisitaBC ▁[] ▁ottieni BeniCulturali Visita ti ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁BeanVisitaBC ▁[] ▁visited ▁= ▁null ; ▁if ▁( pIdTurista > ▁0) ▁( ▁TR Y ▁( ▁ArrayList ▁< BeanVisitaBC > ▁listavisitati ▁= ▁visitatiBC . ottieni ListaVisitaBC Turista ▁( pIdTurista ); ▁visited ▁= ▁new ▁BeanVisitaBC ▁[ listavisitati . size ▁() ]; ▁visited ▁= ▁listavisitati . to Array ▁( visited ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁visit ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ottieniPunt i DiRistoroVisitat i ▁( int ) ▁* ▁/ ▁p ublic ▁BeanVisitaPR ▁[] ▁ottieniPunt i DiRistoroVisitat i ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Array ▁containing ▁the ▁list ▁of ▁ca tering ▁outlets ▁visited ▁by ▁tourists ▁with ▁id ▁" pIdTurista " ▁BeanVisitaPR ▁[] ▁visited ▁= ▁null ; ▁if ▁( pIdTurista > ▁0) ▁( ▁TR Y ▁( ▁ArrayList ▁< BeanVisitaPR > ▁listavisitati ▁= ▁visitatiPR . ottieni ListaVisitaPR Turista ▁( pIdTurista ); ▁visited ▁= ▁new ▁BeanVisitaPR ▁[ listavisitati . size ▁() ]; ▁visited ▁= ▁listavisitati . to Array ▁( visited ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁visit ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁inserisci BeneCulturale Visitato ▁( unisa . gps . etour . bean . BeanVisitaBC ) ▁* ▁/ ▁p ublic ▁boolean ▁inserisci BeneCulturale Visitato ▁( BeanVisitaBC ▁pVisitaBC ) ▁throws ▁RemoteException ▁( ▁if ▁( ControlloDati . check BeanVisitaBC ▁( pVisitaBC )) ▁( ▁TR Y ▁( ▁return ▁visitatiBC . inserisci VisitaBC ▁( pVisitaBC ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁inserisci PuntoDiRistoro Visitato ▁( unisa . gps . etour . bean . BeanVisitaPR ) ▁* ▁/ ▁p ublic ▁boolean ▁inserisci PuntoDiRistoro Visitato ▁( BeanVisitaPR ▁pVisitaPR ) ▁throws ▁RemoteException ▁( ▁if ▁( ControlloDati . check BeanVisitaPR ▁( pVisitaPR )) ▁( ▁TR Y ▁( ▁return ▁visitatiPR . inserisci VisitaPR ▁( pVisitaPR ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁inserisci BeneCulturale Preferit o ▁( int , ▁* ▁Int ) ▁* ▁/ ▁p ublic ▁boolean ▁inserisci BeneCulturale Preferit o ▁( pIdTurista ▁int , ▁int ▁ pIdBeneCulturale ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0 ▁& ▁& ▁ pIdBeneCulturale > ▁0) ▁( ▁TR Y ▁( ▁return ▁profiloTurista . inserisci BeneCulturale Preferit o ▁( pIdTurista , ▁ pIdBeneCulturale ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁inserisci PuntoDiRistoro Preferit o ▁( int , ▁* ▁Int ) ▁* ▁/ ▁p ublic ▁boolean ▁inserisci PuntoDiRistoro Preferit o ▁( pIdTurista ▁int , ▁int ▁p IdPuntoDiRistoro ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0 ▁& ▁& ▁p IdPuntoDiRistoro > ▁0) ▁( ▁TR Y ▁( ▁return ▁profiloTurista . inserisci PuntoDiRistoro Preferit o ▁( pIdTurista , ▁p IdPuntoDiRistoro ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁cancella BeneCulturale Preferit o ▁( int , ▁* ▁Int ) ▁* ▁/ ▁p ublic ▁boolean ▁cancella BeneCulturale Preferit o ▁( pIdTurista ▁int , ▁int ▁ pIdBeneCulturale ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0 ▁& ▁& ▁ pIdBeneCulturale > ▁0) ▁( ▁TR Y ▁( ▁return ▁profiloTurista . cancella BeneCulturale Preferit o ▁( pIdTurista , ▁ pIdBeneCulturale ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁* ▁( Non - Java doc ) ▁* ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁cancella PuntoDiRistoro Preferit o ▁( int , ▁* ▁Int ) ▁* ▁/ ▁p ublic ▁boolean ▁cancella PuntoDiRistoro Preferit o ▁( pIdTurista ▁int , ▁int ▁p IdPuntoDiRistoro ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0 ▁& ▁& ▁p IdPuntoDiRistoro > ▁0) ▁( ▁TR Y ▁( ▁return ▁profiloTurista . cancella PuntoDiRistoro Preferit o ▁( pIdTurista , ▁p IdPuntoDiRistoro ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁false ; ▁) ▁/ ▁* ▁( Non - Java doc ) ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ottieni BeniCulturali Preferiti ▁( int ) ▁* ▁/ ▁p ublic ▁Bean BeneCulturale ▁[] ▁ottieni BeniCulturali Preferiti ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0) ▁( ▁TR Y ▁( ▁/ ▁/ ▁List ▁of ▁cultural ▁favorites ▁of ▁tourists ▁c n ▁id ▁= ▁" pIdTurista " ▁ArrayList ▁< Integer > ▁listaPreferiti ▁= ▁profiloTurista . ottieni BeniCulturali Preferiti ▁( pIdTurista ); ▁/ ▁/ ▁Convert ▁ArrayList ▁a ▁ simple ▁array ▁Bean BeneCulturale ▁[] ▁favorites ▁= ▁null ; ▁Favorite ▁= ▁new ▁Bean BeneCulturale ▁[ listaPreferiti . size ▁() ]; ▁Favorite ▁listaPreferiti . to Array ▁= ▁( favorites ); ▁int ▁k ▁= ▁0, ▁/ ▁/ ▁Cycle ▁counter ▁for ▁( Integer ▁i : ▁listaPreferiti ) ▁( ▁/ ▁/ ▁F ill ▁the ▁array ▁with ▁the ▁favorite ▁bean ▁of ▁all ▁cultural ▁favorites ▁from ▁the ▁tourist ▁Favorites ▁[ k ▁+ ▁+ ] ▁= ▁beneCulturale . ottieni BeneCulturale ▁( i ); ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁null ; ▁) ▁/ ▁* ▁( Non - Java doc ) ▁* ▁@ ▁Se e ▁unisa . gps . etour . control . Gestione UtentiRegistrati . IGestione TuristaClient ▁# ▁ottieni PuntiDiRistoro Preferiti ▁( int ) ▁* ▁/ ▁p ublic ▁Bean PuntoDiRistoro ▁[] ▁ottieni PuntiDiRistoro Preferiti ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁if ▁( pIdTurista > ▁0) ▁( ▁TR Y ▁( ▁/ ▁/ ▁List ▁of ▁place s ▁for ▁refreshment ▁favorite ▁tourist ▁c n ▁id ▁= ▁" pIdTurista " ▁ArrayList ▁< Integer > ▁listaPreferiti ▁= ▁profiloTurista . ottieni PuntoDiRistoro Preferiti ▁( pIdTurista ); ▁/ ▁/ ▁Convert ▁ArrayList ▁a ▁ simple ▁array ▁Bean PuntoDiRistoro ▁[] ▁favorites ▁= ▁null ; ▁Favorite ▁= ▁new ▁Bean PuntoDiRistoro ▁[ listaPreferiti . size ▁() ]; ▁Favorite ▁listaPreferiti . to Array ▁= ▁( favorites ); ▁int ▁k ▁= ▁0, ▁/ ▁/ ▁Cycle ▁counter ▁for ▁( Integer ▁i : ▁listaPreferiti ) ▁( ▁/ ▁/ ▁F ill ▁the ▁array ▁with ▁the ▁favorite ▁bean ▁of ▁all ▁cultural ▁favorites ▁from ▁the ▁tourist ▁Favorites ▁[ k ▁+ ▁+ ] ▁= ▁puntoDiRistoro . ottieni PuntoDiRistoro ▁( i ); ▁) ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁return ▁null ; ▁) ▁)