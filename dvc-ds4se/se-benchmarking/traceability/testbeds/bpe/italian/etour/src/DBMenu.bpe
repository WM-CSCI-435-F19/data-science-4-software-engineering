▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁ Java . sql . Connection ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . sql . Statement ; ▁import ▁java . util . ArrayList ; ▁import ▁unisa . gps . etour . bean . BeanMenu ; ▁/ ▁** ▁* ▁Class ▁that ▁implements ▁the ▁interface ▁ Menu ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mart one ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁ DBMenu ▁implements ▁I DBMenu ▁( ▁/ ▁/ ▁ Empty ▁constructor ▁p ublic ▁ DBMenu ▁() ▁( ▁) ▁p ublic ▁boolean ▁cancella Menu ▁( int ▁pIdMenu ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁cancellation ▁String ▁query ▁= ▁" DE LE TE ▁FR OM ▁menu ▁W HER E ▁id ▁=" ▁+ ▁pIdMenu ; ▁/ ▁/ ▁You ▁run ▁the ▁query ▁Cancellation ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Is ▁al way s ▁d one ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁inserisci Menu ▁( BeanMenu ▁pMenu ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁insertion ▁String ▁query ▁= ▁" INSER T ▁I NTO ▁menu ▁( Day , ▁ IdPuntoDiRistoro ) ▁VALUES ▁( ▁'" ▁+ ▁P Menu . getGiorno ▁() ▁+ ▁" ▁'," ▁+ ▁P Menu . get IdPuntoDiRistoro ▁() ▁+ ▁")" ; ▁/ ▁/ ▁You ▁run ▁the ▁insert ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁modifica Menu ▁( BeanMenu ▁pMenu ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁amendment ▁String ▁query ▁= ▁" UP DATE ▁menu ▁SE T " ▁+ ▁" Date ▁= ▁'" ▁P Menu . getGiorno ▁+ ▁() ▁+ ▁" ▁' W HER E ▁Id ▁=" ▁+ ▁pMenu . getId ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁query ▁for ▁Change ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Is ▁al way s ▁d one ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁< BeanMenu > ▁ottieniMenu ▁p ublic ▁ArrayList ▁( int ▁p IdPuntoDiRistoro ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁to ▁extract ▁the ▁list ▁of ▁ Menu ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁menu ▁W HER E ▁ IdPuntoDiRistoro ▁=" ▁+ ▁P IdPuntoDiRistoro ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁List ▁that ▁will ▁contain ▁all ▁BeanMenu ▁obtained ▁< BeanMenu > ▁ArrayList ▁list ▁= ▁new ▁ArrayList ▁< BeanMenu > ▁(); ▁/ ▁/ ▁We ▁extract ▁the ▁results ▁from ▁the ▁result ▁set ▁and ▁move s ▁in ▁/ ▁/ ▁List ▁/ ▁/ ▁To ▁be ▁returned ▁while ▁( result . next ▁()) ▁( ▁/ ▁/ ▁F ill ▁the ▁list ▁list ▁ . ▁add ▁( new ▁BeanMenu ▁( result . getInt ▁( ▁" Id "), ▁result ▁ . ▁ getString ▁( ▁" Day "), ▁result ▁ . ▁ getInt ▁( ▁" IdPuntoDiRistoro ▁ "))); ▁) ▁/ ▁/ ▁Return ▁the ▁list ▁return ▁list ; ▁) ▁/ ▁/ ▁Is ▁al way s ▁d one ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁BeanMenu ▁ottieniMenu Del Giorno ▁( int ▁p IdPuntoDiRistoro , ▁String ▁pGiorno ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁extract ion ▁of ▁Daily ▁ Menu ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁menu ▁W HER E ▁ IdPuntoDiRistoro ▁=" ▁P IdPuntoDiRistoro ▁+ ▁+ ▁" AND ▁day ▁= ▁'" ▁+ ▁pGiorno ▁+ ▁"'" ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁Get ▁the ▁bean ▁of ▁the ▁da ily ▁menu ▁base d ▁on ▁the ▁ID ▁of ▁the ▁point ▁of ▁/ ▁/ ▁D ining ▁and ▁a ▁day ▁BeanMenu ▁b eanTemp ▁= ▁null ; ▁if ▁( result . next ▁()) ▁( ▁/ ▁/ ▁Create ▁the ▁proceed s ▁Bean ▁b eanTemp ▁= ▁new ▁BeanMenu ▁( result . getInt ▁( ▁" Id "), ▁result ▁ . ▁ getString ▁( ▁" Day "), ▁result . getInt ▁( ▁" IdPuntoDiRistoro ") ); ▁) ▁/ ▁/ ▁Return ▁the ▁Bean ▁obtained ▁b eanTemp ▁return ; ▁) ▁/ ▁/ ▁Is ▁al way s ▁d one ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁)