▁ ï»¿ p ackage ▁unisa . gps . etour . control . Gestione UtentiRegistrati ; ▁import ▁java . rmi . RemoteException ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Iterator ; ▁import ▁unisa . gps . etour . bean . BeanTurista ; ▁import ▁unisa . gps . etour . bean . BeanVisitaBC ; ▁import ▁unisa . gps . etour . bean . BeanVisitaPR ; ▁import ▁unisa . gps . etour . repository . DBVisitaBC ; ▁import ▁unisa . gps . etour . repository . DBVisitaPR ; ▁import ▁unisa . gps . etour . repository . IDBVisitaBC ; ▁import ▁unisa . gps . etour . repository . IDBVisitaPR ; ▁import ▁unisa . gps . etour . util . MessaggiErrore ; ▁/ ▁** ▁* ▁Class ▁that ▁implements ▁the ▁interface ▁for ▁managing ▁the ▁side ▁Tourists ▁* ▁Agency ▁and ▁ext ends ▁Uni castRemoteObject ▁for ▁communicat ion ▁in ▁remote ▁* ▁Provide s ▁ basic ▁methods ▁for ▁handl ing ▁and ▁add itional ▁methods ▁for ▁returning ▁* ▁Tourists ▁with ▁special ▁character istics ▁of ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mo relli ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁Gestione TuristiAgenzia ▁ext ends ▁Gestione TuristaComune ▁implements ▁IGestione TuristiAgenzia ▁( ▁Pr ivate ▁IDBVisitaBC ▁feedbackBC ; ▁Pr ivate ▁IDBVisitaPR ▁feedbackPR ; ▁p ublic ▁Gestione TuristiAgenzia ▁() ▁throws ▁RemoteException ▁( ▁super ▁(); ▁TR Y ▁( ▁/ ▁/ ▁Instantiate ▁objects ▁for ▁database ▁connections ▁feedbackBC ▁= ▁new ▁ DBVisitaBC ▁(); ▁feedbackPR ▁= ▁new ▁ DBVisitaPR ▁(); ▁) ▁/ ▁/ ▁Exception ▁on ▁the ▁database ▁connection ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁) ▁/ ▁/ ▁Method ▁for ▁obtain ing ▁all ▁tourists ▁al ike ▁present ▁/ ▁/ ▁In ▁the ▁database ▁< BeanTurista > ▁ottieniTuristi ▁p ublic ▁ArrayList ▁() ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Object ▁that ▁will ▁contain ▁the ▁return ▁value ▁ArrayList ▁< BeanTurista > ▁toReturn ; ▁/ ▁/ ▁Re trieve ▁data ▁TR Y ▁( ▁/ ▁/ ▁ Invoke ▁the ▁method ▁with ▁empty ▁string ▁to ▁get ▁all ▁Tourists ▁toReturn ▁= ▁turista . ottieniTuristi ▁ (" "); ▁if ▁( null ▁== ▁toReturn ) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁Exception ▁in ▁database ▁operations ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁is ▁thrown ▁an ▁exception ▁SQLException ▁/ ▁/ ▁It ▁throws ▁RemoteException ▁the ▁remote ▁exception ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ottieniTuristi " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exception ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ottieniTuristi " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁Return ▁the ▁result ▁from ▁the ▁data ▁layer ▁ottenu r o ▁if ▁( null ▁== ▁toReturn ) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ FORMAT O _ BEAN ); ▁toReturn ▁return ; ▁) ▁/ ▁/ ▁Method ▁that ▁allow s ▁to ▁obtain ▁all ▁the ▁tourists ▁who ▁have ▁an ▁account ▁/ ▁/ ▁Active ▁or ▁not ▁p ublic ▁ArrayList ▁< BeanTurista > ▁ottieniTuristi ▁( boolean ▁statoAccount ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁ArrayList ▁containing ▁the ▁results ▁ArrayList ▁< BeanTurista > ▁toReturn ; ▁/ ▁/ ▁Re trieve ▁data ▁TR Y ▁( ▁/ ▁/ ▁All ▁tourists ▁are ▁take n ▁to ▁the ▁state ▁as ▁a ▁parameter ▁toReturn ▁= ▁turista . ottieniTuristi ▁( statoAccount ); ▁) ▁/ ▁/ ▁Exception ▁in ▁implement ing ▁the ▁operation ▁on ▁the ▁database ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ottieniTuristi ▁( boolean )" ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exceptions ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ottieniTuristi ▁( boolean )" ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁Check ▁the ▁data ▁to ▁return , ▁so ▁you ▁do ▁not ▁return ▁null ▁values ▁if ▁( null ▁== ▁toReturn ) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ FORMAT O _ BEAN ); ▁toReturn ▁return ; ▁) ▁/ ▁/ ▁Method ▁that ▁allow s ▁the ▁activation ▁of ▁a ▁tourist ▁is ▁not ▁yet ▁ activated ▁p ublic ▁boolean ▁attivaTurista ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Check ▁the ▁validit y ▁of ▁input ▁data ▁if ▁( pIdTurista ▁<0) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁/ ▁/ ▁Bean ▁that ▁contain s ▁the ▁data ▁of ▁tourists ▁to ▁activate ▁BeanTurista ▁toChange ; ▁/ ▁/ ▁Re trieve ▁and ▁edit ▁data ▁required ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁data ▁from ▁the ▁Database ▁toChange ▁= ▁turista . ottieniTurista ▁( pIdTurista ); ▁/ ▁/ ▁Check ▁that ▁the ▁tourist ▁is ▁not ▁al read y ▁ activated ▁if ▁( toChange . isAttiva ▁()) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁/ ▁/ ▁It ▁set s ▁the ▁value ▁indicat ing ▁the ▁activation ▁status ▁to ▁true ▁toChange . set Attiva ▁( true ); ▁/ ▁/ ▁You ▁try ▁to ▁change ▁the ▁database ▁if ▁( turista . modificaTurista ▁( toChange )) ▁/ ▁/ ▁I f ▁the ▁edit ▁operation ▁is ▁successful ▁returns ▁/ ▁/ ▁True ▁return ▁true ; ▁) ▁/ ▁/ ▁Exception ▁in ▁the ▁execut ion ▁of ▁database ▁operations ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁method ▁attivaTurista " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exceptions ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁attivaTurista " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁I f ▁no ▁exceptions ▁ were ▁thrown ▁but ▁the ▁changes ▁/ ▁/ ▁Not ▁have ▁be en ▁successful ▁returns ▁false ▁return ▁false ; ▁) ▁/ ▁/ ▁Method ▁that ▁allow s ▁you ▁to ▁disable ▁a ▁tourist ▁p ublic ▁boolean ▁ disattivaTurista ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Check ▁the ▁validit y ▁of ▁data ▁if ▁( pIdTurista ▁<0) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁BeanTurista ▁toChange ▁/ ▁/ ▁bean ▁that ▁contain s ▁the ▁data ▁from ▁the ▁tourist ▁/ ▁/ ▁Disable ▁/ ▁/ ▁Re trieve ▁and ▁edit ▁data ▁required ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁data ▁from ▁the ▁database ▁toChange ▁= ▁turista . ottieniTurista ▁( pIdTurista ); ▁/ ▁/ ▁Check ▁that ▁the ▁tourist ▁is ▁active ▁if ▁(! ▁toChange . isAttiva ▁()) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁/ ▁/ ▁It ▁set s ▁the ▁value ▁indicat ing ▁the ▁activation ▁status ▁to ▁false ▁toChange . set Attiva ▁( false ); ▁/ ▁/ ▁You ▁try ▁to ▁change ▁the ▁database ▁if ▁( turista . modificaTurista ▁( toChange )) ▁/ ▁/ ▁I f ▁the ▁edit ▁operation ▁is ▁successful ▁returns ▁/ ▁/ ▁True ▁return ▁true ; ▁) ▁/ ▁/ ▁Exception ▁in ▁the ▁execut ion ▁of ▁database ▁operations ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ disattivaTurista " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exceptions ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁ disattivaTurista " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁I f ▁no ▁exceptions ▁ were ▁thrown ▁but ▁the ▁changes ▁/ ▁/ ▁Not ▁have ▁be en ▁successful ▁returns ▁false ▁return ▁false ; ▁) ▁/ ▁/ ▁Method ▁that ▁erase s ▁a ▁tourist ▁from ▁the ▁Database ▁p ublic ▁boolean ▁delete ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Check ▁the ▁validit y ▁of ▁data ▁if ▁( pIdTurista ▁<0) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁TR Y ▁( ▁/ ▁/ ▁I f ▁the ▁cancellation ▁is ▁successful ▁it ▁returns ▁true ▁if ▁( turista . cancella Turista ▁( pIdTurista )) ▁return ▁true ; ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁delete ▁method " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exception ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁delete ▁method " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁Otherwise ▁if ▁you ▁have ▁not ▁thrown ▁exceptions , ▁but ▁the ▁cancellation ▁/ ▁/ ▁Not ▁have ▁be en ▁successful ▁returns ▁false ▁return ▁false ; ▁) ▁/ ▁/ ▁Method ▁that ▁returns ▁an ▁ArrayList ▁containing ▁the ▁feedback ▁issued ▁by ▁/ ▁/ ▁S ome ▁for ▁the ▁Cultural ▁Tourist ▁< BeanVisitaBC > ▁o ttieniFeedbackBC ▁p ublic ▁ArrayList ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Check ▁the ▁validit y ▁of ▁data ▁if ▁( pIdTurista ▁<0) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁/ ▁/ ▁ArrayList ▁return ▁ArrayList ▁< BeanVisitaBC > ▁toReturn ; ▁TR Y ▁( ▁/ ▁/ ▁Re trieve ▁data ▁from ▁Database ▁toReturn ▁= ▁feedbackBC . ottieni ListaVisitaBC Turista ▁( pIdTurista ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁method ▁o ttieniFeedbackBC " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exception ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁o ttieniFeedbackBC " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁Check ▁the ▁data ▁back ▁in ▁order ▁not ▁to ▁return ▁null ▁values ▁if ▁( null ▁== ▁toReturn ) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ FORMAT O _ BEAN ); ▁toReturn ▁return ; ▁) ▁/ ▁/ ▁Method ▁that ▁returns ▁an ▁ArrayList ▁containing ▁the ▁feedback ▁issued ▁by ▁/ ▁/ ▁S ome ▁for ▁the ▁Cultural ▁Tourist ▁< BeanVisitaPR > ▁o ttieniFeedbackPR ▁p ublic ▁ArrayList ▁( int ▁pIdTurista ) ▁throws ▁RemoteException ▁( ▁/ ▁/ ▁Check ▁the ▁validit y ▁of ▁data ▁if ▁( pIdTurista ▁<0) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DATI ); ▁ArrayList ▁< BeanVisitaPR > ▁toReturn ▁/ ▁/ ▁variable ▁return ▁TR Y ▁( ▁/ ▁/ ▁Insert ▁the ▁result ▁in ▁toReturn ▁/ ▁/ ▁Return ed ▁from ▁the ▁Data ▁La y er ▁toReturn ▁= ▁feedbackPR . ottieni ListaVisitaPR Turista ▁( pIdTurista ); ▁) ▁ catch ▁( SQLException ▁e ) ▁( ▁/ ▁/ ▁I f ▁the ▁data ▁layer ▁s ends ▁an ▁exception ▁is ▁throws ▁the ▁exception ▁remote ▁System . out . println ▁( ▁" Error ▁in ▁method ▁o ttieniFeedbackPR " ▁+ ▁E . toString ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ DBMS ); ▁) ▁/ ▁/ ▁U nexpected ▁exceptions ▁ca used ▁by ▁other ▁fa ctors ▁ catch ▁( Exception ▁ee ) ▁( ▁System . out . println ▁( ▁" Error ▁in ▁method ▁o ttieniFeedbackPR " ▁E e . toString ▁+ ▁()); ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ SCONOSCIUTO ); ▁) ▁/ ▁/ ▁Check ▁the ▁array ▁of ▁return , ▁so ▁you ▁do ▁not ▁return ▁null ▁values ▁if ▁( null ▁== ▁toReturn ) ▁throw ▁new ▁RemoteException ▁( MessaggiErrore . ERRORE _ FORMAT O _ BEAN ); ▁toReturn ▁return ; ▁) ▁)