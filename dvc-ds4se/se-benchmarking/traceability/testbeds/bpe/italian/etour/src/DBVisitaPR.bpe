▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁ Java . sql . Connection ; ▁import ▁java . sql . Date ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . sql . Statement ; ▁import ▁java . util . ArrayList ; ▁import ▁unisa . gps . etour . bean . BeanVisitaPR ; ▁/ ▁** ▁* ▁Class ▁that ▁implements ▁the ▁interface ▁IDBVisitaPR ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mart one ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁ DBVisitaPR ▁implements ▁IDBVisitaPR ▁( ▁/ ▁/ ▁ Empty ▁constructor ▁p ublic ▁ DBVisitaPR ▁() ▁( ▁) ▁p ublic ▁boolean ▁inserisci VisitaPR ▁( BeanVisitaPR ▁PVIS ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable ▁for ▁the ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Create ▁the ▁date ▁of ▁visit ▁java . sql . Date ▁dataVisita ▁= ▁new ▁Date ▁( pVisita . get DataVisita ▁() ▁ . ▁getTime ▁()); ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁to ▁get ▁the ▁aver age ▁rating ▁of ▁a ▁property ▁Query MediaVoti ▁String ▁= ▁" SELECT ▁MediaVoti , ▁NumeroVoti ▁FR OM ▁puntodiristoro ▁W HER E ▁Id ▁=" ▁+ ▁P Visita . get IdPuntoDiRistoro ▁(); ▁result ▁= ▁stat . executeQuery ▁( query MediaVoti ); ▁/ ▁/ ▁Variable ▁for ▁the ▁aver age ▁rating ▁double ▁aver age ▁= ▁0; ▁/ ▁/ ▁Variable ▁for ▁the ▁number ▁of ▁votes ▁numeroVoti ▁int ▁= ▁0; ▁if ▁( result . next ▁()) ▁( ▁aver age ▁= ▁result . get Double ▁( ▁" MediaVoti "); ▁numeroVoti ▁= ▁result . getInt ▁( NumeroVoti ▁"); ▁aver age ▁= ▁( ( aver age ▁* ▁numeroVoti ) ▁+ ▁pVisita . get Voto ▁()) ▁/ ▁+ ▁+ ▁NumeroVoti ; ▁) ▁/ ▁/ ▁Query ▁for ▁the ▁insertion ▁String ▁query ▁= ▁" INSER T ▁I NTO ▁visita pr ▁( IdTurista , ▁ IdPuntoDiRistoro , ▁DataVisita , ▁V ote , ▁Comment ) ▁VALUES ▁ (" ▁+ ▁P Visita . get IdTurista ▁() ▁+ ▁"" ▁+ ▁P Visita . get IdPuntoDiRistoro ▁() ▁+ ▁" ▁'" ▁+ ▁DataVisita ▁+ ▁" ▁'," ▁P Visita . get Voto ▁+ ▁() ▁+ ▁" ▁'" ▁+ ▁pVisita . get Commento ▁() ▁+ ▁"') "; ▁String ▁query 2 ▁= ▁" UP DATE ▁puntodiristoro ▁Se pt ember ▁MediaVoti ▁=" ▁+ ▁media ▁+ ▁" , ▁NumeroVoti ▁=" ▁+ ▁numeroVoti ▁+ ▁" W HER E ▁Id ▁=" ▁+ ▁P Visita . get IdPuntoDiRistoro ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁insert ▁query ▁stat . executeQuery ▁( ▁" BE GI N "); ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁i ▁= ▁i ▁* ▁stat . executeUpdate ▁( query 2 ); ▁stat . executeQuery ▁( ▁" COM M IT "); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁modifica VisitaPR ▁( BeanVisitaPR ▁PVIS ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable ▁for ▁the ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Create ▁the ▁date ▁of ▁visit ▁java . sql . Date ▁dataVisita ▁= ▁new ▁Date ▁( pVisita . get DataVisita ▁() ▁ . ▁getTime ▁()); ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁amendment ▁String ▁query ▁= ▁" UP DATE ▁visita pr ▁SE T " ▁+ ▁" DataVisita ▁= ▁'" ▁DataVisita ▁+ ▁+ ▁" ▁', ▁Comment ▁='" ▁+ ▁pVisita . get Commento ▁() ▁+ ▁" ▁' W HER E ▁ IdPuntoDiRistoro ▁=" ▁P Visita . get IdPuntoDiRistoro ▁+ ▁() ▁+ ▁" AND ▁IdTurista ▁=" ▁+ ▁P Visita . get IdTurista ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁query ▁for ▁Change ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁< BeanVisitaPR > ▁ottieni ListaVisitaPR ▁p ublic ▁ArrayList ▁( int ▁p IdPuntoDiRistoro ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable ▁for ▁the ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁to ▁extract ▁the ▁list ▁of ▁request s ▁for ▁a ▁/ ▁/ ▁Refreshment ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁visita pr ▁W HER E ▁ IdPuntoDiRistoro ▁=" ▁+ ▁P IdPuntoDiRistoro ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁< BeanVisitaPR > ▁ArrayList ▁list ▁= ▁new ▁ArrayList ▁< BeanVisitaPR > ▁(); ▁/ ▁/ ▁We ▁extract ▁the ▁results ▁from ▁the ▁result ▁set ▁and ▁move s ▁in ▁/ ▁/ ▁List ▁/ ▁/ ▁To ▁be ▁returned ▁while ▁( result . next ▁()) ▁( ▁java . util . Date ▁dataVisita ▁= ▁new ▁java . util . Date ▁( result . getDate ▁( ▁" DataVisita ") . ▁Get Time ▁()); ▁lista . add ▁( new ▁BeanVisitaPR ▁( result . getInt ▁( ▁" Custom er "), ▁result ▁ . ▁ getInt ▁( ▁" IdPuntoDiRistoro "), ▁result ▁ . ▁ getString ▁( ▁" Comment "), ▁result . getInt ▁( ▁" IdTurista "), ▁dataVisita )); ▁) ▁return ▁list ; ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁< BeanVisitaPR > ▁ottieni ListaVisitaPR Turista ▁p ublic ▁ArrayList ▁( int ▁pIdTurista ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable ▁for ▁the ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁to ▁extract ▁the ▁list ▁of ▁request s ▁for ▁a ▁/ ▁/ ▁E ating ▁place ▁for ▁tourists ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁visita pr ▁W HER E ▁IdTurista ▁=" ▁+ ▁PIdTurista ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁List ▁that ▁will ▁contain ▁the ▁BeanVisitaPR ▁< BeanVisitaPR > ▁ArrayList ▁list ▁= ▁new ▁ArrayList ▁< BeanVisitaPR > ▁(); ▁/ ▁/ ▁We ▁extract ▁the ▁results ▁from ▁the ▁result ▁set ▁and ▁move s ▁in ▁/ ▁/ ▁List ▁/ ▁/ ▁To ▁be ▁returned ▁while ▁( result . next ▁()) ▁( ▁/ ▁/ ▁Add ▁to ▁the ▁list ▁BeanVisitaPR ▁java . util . Date ▁dataVisita ▁= ▁new ▁java . util . Date ▁( result . getDate ▁( ▁" DataVisita ") . ▁Get Time ▁()); ▁lista . add ▁( new ▁BeanVisitaPR ▁( result . getInt ▁( ▁" Custom er "), ▁result ▁ . ▁ getInt ▁( ▁" IdPuntoDiRistoro "), ▁result ▁ . ▁ getString ▁( ▁" Comment "), ▁result . getInt ▁( ▁" IdTurista "), ▁dataVisita )); ▁) ▁/ ▁/ ▁Return ▁the ▁list ▁return ▁list ; ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁BeanVisitaPR ▁ottieni VisitaPR ▁( p IdPuntoDiRistoro ▁int , ▁int ▁pIdTurista ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable ▁for ▁the ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁extract ion ▁of ▁the ▁visit ▁made ▁by ▁a ▁tourist ▁to ▁/ ▁/ ▁A ▁given ▁point ▁of ▁comfort ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁visita pr ▁W HER E ▁ IdPuntoDiRistoro ▁=" ▁P IdPuntoDiRistoro ▁+ ▁+ ▁" AND ▁IdTurista ▁=" ▁+ ▁pIdTurista ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁Get ▁the ▁bean ' s ▁visit ▁so ught ▁base d ▁on ▁the ▁ID ▁of ▁the ▁tourist ▁and ▁/ ▁/ ▁Of ▁refreshment ▁BeanVisitaPR ▁b eanTemp ▁= ▁null ; ▁if ▁( result . next ▁()) ▁( ▁/ ▁/ ▁Create ▁the ▁BeanVisitaPR ▁java . util . Date ▁dataVisita ▁= ▁new ▁java . util . Date ▁( result . getDate ▁( ▁" DataVisita ") . ▁Get Time ▁()); ▁b eanTemp ▁= ▁new ▁BeanVisitaPR ▁( result . getInt ▁( ▁" Custom er "), ▁result ▁ . ▁ getInt ▁( ▁" IdPuntoDiRistoro "), ▁result ▁ . ▁ getString ▁( ▁" Comment "), ▁result . getInt ▁( ▁" IdTurista "), ▁dataVisita ); ▁) ▁/ ▁/ ▁Return ▁the ▁Bean Temp ▁b eanTemp ▁return ; ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁)