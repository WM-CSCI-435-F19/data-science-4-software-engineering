▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁ Java . sql . Connection ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . sql . Statement ; ▁import ▁unisa . gps . etour . bean . BeanPreferenz eGeneriche ; ▁/ ▁** ▁* ▁Implement ing ▁the ▁IDBPreferenze Generiche ▁* ▁* ▁@ ▁Auth or ▁M auro ▁M ir anda ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁DBPreferenze Generiche ▁implements ▁IDBPreferenze Generiche ▁( ▁/ ▁/ ▁Constructor ▁with out ▁parameters ▁p ublic ▁DBPreferenze Generiche ▁() ▁( ▁) ▁p ublic ▁boolean ▁cancella PreferenzaGene rica ▁( int ▁pIdPreferenza ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Connect ▁to ▁database ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Statement ▁for ▁run ning ▁quer ies ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Tr y ▁block ▁which ▁performs ▁the ▁query ▁and ▁the ▁database ▁connection ▁TR Y ▁( ▁/ ▁/ ▁You ▁get ▁the ▁database ▁connection ▁from ▁the ▁pool ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁String ▁query ▁= ▁" DE LE TE ▁FR OM ▁preferenze generiche ▁W HER E ▁Id ▁=" ▁+ ▁PIdPreferenza ; ▁/ ▁/ ▁You ▁run ▁the ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Final ly ▁block ▁that ▁contain s ▁the ▁i nstruction s ▁to ▁close ▁the ▁connections ▁/ ▁/ ▁H y ena s ▁run ▁in ▁any ▁case ▁finally ▁( ▁/ ▁/ ▁ This ▁closes ▁the ▁if ▁statement ▁and ▁' opened ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁/ ▁/ ▁It ▁returns ▁the ▁connection ▁to ▁the ▁pool ▁if ▁and ▁' opened ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁inserisci PreferenzaGene neric a ▁( ▁BeanPreferenz eGeneriche ▁pPreferenza ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Connect ▁to ▁database ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Statement ▁for ▁run ning ▁quer ies ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Tr y ▁block ▁which ▁performs ▁the ▁query ▁and ▁the ▁database ▁connection ▁TR Y ▁( ▁/ ▁/ ▁You ▁get ▁the ▁database ▁connection ▁from ▁the ▁pool ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁String ▁query ▁= ▁" INSER T ▁I NTO ▁preferenze generiche ▁( IdTurista , ▁Font , ▁ Tema , ▁DimensioneFont )" ▁+ ▁" VALUES ▁ (" ▁+ ▁PPreferenza . get IdTurista ▁() ▁+ ▁" ▁'" ▁+ ▁PPreferenza . get Font ▁() ▁+ ▁"','" ▁+ ▁PPreferenza . get Tema ▁() ▁+ ▁" ▁'," ▁+ ▁PPreferenza . get DimensioneFont ▁() ▁+ ▁")" ; ▁/ ▁/ ▁You ▁run ▁the ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Final ly ▁block ▁that ▁contain s ▁the ▁i nstruction s ▁to ▁close ▁the ▁connections ▁/ ▁/ ▁H y ena s ▁run ▁in ▁any ▁case ▁finally ▁( ▁/ ▁/ ▁ This ▁closes ▁the ▁if ▁statement ▁and ▁' opened ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁/ ▁/ ▁It ▁returns ▁the ▁connection ▁to ▁the ▁pool ▁if ▁and ▁' opened ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁modifica PreferenzaGene rica ▁( ▁BeanPreferenz eGeneriche ▁pPreferenza ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Connect ▁to ▁database ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Statement ▁for ▁run ning ▁quer ies ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Tr y ▁block ▁which ▁performs ▁the ▁query ▁and ▁the ▁database ▁connection ▁TR Y ▁( ▁/ ▁/ ▁You ▁get ▁the ▁database ▁connection ▁from ▁the ▁pool ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁String ▁query ▁= ▁" UP DATE ▁preferenze generiche ▁SE T " ▁+ ▁" = ▁IdTurista " ▁PPreferenza . get IdTurista ▁+ ▁() ▁+ ▁" , ▁font ▁= ▁'" ▁PPreferenza . get Font ▁+ ▁() ▁+ ▁" ▁', ▁theme ▁='" ▁PPreferenza . get Tema ▁+ ▁() ▁+ ▁" ▁', ▁DimensioneFont ▁=" ▁PPreferenza . get DimensioneFont ▁+ ▁() ▁+ ▁" W HER E ▁Id ▁=" ▁+ ▁PPreferenza . getId ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Final ly ▁block ▁that ▁contain s ▁the ▁i nstruction s ▁to ▁close ▁the ▁connections ▁/ ▁/ ▁H y ena s ▁run ▁in ▁any ▁case ▁finally ▁( ▁/ ▁/ ▁ This ▁closes ▁the ▁if ▁statement ▁and ▁' opened ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁/ ▁/ ▁It ▁returns ▁the ▁connection ▁to ▁the ▁pool ▁if ▁and ▁' opened ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁BeanPreferenz eGeneriche ▁ottieni PreferenzaGene rica ▁( int ▁pIdTurista ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Connect ▁to ▁database ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Statement ▁for ▁run ning ▁quer ies ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Resu t ▁set ▁whe re ▁the ▁output ▁of ▁the ▁query ▁is ▁inserted ▁ResultSet ▁result ▁= ▁null ; ▁/ ▁/ ▁Tr y ▁block ▁which ▁performs ▁the ▁query ▁and ▁the ▁database ▁connection ▁TR Y ▁( ▁/ ▁/ ▁You ▁get ▁the ▁database ▁connection ▁from ▁the ▁pool ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁preferenze generiche ▁W HER E ▁IdTurista ▁=" ▁+ ▁PIdTurista ; ▁/ ▁/ ▁Run ▁the ▁query ▁result ▁= ▁stat . executeQuery ▁( query ); ▁BeanPreferenz eGeneriche ▁pref ▁= ▁null ; ▁/ ▁/ ▁Check ▁that ▁the ▁query ▁returns ▁at ▁le ast ▁one ▁result ▁if ▁( result . next ▁()) ▁( ▁BeanPreferenz eGeneriche ▁pref ▁= ▁new ▁(); ▁pref . setId ▁( result . getInt ▁( ▁" Id ") ); ▁pref . set IdTurista ▁( result . getInt ▁( IdTurista ▁" )); ▁pref . set DimensioneFont ▁( result . getInt ▁( DimensioneFont ▁" )); ▁pref . setFont ▁( result . getString ▁( ▁" Font ") ); ▁pref . set Tema ▁( result . getString ▁( ▁" Th eme ") ); ▁) ▁return ▁pref ; ▁) ▁/ ▁/ ▁Final ly ▁block ▁that ▁contain s ▁the ▁i nstruction s ▁to ▁close ▁the ▁connections ▁/ ▁/ ▁H y ena s ▁run ▁in ▁any ▁case ▁finally ▁( ▁/ ▁/ ▁ This ▁closes ▁the ▁result ▁set ▁on ly ▁if ▁and ▁' the ▁query ▁was ▁made ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁/ ▁/ ▁ This ▁closes ▁the ▁if ▁statement ▁and ▁' opened ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁/ ▁/ ▁It ▁returns ▁the ▁connection ▁to ▁the ▁pool ▁if ▁and ▁' opened ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁)