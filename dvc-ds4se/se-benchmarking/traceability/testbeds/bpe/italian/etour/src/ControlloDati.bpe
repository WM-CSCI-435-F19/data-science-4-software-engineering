▁ ï»¿ p ackage ▁unisa . gps . etour . util ; ▁import ▁java . awt . image . BufferedImage ; ▁import ▁java . util . Date ; ▁import ▁java x . swing . ImageIcon ; ▁import ▁unisa . gps . etour . bean . BeanBanner ; ▁import ▁unisa . gps . etour . bean . Bean BeneCulturale ; ▁import ▁unisa . gps . etour . bean . BeanConvenzione ; ▁import ▁unisa . gps . etour . bean . BeanMenu ; ▁import ▁unisa . gps . etour . bean . BeanNews ; ▁import ▁unisa . gps . etour . bean . BeanOperatore PuntoDiRistoro ; ▁import ▁unisa . gps . etour . bean . BeanPiatto ; ▁import ▁unisa . gps . etour . bean . BeanPreferenz aDiRicerca ; ▁import ▁unisa . gps . etour . bean . BeanPreferenz eGeneriche ; ▁import ▁unisa . gps . etour . bean . Bean PuntoDiRistoro ; ▁import ▁unisa . gps . etour . bean . BeanTag ; ▁import ▁unisa . gps . etour . bean . BeanTurista ; ▁import ▁unisa . gps . etour . bean . BeanVisitaBC ; ▁import ▁unisa . gps . etour . bean . BeanVisitaPR ; ▁/ ▁** ▁* ▁Class ▁for ▁managing ▁the ▁control ▁of ▁the ▁correct ness ▁of ▁the ▁strings ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Penna ▁* ▁@ ▁Version ▁0.1 ▁ Â© ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁DMI ▁SE ▁@ ▁ SA ▁Lab ▁-- ▁* ▁University ▁of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁ControlloDati ▁( ▁priv ate ▁static ▁final ▁String ▁lett er ▁= ▁" a bc def gh i j k l m no p q r stu v x y w z " ▁+ ▁" ABC DEF GH I J K LMN OP Q R ST U V X Y W Z "; ▁priv ate ▁final ▁static ▁String ▁number s ▁= ▁"0 123456789 "; ▁p ublic ▁final ▁static ▁int ▁max _ length ▁= ▁64 ; ▁/ ▁** ▁* ▁S tatic ▁method ▁for ▁verify ing ▁correct ness ▁of ▁a ▁string ▁* ▁* ▁@ ▁Param ▁string ▁to ▁check ▁pStringa ▁* ▁@ ▁Param ▁ letterePermesse ▁Boolean : ▁True ▁if ▁it ▁is ▁allowed ▁to ▁be ▁present ▁* ▁Letters ▁in ▁the ▁string , ▁False ▁otherwise ▁* ▁@ ▁Param ▁numeriPermessi ▁Boolean : ▁True ▁if ▁it ▁is ▁allowed ▁to ▁be ▁present ▁* ▁Numbers ▁in ▁the ▁string , ▁False ▁otherwise ▁C aratteriPermessi ▁* ▁@ ▁ param ▁string ▁containing ▁all ▁characters ▁* ▁A llowed ▁in ▁the ▁string ▁* ▁@ ▁Param ▁string ▁contentente ▁all ▁ca ratteriNecessari ▁characters ▁* ▁M ust ▁be ▁present ▁in ▁the ▁string ▁* ▁@ ▁Param ▁ numeroCaratteriM in ▁i nteger ▁represent ing ▁the ▁minim um ▁number ▁of ▁* ▁Characters ▁allowed ▁in ▁string ▁* ▁@ ▁Param ▁num eroCaratteriMax ▁i nteger ▁represent ing ▁the ▁maximum ▁number ▁of ▁* ▁Characters ▁allowed ▁in ▁string ▁* ▁@ ▁Return ▁Boolean : ▁True ▁if ▁the ▁ witch ▁meet s ▁the ▁conditions , ▁False ▁* ▁Otherwise ▁* ▁/ ▁p ublic ▁static ▁boolean ▁controlla Stringa ▁( String ▁pStringa , ▁ letterePermesse ▁boolean , ▁boolean ▁numeriPermessi , ▁C aratteriPermessi ▁String , ▁String ▁ca ratteriNecessari , ▁ numeroCaratteriM in ▁int , ▁int ▁num eroCaratteriMax ) ▁( ▁C h ance ▁pStringa ▁== ▁null : ▁the ▁function ▁returns ▁false ▁if ▁( null ▁== ▁pStringa ) ▁return ▁false ; ▁int ▁ lunghezzaStringa ▁= ▁pStringa . length ▁(); ▁C arattereCorrente ▁character ; ▁/ ▁/ ▁Check ▁the ▁ length ▁of ▁the ▁string ▁if ▁( lunghezzaStringa ▁< numeroCaratteriM in ▁| ▁| ▁L unghezzaStringa > ▁num eroCaratteriMax ) ▁( ▁return ▁false ; ▁) ▁/ ▁/ ▁Check ▁the ▁presen ce ▁of ▁the ▁necessary ▁characters ▁in ▁the ▁string ▁if ▁( ca ratteriNecessari ▁= ▁null ) ▁( ▁if ▁(! ▁ca ratteriNecessari . equals ▁("")) ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< ca ratteriNecessari . length ▁(); ▁i ▁+ ▁+) ▁( ▁c arattereCorrente ▁= ▁ca ratteriNecessari . char At ▁( i ); ▁if ▁(! ▁pStringa . contain s ▁( c arattereCorrente . toString ▁ ())) ▁( ▁return ▁false ; ▁) ▁) ▁) ▁/ ▁/ ▁Create ▁the ▁string ▁containing ▁all ▁characters ▁allowed ▁String ▁stringa C aratteriPermessi ▁= ▁c aratteriPermessi ▁C a ratteriNecessari ▁+ ▁+ ▁( letterePermesse ? ▁Letters : ▁"" ) ▁+ ▁( N umeriPermessi ? ▁Numbers : ▁" "); ▁/ ▁/ ▁Lo op ▁for ▁the ▁inspect ion ▁of ▁the ▁characters ▁of ▁the ▁string ▁to ▁check ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< lunghezzaStringa ▁i ▁+ ▁+) ▁( ▁c arattereCorrente ▁= ▁pStringa . char At ▁( i ); ▁/ ▁/ ▁Condition : ▁I f ▁the ▁character ▁you ▁are ▁ w atch ing ▁is ▁not ▁/ ▁/ ▁In ▁the ▁string ▁of ▁characters ▁allowed ▁/ ▁/ ▁The ▁string ▁is ▁incorrect ▁and ▁out ▁of ▁the ▁loop . ▁if ▁(! ▁( stringa C aratteriPermessi . contain s ▁( c arattereCorrente ▁ . ▁toString ▁() ))) ▁( ▁return ▁false ; ▁) ▁) ▁return ▁true ; ▁) ▁p ublic ▁static ▁String ▁corre ggi Stringa ▁( String ▁pStringa , ▁ letterePermesse ▁boolean , ▁boolean ▁numeriPermessi , ▁C aratteriPermessi ▁String , ▁int ▁num eroCaratteriMax ) ▁( ▁if ▁( null ▁== ▁pStringa ) ▁return ▁null ; ▁String ▁stringa C aratteriPermessi ▁= ▁c aratteriPermessi ▁+ ▁( L etterePermesse ? ▁Letters : ▁"" ) ▁+ ▁( N umeriPermessi ? ▁Numbers : ▁" "); ▁C arattereCorrente ▁character ; ▁int ▁ lunghezzaStringa ▁= ▁pStringa . length ▁(); ▁int ▁i ▁= ▁0; ▁while ▁( i ▁< lunghezzaStringa ) ▁( ▁c arattereCorrente ▁= ▁pStringa . char At ▁( i ); ▁if ▁(! ▁( stringa C aratteriPermessi . contain s ▁( c arattereCorrente ▁ . ▁toString ▁() ))) ▁( ▁pStringa ▁= ▁pStringa . replaceAll ▁( ▁" \ ▁ \ " ▁C arattereCorrente . toString ▁+ ▁(), ▁" "); ▁ lunghezzaStringa ▁= ▁pStringa . length ▁(); ▁) ▁else ▁i ▁+ ▁+ ; ▁) ▁if ▁( lunghezzaStringa > ▁num eroCaratteriMax ) ▁( ▁pStringa ▁= ▁pStringa . substring ▁(0, ▁num eroCaratteriMax ); ▁) ▁pStringa ▁return ; ▁) ▁p ublic ▁static ▁boolean ▁controlla Data ▁( String ▁p Data ) ▁( ▁/ ▁/ ▁S t ill ▁I ▁have ▁no ▁id e a ▁how ▁I ▁will ▁s pend ▁the ▁time ▁return ▁true ; ▁) ▁p ublic ▁static ▁boolean ▁controllaDate ▁( Date ▁pDataInizio , ▁Date ▁pDataFine ) ▁( ▁boolean ▁back ▁= ▁false ; ▁if ▁( pDataInizio ! ▁= ▁null ▁& ▁& ▁pDataFine ▁= ▁null ) ▁( ▁if ▁( pDataInizio . before ▁( pDataFine )) ▁return ▁= ▁true ; ▁) ▁return ▁receipt ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanTurista ▁( BeanTurista ▁pTurista ) ▁( ▁if ▁( pTurista ▁= ▁null ▁& ▁& ▁pTurista ▁instance of ▁BeanTurista ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanPreferenz aDiRicerca ▁( ▁BeanPreferenz aDiRicerca ▁pPreferenz aDiRicerca ) ▁( ▁if ▁( pPreferenz aDiRicerca ▁= ▁null ▁& ▁& ▁PPreferenza DiRicerca ▁instance of ▁BeanPreferenz aDiRicerca ) ▁return ▁true ; ▁return ▁true ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanPreferenz eGeneriche ▁( ▁BeanPreferenz eGeneriche ▁pPreferenz eGeneriche ) ▁( ▁if ▁( pPreferenz eGeneriche ▁= ▁null ▁& ▁& ▁PPreferenz eGeneriche ▁instance of ▁BeanPreferenz eGeneriche ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁checkBean BeneCulturale ▁( ▁Bean BeneCulturale ▁pBeneCulturale ) ▁( ▁if ▁( pBeneCulturale ▁= ▁null ▁& ▁& ▁P BeneCulturale ▁instance of ▁Bean BeneCulturale ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁checkBean Punto Di R is to to ▁( ▁Bean PuntoDiRistoro ▁pPuntoDiRistoro ) ▁( ▁if ▁( pPuntoDiRistoro ▁= ▁null ▁& ▁& ▁PPuntoDiRistoro ▁instance of ▁Bean PuntoDiRistoro ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanOperatore PuntoDiRistoro ▁( ▁BeanOperatore PuntoDiRistoro ▁ pOpera otore PuntoDiRistoro ) ▁( ▁if ▁( pOpera otore PuntoDiRistoro ▁= ▁null ▁& ▁& ▁PO per a otore PuntoDiRistoro ▁instance of ▁BeanOperatore PuntoDiRistoro ) ▁return ▁true ; ▁return ▁false ; ▁) ▁/ ▁** ▁* ▁P lease ▁form al ▁control ▁and ▁consistency ▁on ▁the ▁data ▁of ▁the ▁banner ▁* ▁ Content ▁in ▁the ▁bean ▁passed ▁by ▁parameter . ▁* ▁* ▁@ ▁Auth or ▁F abio ▁P all adin o ▁* ▁@ ▁Param ▁pBanner ▁bean ▁contain s ▁the ▁data ▁of ▁the ▁banner . ▁* ▁@ ▁Return ▁True ▁if ▁the ▁data ▁of ▁the ▁banner ▁is ▁correct ▁false ▁otherwise . ▁* ▁/ ▁p ublic ▁static ▁boolean ▁check BeanBanner ▁( BeanBanner ▁pBanner ) ▁( ▁toReturn ▁boolean ▁= ▁false ; ▁if ▁( pBanner ▁= ▁null ▁& ▁& ▁pBanner ▁instance of ▁BeanBanner ) ▁( ▁toReturn ▁= ▁( pBanner . getId ▁() > ▁0 ▁& ▁& ▁pBanner . get PercorsoFile ▁()! ▁= ▁"" ▁& ▁& ▁pBanner ▁ . ▁get IdPuntoDiRistoro ▁() > ▁0) ; ▁) ▁toReturn ▁return ; ▁) ▁/ ▁** ▁* ▁Method ▁which ▁control s ▁the ▁image ▁contain ed ▁in ▁the ▁object ▁ImageIcon ▁past ▁* ▁Per ▁parameter . ▁* ▁* ▁@ ▁Auth or ▁F abio ▁P all adin o ▁* ▁@ ▁Param ▁image ▁ImageIcon ▁object ▁containing ▁the ▁image ▁to ▁be ▁checked ▁* ▁@ ▁Return ▁true ▁if ▁the ▁image ▁contain ed ▁in ▁the ▁object ▁is ▁an ▁instance ▁ImageIcon ▁* ▁Class ▁BufferedImage . ▁* ▁/ ▁p ublic ▁static ▁boolean ▁check Immagine ▁( ImageIcon ▁image ) ▁( ▁if ▁( image ! ▁= ▁null ) ▁( ▁return ▁( immagine . getImage ▁() ▁instance of ▁BufferedImage ); ▁) ▁return ▁false ; ▁) ▁/ ▁** ▁* ▁F un ction ▁that ▁checks ▁the ▁data ▁in ▁a ▁news ; ▁* ▁* ▁@ ▁Auth or ▁F abio ▁P all adin o ▁* ▁@ ▁Param ▁bean ▁Pnews ▁containing ▁ details ▁of ▁a ▁news . ▁* ▁@ ▁Return ▁* ▁/ ▁p ublic ▁static ▁boolean ▁check BeanNews ▁( BeanNews ▁Pnews ) ▁( ▁toReturn ▁boolean ▁= ▁false ; ▁/ ▁* ▁Check ▁the ▁validit y ▁of ▁the ▁general ▁method ▁parameter ▁* ▁/ ▁if ▁( Pnews ▁= ▁null ) ▁( ▁P News . getData Pubblicazione ▁Date ▁dataPubb ▁= ▁() ▁/ ▁/ ▁Date ▁of ▁/ ▁/ ▁P u bl is h ing ▁Date ▁dataScad ▁= ▁pNews . get DataScadenza ▁() ▁/ ▁/ ▁D ue ▁Date ▁P News . getNews ▁String ▁news ▁= ▁(), ▁/ ▁/ ▁Text ▁of ▁News ▁int ▁priority ▁= ▁pNews . get Priorita ▁(); ▁/ ▁* ▁Check ing ▁the ▁invalid ity ▁of ▁the ▁fields ▁* ▁/ ▁if ▁( dataPubb ! ▁dataScad ▁= ▁null ▁& ▁& ! ▁= ▁null ▁& ▁& ▁news ▁= ▁null ) ▁( ▁/ ▁* ▁Check ▁the ▁consistency ▁of ▁the ▁dates ▁* ▁/ ▁toReturn ▁= ▁dataPubb . before ▁( dataScad ); ▁/ ▁* ▁Check ▁that ▁the ▁text ▁is ▁not ▁empty ▁* ▁/ ▁toReturn ▁= ▁toReturn ▁& ▁& ▁( new s ! ▁= ▁" "); ▁/ ▁* ▁Check ▁that ▁the ▁ID ▁is ▁great er ▁th an ▁0 ▁* ▁/ ▁toReturn ▁= ▁toReturn ▁& ▁& ▁( pNews . getId ▁() > ▁0) ; ▁/ ▁* ▁Check ▁the ▁priority ▁value ▁* ▁/ ▁toReturn ▁= ▁toReturn ▁& ▁& ▁( Priority ▁<= ▁CostantiGlobali . MA X _ PRIORITY _ NEWS ) ▁& ▁& ▁( Priority > ▁= ▁CostantiGlobali . MIN _ PRIORITY _ NEWS ); ▁) ▁) ▁toReturn ▁return ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanTag ▁( BeanTag ▁ptagi ) ▁( ▁if ▁( ptagi ! ▁= ▁null ▁& ▁& ▁instance of ▁ptagi ▁BeanTag ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanConvenzione ▁( BeanConvenzione ▁pConvenzione ) ▁( ▁if ▁( p Convenzione ▁= ▁null ▁& ▁& ▁pConvenzione ▁instance of ▁BeanConvenzione ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanMenu ▁( BeanMenu ▁pMenu ) ▁( ▁if ▁( p Menu ▁= ▁null ▁& ▁& ▁instance of ▁pMenu ▁BeanMenu ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanPiatto ▁( BeanPiatto ▁pPiatto ) ▁( ▁if ▁( p Piatto ▁= ▁null ▁& ▁& ▁pPiatto ▁instance of ▁BeanPiatto ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanVisitaBC ▁( BeanVisitaBC ▁pVisitaBC ) ▁( ▁if ▁( pVisitaBC ▁= ▁null ▁& ▁& ▁pVisitaBC ▁instance of ▁BeanVisitaBC ) ▁return ▁true ; ▁return ▁false ; ▁) ▁p ublic ▁static ▁boolean ▁check BeanVisitaPR ▁( BeanVisitaPR ▁pVisitaPR ) ▁( ▁if ▁( pVisitaPR ▁= ▁null ▁& ▁& ▁pVisitaPR ▁instance of ▁BeanVisitaPR ) ▁return ▁true ; ▁return ▁false ; ▁) ▁)