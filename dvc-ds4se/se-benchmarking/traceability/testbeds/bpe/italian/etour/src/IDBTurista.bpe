▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁unisa . gps . etour . bean . Bean BeneCulturale ; ▁import ▁unisa . gps . etour . bean . BeanTurista ; ▁/ ▁** ▁* ▁Interface ▁for ▁the ▁management ▁of ▁tourists ▁in ▁the ▁database ▁* ▁* ▁@ ▁Auth or ▁M auro ▁M ir anda ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁interface ▁IDBTurista ▁( ▁/ ▁** ▁* ▁Add ▁a ▁tourist ▁* ▁* ▁@ ▁Param ▁to ▁add ▁pTurista ▁Tourist ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁boolean ▁inserisci Turista ▁( BeanTurista ▁pTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁ Modify ▁a ▁tourist ▁* ▁* ▁@ ▁Param ▁to ▁change ▁pTurista ▁Tourist ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' be en ▁changed ▁otherwise ▁false ▁* ▁/ ▁p ublic ▁boolean ▁modificaTurista ▁( BeanTurista ▁pTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Delete ▁a ▁tourist ▁from ▁the ▁database ▁* ▁* ▁@ ▁Param ▁pIdTurista ▁Id enti fi ca ti e ▁Tourist ▁delete ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' be en ▁changed ▁otherwise ▁false ▁* ▁/ ▁p ublic ▁boolean ▁delete ▁( int ▁pIdTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁the ▁data ▁of ▁the ▁Tourist ▁* ▁* ▁@ ▁Param ▁pUsername ▁Username ▁tourists ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁Information ▁ab out ▁tourist ▁* ▁/ ▁p ublic ▁BeanTurista ▁ottieniTurista ▁( String ▁pUsername ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁ Attac h ▁a ▁cultural ▁tourists ▁pref er red ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁* ▁@ ▁Param ▁ pIdBeneCulturale ▁ID ▁of ▁the ▁cultural ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁boolean ▁inserisci BeneCulturale Preferit o ▁( int ▁pIdTurista , ▁ pIdBeneCulturale ▁int ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁ Attac h ▁a ▁point ▁of ▁ca tering ▁to ▁the ▁tourist ▁favorite ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁* ▁@ ▁Param ▁p IdPuntoDiRistoro ▁ID ▁of ▁the ▁cultural ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁boolean ▁inserisci PuntoDiRistoro Preferit o ▁( int ▁pIdTurista , ▁p IdPuntoDiRistoro ▁int ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Delete ▁a ▁cultural ▁favorite ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁* ▁@ ▁Param ▁ pIdBeneCulturale ▁ID ▁of ▁the ▁cultural ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' be en ▁changed ▁otherwise ▁false ▁* ▁/ ▁p ublic ▁boolean ▁cancella BeneCulturale Preferit o ▁( int ▁pIdTurista , ▁ pIdBeneCulturale ▁int ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Delete ▁a ▁favorite ▁ resting ▁spot ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁* ▁@ ▁Param ▁p IdPuntoDiRistoro ▁ID ▁of ▁the ▁cultural ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁True ▁if ▁and ▁' was ▁deleted ▁false ▁otherwise ▁* ▁/ ▁p ublic ▁boolean ▁cancella PuntoDiRistoro Preferit o ▁( int ▁pIdTurista , ▁p IdPuntoDiRistoro ▁int ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁an ▁ArrayList ▁of ▁tourists ▁who ▁have ▁a ▁username ▁lik e ▁that ▁* ▁G iven ▁as ▁a rgument ▁* ▁* ▁@ ▁Param ▁ pUsernameTurista ▁Us re r name ▁tourists ▁to ▁search ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁@ ▁Return ▁data ▁for ▁Tourists ▁* ▁/ ▁p ublic ▁ArrayList ▁< BeanTurista > ▁ottieniTuristi ▁( String ▁ pUsernameTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁the ▁list ▁of ▁tourists ▁ turned ▁on ▁or ▁off ▁* ▁* ▁@ ▁Param ▁select ▁pact ▁True ▁False ▁th ose ▁tourists ▁ turned ▁off ▁* ▁@ ▁Return ▁data ▁for ▁Tourists ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁ArrayList ▁< BeanTurista > ▁ottieniTuristi ▁( boolean ▁condition ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁the ▁data ▁of ▁the ▁tourist ▁with ▁ID ▁equal ▁to ▁that ▁given ▁in ▁* ▁Input ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁to ▁find ▁* ▁@ ▁Return ▁Tourists ▁with ▁id ▁equal ▁to ▁the ▁input , ▁null ▁if ▁there ▁is ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁p ublic ▁BeanTurista ▁ottieniTurista ▁( int ▁pIdTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁the ▁list ▁of ▁cultural ▁favorites ▁from ▁a ▁particular ▁* ▁Tourist ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁to ▁find ▁* ▁@ ▁Return ▁List ▁of ▁Cultural ▁Heritage ▁Favorites ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁< Integer > ▁ottieni BeniCulturali Preferiti ▁p ublic ▁ArrayList ▁( int ▁pIdTurista ) ▁throws ▁SQLException ; ▁/ ▁** ▁* ▁Return s ▁a ▁list ▁of ▁favorite ▁ resting ▁spot ▁by ▁a ▁particular ▁* ▁Tourist ▁* ▁* ▁@ ▁Param ▁ID ▁pIdTurista ▁tourists ▁to ▁find ▁* ▁@ ▁Return ▁List ▁of ▁Refreshment ▁Favorites ▁* ▁@ ▁Throw s ▁SQLException ▁* ▁/ ▁< Integer > ▁ottieni PuntoDiRistoro Preferiti ▁p ublic ▁ArrayList ▁( int ▁pIdTurista ) ▁throws ▁SQLException ; ▁)