▁ ï»¿ p ackage ▁unisa . gps . etour . control . f uzzy ; ▁import ▁java . io . Serializable ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Enumeration ; ▁import ▁java . util . Hashtable ; ▁import ▁java . util . List ; ▁p ublic ▁class ▁ElencoCategorie ▁implements ▁Serializable ▁( ▁/ ▁** ▁* ▁ K e ep s ▁track ▁of ▁data ▁in ▁each ▁category ▁* ▁/ ▁priv ate ▁static ▁final ▁long ▁s erial Version UID ▁= ▁1 L ; ▁priv ate ▁ Hashtable ▁< string , ▁Categoria > ▁categories , ▁/ ▁/ ▁has h ▁table ▁that ▁keeps ▁/ ▁/ ▁For ▁each ▁category ▁a ▁/ ▁/ ▁Class ▁category ▁priv ate ▁ Hashtable ▁< string , ▁float [] > ▁totTermini ▁/ ▁/ ▁has h ▁table ▁that ▁keeps ▁/ ▁/ ▁The ▁terms ▁of ▁all ▁/ ▁/ ▁Categories ▁maxDist ▁float , ▁/ ▁/ ▁contain s ▁the ▁maximum ▁distance s ▁/ ▁** ▁* ▁The ▁constructor ▁initialize s ▁the ▁two ▁has h ▁tables ▁that ▁contain ▁* ▁Categories ▁and ▁terms ▁of ▁all ▁categories ▁* ▁/ ▁p ublic ▁ElencoCategorie ▁() ▁( ▁categories ▁< string , ▁Categoria > ▁= ▁new ▁ Hashtable ▁(); ▁totTermini ▁< string , ▁float [] > ▁= ▁new ▁ Hashtable ▁(); ▁) ▁/ ▁** ▁* ▁Access ▁method ▁attribute ▁maxDist ▁* ▁* ▁@ ▁Return ▁the ▁maximum ▁distance ▁of ▁all ▁the ▁terms ▁in ▁all ▁categories ▁* ▁/ ▁p ublic ▁float ▁get MaxDist ▁() ▁( ▁maxDist ▁return ; ▁) ▁/ ▁** ▁* ▁Access ▁method ▁to ▁the ▁table ▁of ▁categories ▁* ▁* ▁@ ▁Return ▁categories ▁* ▁/ ▁< string , ▁Categoria > ▁ getAll Categorie ▁p ublic ▁ Hashtable ▁() ▁( ▁return ▁categories ; ▁) ▁/ ▁** ▁* ▁Method ▁of ▁access ing ▁the ▁table ▁of ▁total ▁time ▁* ▁* ▁@ ▁Return ▁totTermini ▁* ▁/ ▁< string , ▁float [] > ▁get TotTermini ▁p ublic ▁ Hashtable ▁() ▁( ▁totTermini ▁return ; ▁) ▁/ ▁** ▁* ▁Method ▁to ▁access ▁a ▁category ▁in ▁the ▁table ▁of ▁* ▁Categories ▁* ▁* ▁@ ▁Param ▁pNomeCategoria ▁* ▁@ ▁Return ▁object ▁categories ▁represent ing ▁the ▁category ▁name ▁* ▁PNome Categoria ▁* ▁/ ▁get Categoria ▁p ublic ▁Category ▁( String ▁pNomeCategoria ) ▁( ▁if ▁( esisteCategoria ▁( pNomeCategoria )) ▁/ ▁/ ▁if ▁there ▁is ▁the ▁appropriate ▁category ▁return ▁categorie . get ▁( pNomeCategoria ) ▁/ ▁/ ▁returns ▁the ▁/ ▁/ ▁As sci ato ▁to ▁pNomeCategoria ▁return ▁null , ▁/ ▁/ ▁otherwise ▁null ▁) ▁/ ▁** ▁* ▁Method ▁of ▁access ing ▁the ▁values ▁of ▁a ▁particular ▁term ▁in ▁this ▁* ▁Category ▁table ▁* ▁* ▁@ ▁Param ▁pTermine ▁* ▁@ ▁Return ▁Return s ▁the ▁values ▁associated ▁with ▁the ▁term ▁pTermine ▁* ▁/ ▁p ublic ▁float ▁[] ▁get Termine ▁( String ▁pTermine ) ▁( ▁if ▁( esiste Termine ▁( pTermine )) ▁/ ▁/ ▁if ▁the ▁term ▁is ▁present ▁in ▁tebella ▁/ ▁/ ▁Term s ▁of ▁total ▁return ▁( float ▁[] ) ▁totTermini . get ▁( pTermine ) ▁/ ▁/ ▁return ▁the ▁va o l re ▁/ ▁/ ▁As soc i ate ▁return ▁null , ▁/ ▁/ ▁null ▁otherwise ▁) ▁/ ▁** ▁* ▁Method ▁which ▁allow s ▁you ▁to ▁add ▁a ▁category ▁to ▁the ▁table ▁of ▁* ▁Categories ▁* ▁* ▁@ ▁Param ▁pNomeCategoria ▁category ▁name ▁to ▁add ▁* ▁@ ▁Param ▁object ▁associated ▁pCategoria ▁category ▁* ▁@ ▁Return ▁true ▁if ▁the ▁operation ▁was ▁successfully ▁car ri ed ▁out ▁false ▁* ▁Otherwise ▁* ▁/ ▁p ublic ▁boolean ▁add Categoria ▁( String ▁pNomeCategoria , ▁star ▁pCategoria ) ▁( ▁if ▁(! ▁esisteCategoria ▁( pNomeCategoria )) ▁/ ▁/ ▁if ▁the ▁category ▁exists ▁return ▁false ; ▁/ ▁/ ▁returns ▁false ▁categorie . put ▁( pNomeCategoria , ▁pCategoria ) , ▁/ ▁/ ▁otherwise ▁load ▁the ▁/ ▁/ ▁Category ▁in ▁the ▁table ▁return ▁true ; ▁/ ▁/ ▁returns ▁true ▁) ▁/ ▁** ▁* ▁Edit ▁a ▁category ▁of ▁the ▁category ▁table ▁* ▁* ▁@ ▁Param ▁pNomeCategoria ▁category ▁name ▁to ▁edit ▁* ▁@ ▁Param ▁object ▁pCategoria ▁be ▁associated ▁with ▁this ▁category ▁* ▁@ ▁Return ▁true ▁if ▁the ▁operation ▁was ▁successfully ▁car ri ed ▁out ▁false ▁* ▁Otherwise ▁* ▁/ ▁p ublic ▁boolean ▁set Categoria ▁( String ▁pNomeCategoria , ▁star ▁pCategoria ) ▁( ▁if ▁( esisteCategoria ▁( pNomeCategoria )) ▁/ ▁/ ▁if ▁the ▁category ▁do es ▁not ▁exist ▁return ▁false ; ▁/ ▁/ ▁returns ▁false ▁categorie . put ▁( pNomeCategoria , ▁pCategoria ) ▁/ ▁/ ▁update ▁the ▁table ▁of ▁/ ▁/ ▁C ato go rie ▁return ▁true ; ▁/ ▁/ ▁returns ▁true ▁) ▁/ ▁** ▁* ▁Method ▁which ▁allow s ▁you ▁to ▁set ▁the ▁value ▁of ▁a ▁term ▁in ▁the ▁tables ▁* ▁Total ▁time ▁* ▁* ▁@ ▁Param ▁name ▁pTermine ▁term ▁* ▁@ ▁Param ▁pVal ▁value ▁to ▁associate ▁with ▁the ▁term ▁* ▁/ ▁p ublic ▁void ▁set Termine ▁( String ▁pTermine , ▁float ▁[] ▁pVal ) ▁( ▁totTermini . put ▁( pTermine , ▁pVal ); ▁) ▁/ ▁** ▁* ▁Method ▁which ▁allow s ▁the ▁value ▁of ▁the ▁se ven ▁k ing s ▁of ▁the ▁maximum ▁distance ▁of ▁* ▁Term s ▁from ▁one ▁category ▁* ▁* ▁@ ▁Param ▁pMaxDist ▁* ▁/ ▁p ublic ▁void ▁set MaxDist ▁( float ▁pMaxDist ) ▁( ▁maxDist ▁= ▁pMaxDist ; ▁) ▁/ ▁** ▁* ▁Method ▁which ▁allow s ▁to ▁derive ▁a ▁collection ▁of ▁name s ▁of ▁iterable ▁* ▁All ▁categories ▁in ▁the ▁categories ▁tab e la ▁* ▁* ▁@ ▁Return ▁string ▁iterable ▁Collection ▁* ▁/ ▁p ublic ▁Iter able ▁< String > ▁Categories ▁() ▁( ▁List ▁< String > ▁toReturn ▁< String > ▁= ▁new ▁ArrayList ▁(); // ▁create ▁a ▁new ▁list ▁for ▁( Enumeration ▁< String > ▁categorie . key s ▁val ▁= ▁(); ▁val . hasMore Element s ▁(); ) // ▁iterate s ▁/ ▁/ ▁ N ▁/ ▁/ ▁Time s ▁/ ▁/ ▁Where ▁/ ▁/ ▁ N ▁is ▁/ ▁/ ▁The ▁/ ▁/ ▁Number ▁/ ▁/ ▁ By ▁/ ▁/ ▁Categories ▁/ ▁/ ▁Current ▁/ ▁/ ▁In ▁/ ▁/ ▁Table ▁( ▁toReturn . add ▁( val . next Element ▁ ());// ▁add s ▁to ▁the ▁list ▁the ▁name ▁of ▁/ ▁/ ▁A ▁category ▁) ▁toReturn ▁return ; ▁) ▁/ ▁** ▁* ▁Method ▁a id s ▁to ▁verify ▁the ▁exist ence ▁of ▁a ▁category ▁* ▁In ▁the ▁table ▁of ▁categories ▁* ▁* ▁@ ▁Param ▁name ▁of ▁the ▁category ▁PKEY ▁* ▁@ ▁Return ▁true ▁if ▁the ▁category ▁exists ▁false ▁otherwise ▁* ▁/ ▁p ublic ▁boolean ▁esisteCategoria ▁( String ▁PKEY ) ▁( ▁TR Y ▁( ▁categorie . get ▁( PKEY ) , ▁/ ▁/ ▁try ▁to ▁extract ▁the ▁category ▁name ▁PKEY ▁/ ▁/ ▁The ▁table ▁of ▁categories ▁return ▁true ; ▁/ ▁/ ▁if ▁the ▁transaction ▁do es ▁not ▁raise ▁exceptions ▁category ▁/ ▁/ ▁E x is ts ▁and ▁returns ▁true ▁) ▁ catch ▁( Null PointerException ▁e ) ▁( ▁return ▁false ; ▁/ ▁/ ▁false ▁otherwise ▁) ▁) ▁/ ▁** ▁* ▁Method ▁a id s ▁to ▁verify ▁the ▁exist ence ▁of ▁a ▁term ▁* ▁In ▁the ▁table ▁of ▁total ▁time ▁* ▁* ▁@ ▁Param ▁PKEY ▁term ▁* ▁@ ▁Return ▁true ▁if ▁the ▁term ▁exists ▁false ▁otherwise ▁* ▁/ ▁p ublic ▁boolean ▁esiste Termine ▁( String ▁PKEY ) ▁( ▁/ ▁/ ▁ see ▁esisteCategoria ▁TR Y ▁( ▁if ▁( totTermini . get ▁( PKEY ) ! ▁= ▁null ) ▁return ▁true ; ▁) ▁ catch ▁( Null PointerException ▁e ) ▁( ▁return ▁false ; ▁) ▁return ▁false ; ▁) ▁)