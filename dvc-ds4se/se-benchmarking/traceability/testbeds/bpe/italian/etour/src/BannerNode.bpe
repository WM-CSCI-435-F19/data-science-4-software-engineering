▁ ï»¿ p ackage ▁unisa . gps . etour . gui . operatoreagenzia . tables ; ▁import ▁java x . swing . ImageIcon ; ▁import ▁java x . swing . tree . Default MutableTreeNode ; ▁/ ▁** ▁* ▁ This ▁class ▁creates ▁a ▁node ▁in ▁a ▁JTree ▁to ▁store ▁* ▁Information ▁ab out ▁a ▁banner . ▁* ▁* ▁@ ▁Version ▁1.0 ▁* ▁@ ▁Auth or ▁M ario ▁G allo ▁* ▁* ▁ Â© ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁DMI ▁SE ▁@ ▁ SA ▁Lab ▁-- ▁* ▁University ▁of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁Default MutableTreeNode ▁ext ends ▁BannerNode ▁( ▁priv ate ▁int ▁id ; ▁/ ▁** ▁* ▁ This ▁is ▁the ▁default ▁constructor . ▁* ▁* ▁/ ▁p ublic ▁BannerNode ▁() ▁( ▁super ▁(); ▁) ▁/ ▁** ▁* ▁Create ▁a ▁node ▁with ▁the ▁image ▁of ▁the ▁banner ▁and ▁* ▁You r ▁id ▁supplied ▁as ▁parameters . ▁* ▁* ▁@ ▁Param ▁pBanner ▁Image l con ▁- ▁the ▁image ▁of ▁the ▁banner . ▁ PID ▁* ▁@ ▁ param ▁int ▁- ▁the ▁id ▁of ▁the ▁banner . ▁* ▁@ ▁Throw s ▁ Illegal A rgumentException ▁- ▁if ▁the ▁image ▁provided ▁as ▁input ▁is ▁invalid . ▁* ▁* ▁/ ▁p ublic ▁BannerNode ▁( ImageIcon ▁pBanner , ▁int ▁pid ) ▁throws ▁ Illegal A rgumentException ▁( ▁super ▁(); ▁if ▁( null ▁== ▁pBanner ) ▁( ▁throw ▁new ▁ Illegal A rgumentException ▁( ▁" Image ▁is ▁invalid . "); ▁) ▁setUser Object ▁( pBanner ); ▁id ▁= ▁pid ; ▁) ▁/ ▁** ▁* ▁* ▁Return s ▁the ▁node ▁type ▁PRNode ▁father . ▁* ▁* ▁@ ▁Return ▁PRNode ▁- ▁the ▁parent ▁node . ▁* ▁* ▁/ ▁p ublic ▁PRNode ▁get Parent ▁() ▁( ▁return ▁( PRNode ) ▁super . get Parent ▁(); ▁) ▁/ ▁** ▁* ▁* ▁Return s ▁the ▁id ▁of ▁the ▁banner ▁for ▁which ▁information ▁* ▁Are ▁stored ▁in ▁this ▁node . ▁* ▁* ▁@ ▁Return ▁int ▁- ▁the ▁id ▁of ▁the ▁banner . ▁* ▁* ▁/ ▁p ublic ▁int ▁getID ▁() ▁( ▁return ▁id ; ▁) ▁/ ▁** ▁* ▁* ▁Stor es ▁the ▁id ▁of ▁the ▁banner ▁supplied ▁input . ▁* ▁* ▁@ ▁Param ▁int ▁ PID ▁- ▁an ▁ID ▁of ▁a ▁banner . ▁* ▁* ▁/ ▁p ublic ▁void ▁set ID ▁( int ▁pid ) ▁( ▁id ▁= ▁pid ; ▁) ▁/ ▁** ▁* ▁* ▁Return s ▁the ▁banner ▁image . ▁* ▁* ▁@ ▁Return ▁ImageIcon ▁- ▁the ▁image . ▁* ▁/ ▁p ublic ▁ImageIcon ▁get Banner ▁() ▁( ▁return ▁( ImageIcon ) ▁get User Object ▁(); ▁) ▁/ ▁** ▁* ▁* ▁Save ▁the ▁image ▁provided ▁as ▁input . ▁* ▁* ▁@ ▁Param ▁pImmagine ▁Image l con ▁- ▁the ▁image ▁to ▁be ▁stored . ▁* ▁@ ▁Throw s ▁ Illegal A rgumentException ▁- ▁if ▁the ▁supplied ▁parameter ▁is ▁null . ▁* ▁/ ▁p ublic ▁void ▁set Banner ▁( ImageIcon ▁pImmagine ) ▁throws ▁ Illegal A rgumentException ▁( ▁if ▁( null ▁== ▁pImmagine ) ▁( ▁throw ▁new ▁ Illegal A rgumentException ▁( ▁" Image ▁is ▁invalid . "); ▁) ▁setUser Object ▁( pImmagine ); ▁) ▁)