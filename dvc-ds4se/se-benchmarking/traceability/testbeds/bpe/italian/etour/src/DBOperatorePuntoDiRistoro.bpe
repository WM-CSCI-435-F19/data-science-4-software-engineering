▁ ï»¿ p ackage ▁unisa . gps . etour . repository ; ▁import ▁ Java . sql . Connection ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . sql . Statement ; ▁import ▁unisa . gps . etour . bean . BeanOperatore PuntoDiRistoro ; ▁/ ▁** ▁* ▁Class ▁that ▁implements ▁the ▁interface ▁Operator ▁Refreshment ▁* ▁* ▁@ ▁Auth or ▁J os eph ▁Mart one ▁* ▁@ ▁Version ▁0.1 ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁DMI ▁University ▁* ▁Of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁DBOperatore PuntoDiRistoro ▁implements ▁IDBOperatore PuntoDiRistoro ▁( ▁/ ▁/ ▁ Empty ▁constructor ▁p ublic ▁DBOperatore PuntoDiRistoro ▁() ▁( ▁) ▁p ublic ▁boolean ▁cancella Operatore PuntoDiRistoro ▁( int ▁pIdOperatore ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁cancellation ▁String ▁query ▁= ▁" DE LE TE ▁FR OM ▁operatore puntodiristoro ▁W HER E ▁Id ▁=" ▁+ ▁P IdOperatore ; ▁/ ▁/ ▁You ▁run ▁the ▁query ▁Cancellation ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁boolean ▁inserisci Operatore PuntoDiRistoro ▁( ▁BeanOperatore PuntoDiRistoro ▁popera ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁Si ngle ▁ResultSet ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁insertion ▁String ▁query ▁= ▁" INSER T ▁I NTO ▁operatore puntodiristoro ▁( Name , ▁Surname ," ▁+ ▁" Username , ▁Password , ▁Email , ▁ IdPuntoDiRistoro ) ▁VALUES ▁( ▁'" ▁P Operatore . getNome ▁+ ▁() ▁+ ▁"','" ▁+ ▁p Operatore . getCognome ▁() ▁P Operatore . get Username ▁+ ▁"','" ▁+ ▁() ▁+ ▁"','" ▁P Operatore . getPassword ▁+ ▁() ▁+ ▁"','" ▁+ ▁p Operatore . get Email ▁() ▁+ ▁" ▁'," ▁+ ▁P Operatore . get IdPuntoDiRistoro ▁() ▁+ ▁")" ; ▁/ ▁/ ▁Query ▁for ▁check ing ▁the ▁ID ▁of ▁the ▁ PuntoDiRistoro ▁as ▁/ ▁/ ▁The ▁associati on ▁is ▁1 ▁to ▁1 ▁b etween ▁OP PR ▁and ▁PR ▁Uni que ▁string ▁= ▁" SELECT ▁ IdPuntoDiRistoro ▁FR OM ▁operatore puntodiristoro ▁W HER E ▁ IdPuntoDiRistoro ▁=" ▁+ ▁P Operatore . get IdPuntoDiRistoro ▁(); ▁/ ▁/ ▁Execut e ▁the ▁query ▁to ▁control ▁si ngle ▁= ▁stat . executeQuery ▁( s h op s ); ▁int ▁j ▁= ▁0; ▁/ ▁/ ▁Check ▁if ▁there ▁are ▁tu ples ▁while ▁( unico . next ▁()) ▁j ▁+ ▁+ ; ▁/ ▁/ ▁I f ▁it ▁is ▁empty ▁if ▁( j ▁== ▁0) ▁( ▁/ ▁/ ▁You ▁run ▁the ▁insert ▁query ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁System . out . println ▁( ▁" I f ▁you ▁include ▁the ▁PR "); ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁I f ▁not ▁al read y ▁exist ▁else ▁( ▁System . out . println ▁( ▁" Operator ▁PR ▁al read y ▁exists ▁for ▁the ▁PR "); ▁return ▁false ; ▁) ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁if ▁( unique ! ▁= ▁null ) ▁( ▁unico . close ▁(); ▁) ▁) ▁) ▁p ublic ▁boolean ▁modifica Operatore PuntoDiRistoro ▁( ▁BeanOperatore PuntoDiRistoro ▁popera ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁amendment ▁String ▁query ▁= ▁" UP DATE ▁operatore puntodiristoro ▁SE T " ▁+ ▁" Name ▁= ▁'" ▁P Operatore . getNome ▁+ ▁() ▁+ ▁" ▁', ▁Name ▁='" ▁P Operatore . getCognome ▁+ ▁() ▁+ ▁" ▁', ▁password ▁='" ▁P Operatore . getPassword ▁+ ▁() ▁+ ▁" ▁', ▁Email ▁='" ▁P Operatore . get Email ▁+ ▁() ▁+ ▁" ▁' W HER E ▁ IdPuntoDiRistoro ▁=" ▁+ ▁P Operatore . get IdPuntoDiRistoro ▁(); ▁/ ▁/ ▁You ▁run ▁the ▁query ▁for ▁Change ▁int ▁i ▁= ▁stat . executeUpdate ▁( query ); ▁/ ▁/ ▁ This ▁returns ▁the ▁back up ▁return ▁( i ▁== ▁1 ); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁of ▁clos ing ▁the ▁Statement ▁and ▁the ▁/ ▁/ ▁Connect ▁finally ▁( ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁p ublic ▁BeanOperatore PuntoDiRistoro ▁ ottieniOperatore PuntoDiRistoro ▁( ▁pIdOperatore ▁int ) ▁throws ▁SQLException ▁( ▁/ ▁/ ▁Variable s ▁for ▁database ▁connection ▁Connection ▁conn ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁Statement ▁stat ▁= ▁null ; ▁/ ▁/ ▁Variable ▁for ▁the ▁query ▁results ▁ResultSet ▁result ▁= ▁null ; ▁TR Y ▁( ▁/ ▁/ ▁Get ▁the ▁connection ▁D BConnessionePool . ottieni Connessione ▁conn ▁= ▁(); ▁/ ▁/ ▁Create ▁the ▁Statement ▁stat ▁= ▁conn . createStatement ▁(); ▁/ ▁/ ▁Query ▁for ▁the ▁extract ion ▁of ▁the ▁dot ▁Refreshments ▁required ▁String ▁query ▁= ▁" SELECT ▁* ▁FR OM ▁W HER E ▁id ▁= ▁operatore puntodiristoro " ▁+ ▁P IdOperatore ; ▁/ ▁/ ▁The ▁query ▁is ▁execut ed ▁result ▁= ▁stat . executeQuery ▁( query ); ▁/ ▁/ ▁Get ▁the ▁bean ▁Operator ▁refreshment ▁pass ing ▁the ▁id ▁BeanOperatore PuntoDiRistoro ▁b eanTemp ▁= ▁null ; ▁if ▁( result . next ▁()) ▁( ▁/ ▁/ ▁Buil t ▁on ▁Bean O PR ▁b eanTemp ▁= ▁new ▁BeanOperatore PuntoDiRistoro ▁( result . getInt ▁( ▁" Id ") ▁result . getString ▁( ▁" Name "), ▁result . getString ▁( ▁" Name "), ▁result . getString ▁( ▁" Username "), ▁result ▁ . ▁ getString ▁( ▁" Password "), ▁result ▁ . ▁ getString ▁( ▁" Email "), ▁result ▁ . ▁ getInt ▁( ▁" IdPuntoDiRistoro ") ); ▁) ▁b eanTemp ▁return ; ▁) ▁/ ▁/ ▁Exception ▁if ▁there ▁is ▁an ▁error ▁ catch ▁( Exception ▁e ) ▁( ▁throw ▁new ▁SQLException ▁(); ▁) ▁/ ▁/ ▁Al way s ▁run s ▁and ▁take s ▁ care ▁to ▁close ▁the ▁Result , ▁the ▁Statement ▁/ ▁/ ▁And ▁Connection ▁finally ▁( ▁if ▁( result ! ▁= ▁null ) ▁( ▁result . close ▁(); ▁) ▁if ▁( stat ▁= ▁null ) ▁( ▁stat . close ▁(); ▁) ▁if ▁( conn ! ▁= ▁null ) ▁( ▁D BConnessionePool . rilascia Connessione ▁( conn ); ▁) ▁) ▁) ▁)