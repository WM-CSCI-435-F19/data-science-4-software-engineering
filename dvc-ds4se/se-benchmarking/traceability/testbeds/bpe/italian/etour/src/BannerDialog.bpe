▁ ï»¿ p ackage ▁unisa . gps . etour . gui . operatoreagenzia ; ▁import ▁java . awt ▁ .* ; ▁import ▁java . awt . event ▁ .* ; ▁import ▁java . awt . image . BufferedImage ; ▁import ▁java . io . File ; ▁import ▁java . io . IOException ; ▁import ▁java x . image io . ImageIO ; ▁import ▁java x . swing ▁ .* ; ▁import ▁java x . swing . file cho os er . FileFilter ; ▁import ▁java x . swing . border ▁ .* ; ▁import ▁unisa . gps . etour . gui . operatoreagenzia . Home ; ▁/ ▁** ▁* ▁ This ▁class ▁realiz es ▁the ▁panel ▁for ▁the ▁dialog ▁for ▁entering ▁a ▁* ▁New ▁banner ▁or ▁a ▁banner ▁for ▁replacing ▁selected . ▁* ▁* ▁@ ▁Version ▁1.0 ▁* ▁@ ▁Auth or ▁M ario ▁G allo ▁* ▁* ▁ Â© ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁DMI ▁SE ▁@ ▁ SA ▁Lab ▁-- ▁* ▁University ▁of ▁Salerno ▁* ▁/ ▁p ublic ▁class ▁JPanel ▁ext ends ▁BannerDialog ▁( ▁priv ate ▁final ▁static ▁Dimension ▁bannerSize ▁= ▁new ▁Dimension ▁(140 , ▁40 ); ▁priv ate ▁JLabel ▁preview ▁= ▁null ; ▁priv ate ▁JButton ▁btnCarica ▁= ▁null ; ▁priv ate ▁JPanel ▁that ; ▁/ ▁** ▁* ▁ This ▁is ▁the ▁default ▁constructor . ▁* ▁/ ▁p ublic ▁BannerDialog ▁() ▁( ▁super ▁( null ); ▁this ▁= ▁this ; ▁ setPreferredSize ▁( new ▁Dimension ▁( 42 0, ▁160 )); ▁preview ▁= ▁new ▁JLabel ▁(); ▁ ante prima . set Bounds ▁( new ▁ Rectangle ▁(40 , ▁20 , ▁ 250, ▁60 )); ▁ ante prima . set Border ▁( BorderFactory . create TitledBorder ▁( BorderFactory ▁ . ▁create Line Border ▁( new ▁Color ▁(51, ▁102, ▁255) , ▁3), ▁Pr evi e w ▁Banner ▁" , ▁ TitledBorder . DEF A ULT _ JUSTIF ICA TION , ▁ TitledBorder . DEF A ULT _ POS I TION , ▁new ▁Font ▁( ▁" Dialog ", ▁Font . BOLD , ▁12), ▁new ▁Color ▁(0, ▁102, ▁ 204 ))); ▁btnCarica ▁= ▁new ▁JButton ▁(); ▁btnCarica . set Bounds ▁( new ▁ Rectangle ▁(320 , ▁ 30, ▁5 0, ▁40) ); ▁btnCarica . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" A pr i File . png ▁ "))); ▁btnCarica . a ddActionListener ▁( new ▁ActionListener ▁() ▁( ▁p ublic ▁void ▁actionPerformed ▁( ActionEvent ▁arg 0) ▁( ▁File ▁ f ▁= ▁apriFile Dialog ▁(); ▁if ▁( f ▁== ▁null ) ▁( ▁return ; ▁) ▁BufferedImage ▁img ▁= ▁null ; ▁TR Y ▁( ▁img ▁= ▁ ImageIO . read ▁( f ); ▁if ▁( img . getW idth ▁() > ▁bannerSize . width ▁| ▁| ▁ Im g . getH eight ▁() > ▁bannerSize . height ) ▁( ▁img . get Su b image ▁img ▁= ▁(0, ▁0, ▁bannerSize . width , ▁bannerSize . height ); ▁) ▁) ▁ catch ▁( Exception ▁e ) ▁( ▁e . printStackTrace ▁(); ▁) ▁ N ▁= ▁new ▁ImageIcon ▁ImageIcon ▁( img ); ▁ ante prima . setIcon ▁( n ); ▁ ante prima . repaint ▁(); ▁) ▁) ); ▁JLabel ▁txtAttenzione ▁= ▁new ▁JLabel ▁( ▁" Warning !" ); ▁txtAttenzione . setIcon ▁( new ▁ImageIcon ▁( getClass ▁() . ▁getRe source ▁( ▁ Home . URL _ IMAGES ▁+ ▁" warning 16. png ▁ "))); ▁txtAttenzione . set Bounds ▁( 10, ▁8 5, ▁100 , ▁30 ); ▁JLabel ▁txtTest ▁= ▁new ▁JLabel ▁( ▁"< html > ▁< ul > ▁< li > ▁image ▁for ▁the ▁banner ▁can ▁not ▁exceed ▁< b > ▁< font ▁color = \ " red \ " >" ▁+ ▁Banner Size . width ▁+ ▁" X " ▁+ ▁Banner Size . height ▁+ ▁"< / ▁Font > ▁</ ▁b > ▁pi x el s . " ▁+ ▁"< li > ▁Image s ▁of ▁mag n itu d e ▁la r ger ▁will ▁be ▁res ized . ▁</ ▁U l > ▁</ ▁html > "); ▁txtTest o . set Bounds ▁(0, ▁90 , ▁42 0, ▁80 ); ▁add ▁( txtTest , ▁null ); ▁add ▁( txtAttenzione , ▁null ); ▁add ▁( pre v , ▁null ); ▁add ▁( btnCarica , ▁null ); ▁) ▁/ ▁** ▁* ▁ This ▁method ▁initialize s ▁the ▁image ▁contain ed ▁in ▁the ▁preview . ▁* ▁* ▁@ ▁Param ▁pBanner ▁ImageIcon ▁- ▁an ▁image ▁of ▁a ▁banner . ▁* ▁/ ▁p ublic ▁void ▁ setSelected Banner ▁( ImageIcon ▁pBanner ) ▁( ▁ ante prima . setIcon ▁( pBanner ); ▁) ▁/ ▁** ▁* ▁ This ▁method ▁returns ▁the ▁image ▁contain ed ▁in ▁the ▁preview . ▁* ▁* ▁@ ▁Return ▁ImageIcon ▁- ▁the ▁image ▁of ▁the ▁banner . ▁* ▁/ ▁p ublic ▁ImageIcon ▁getSelected Banner ▁() ▁( ▁return ▁( ImageIcon ) ▁ ante prima . getIcon ▁(); ▁) ▁/ ▁** ▁* ▁ This ▁method ▁open s ▁the ▁dialog ▁for ▁select ing ▁a ▁file ▁from ▁di s k . ▁* ▁* ▁@ ▁Return ▁* ▁< ul > ▁* ▁< li > ▁File s ▁- ▁the ▁selected ▁file . ▁* ▁< li > ▁ Null ▁- ▁if ▁you ▁have ▁not ▁selected ▁any ▁files . ▁* ▁</ ▁U l > ▁* ▁/ ▁priv ate ▁File ▁apriFile Dialog ▁() ▁( ▁JFileChooser ▁apriFile ▁= ▁new ▁JFileChooser ▁(); ▁apriFile . set Dialog Title ▁( ▁" Select ▁a ▁new ▁image "); ▁apriFile . set A c cept All FileFilter U s ed ▁( false ); ▁apriFile . setM ulti Selection Enabled ▁( false ); ▁/ ▁/ ▁File ▁Fil ter ▁for ▁the ▁window ▁to ▁open ▁the ▁file . ▁apriFile . set FileFilter ▁( new ▁ FileFilter ▁() ▁( ▁p ublic ▁boolean ▁accept ▁( File ▁arg 0) ▁( ▁if ▁( arg 0. isDirector y ▁()) ▁return ▁true ; ▁String ▁name ▁= ▁arg 0. getName ▁() . ▁To Lower Case ▁(); ▁if ▁( nome . ends With ▁( ▁" j pg ") ▁| ▁| ▁nome . ends With ▁( ▁" gif ") ▁| ▁| ▁Nome . ends With ▁( ▁" png ")) ▁return ▁true ; ▁else ▁return ▁false ; ▁) ▁p ublic ▁String ▁getDescription ▁() ▁( ▁return ▁" Image s ▁( * . ▁P NG , ▁* . ▁ GI F , ▁* . ▁J P G ) "; ▁) ▁) ); ▁int ▁return Val ▁= ▁apriFile . show Open Dialog ▁( this ); ▁if ▁( return Val ▁== ▁JFileChooser . A PPR O VE _ OPTION ) ▁( ▁apriFile . getSelected File ▁return ▁(); ▁) ▁else ▁return ▁null ; ▁) ▁)