▁ ï»¿ / ▁* ▁* ▁ PrioritaRenderer . java ▁* ▁* ▁1.0 ▁* ▁* ▁22 / 05/ 2007 ▁* ▁* ▁ 2007 ▁eTour ▁Pro ject ▁- ▁C opy right ▁by ▁SE ▁@ ▁ SA ▁Lab ▁- ▁DMI ▁University ▁of ▁Salerno ▁* ▁/ ▁p ackage ▁unisa . gps . etour . gui . operatoreagenzia . tables ; ▁import ▁java . awt . Component ; ▁import ▁java x . swing . JSlider ; ▁import ▁java x . swing . JTable ; ▁import ▁java x . swing . table . T ableCellRenderer ; ▁/ ▁** ▁* ▁< b > ▁Priorit Renderer ▁</ ▁b > ▁< p > ▁* ▁ This ▁class ▁creates ▁a ▁custom ▁renderer ▁ JSlider ▁as ▁* ▁Of ▁the ▁pr ior it ies ▁in ▁the ▁table ▁of ▁news . ▁</ ▁P > ▁* ▁* ▁@ ▁Version ▁1.0 ▁* ▁@ ▁Se e ▁java x . swing . JSlider ▁* ▁@ ▁Se e ▁java x . swing . table . T ableCellRenderer ▁* ▁@ ▁Auth or ▁M ario ▁G allo ▁* ▁* ▁/ ▁p ublic ▁class ▁ext ends ▁ PrioritaRenderer ▁ JSlider ▁implements ▁T ableCellRenderer ▁( ▁/ ▁** ▁* ▁ This ▁default ▁constructor . ▁* ▁* ▁/ ▁p ublic ▁ PrioritaRenderer ▁() ▁( ▁ setOp aque ▁( true ); ▁ setO rientation ▁( H or i zo nt al ); ▁setMinimum ▁( 1); ▁ setM aximum ▁( 5); ▁set Label Table ▁( create Standard Label s ▁(1) ); ▁setMa j or Tick Sp acing ▁( 1); ▁ setPaint Tick s ▁( true ); ▁) ▁/ ▁** ▁* ▁ This ▁method ▁returns ▁the ▁display ▁component ▁of ▁the ▁cell ▁identified ▁* ▁ From ▁the ▁row ▁and ▁column ▁provided ▁input . ▁* ▁* ▁@ ▁Param ▁pTable ▁JTable ▁- ▁the ▁table . ▁* ▁@ ▁Param ▁pValue ▁Object ▁- ▁the ▁object ▁contain ed ▁in ▁the ▁selected ▁cell . ▁* ▁@ ▁Param ▁ pIsSelected ▁boolean ▁- ▁true ▁if ▁the ▁object ▁selected . ▁* ▁False ▁otherwise . ▁* ▁@ ▁Param ▁pHasFocus ▁boolean ▁- ▁true ▁if ▁the ▁object ▁has ▁the ▁focus . ▁* ▁False ▁otherwise . ▁* ▁@ ▁Param ▁pRow ▁int ▁- ▁the ▁row ▁index . ▁* ▁@ ▁Param ▁pColumn ▁int ▁- ▁the ▁index ▁of ▁the ▁column . ▁* ▁@ ▁Return ▁Component ▁- ▁the ▁component ▁to ▁display ▁* ▁/ ▁p ublic ▁Component ▁getT ableCellRenderer Component ▁( pTable ▁JTable , ▁Object ▁pValue , ▁ pIsSelected ▁boolean , ▁boolean ▁pHasFocus , ▁pRow ▁int , ▁int ▁pColumn ) ▁throws ▁ Illegal A rgumentException ▁( ▁if ▁( ( pValue ▁instance of ▁Integer )) ▁( ▁throw ▁new ▁ Illegal A rgumentException ▁( ▁" unexpected ▁value ▁cell "); ▁) ▁int ▁value ▁= ▁( Integer ) ▁pValue ; ▁if ▁( value ▁< 1 ▁| ▁| ▁value > ▁5) ▁( ▁throw ▁new ▁ Illegal A rgumentException ▁( ▁" Illegal ▁value ▁cell . "); ▁) ▁if ▁( pIsSelected ) ▁( ▁ setBackground ▁( pTable . getSelection Background ▁()); ▁) ▁else ▁( ▁ setBackground ▁( pTable . get Background ▁()); ▁) ▁ setValue ▁( value ); ▁return ▁this ; ▁) ▁)