▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Arrays ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . Email ; ▁/** ▁* ▁A ▁loader ▁for ▁ Fake ▁Emails . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁EmailBeanLoader ▁implement s ▁BeanLoader < Email > ▁{ ▁public ▁List < Email > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁List < Email > ▁list ▁= ▁new ▁ArrayList < Email > (); ▁while ▁( rs . next ()) ▁list . add ( loadSingle ( rs )); ▁return ▁list ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁Email ▁email ) ▁throw s ▁SQLException ▁{ ▁ps . set String ( 1, ▁email . getToList Str ()); ▁ps . set String (2, ▁email . get From ()); ▁ps . set String ( 3, ▁email . get Subject ()); ▁ps . set String ( 4, ▁email . getBody ()); ▁return ▁ps ; ▁} ▁public ▁Email ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁Email ▁email ▁= ▁new ▁Email (); ▁email . set From ( rs . get String (" FromAddr ")); ▁email . s etToList ( Arrays . a s List ( rs . get String (" ToAddr "). spl it (" , ")) ); ▁email . s etBody ( rs . get String (" Body ")); ▁email . set Subject ( rs . get String (" Subject ")); ▁email . setTime Added ( rs . get Timestamp (" AddedDate ")); ▁return ▁email ; ▁} ▁}