▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . action . base . OfficeVisit BaseAction ; ▁import ▁edu . nc su . cs c . itrust . beans . OfficeVisitBean ; ▁import ▁edu . nc su . cs c . itrust . beans . PrescriptionBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . OfficeVisitDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PatientDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PersonnelDAO ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁import ▁edu . nc su . cs c . itrust . Messages ; ▁/** ▁* ▁Handle s ▁viewing ▁the ▁office ▁visits , ▁prescriptions , ▁and ▁HCP ▁name ▁for ▁the ▁given ▁ovID ▁Used ▁by ▁* ▁view OfficeVisit . jsp ▁* ▁* ▁@ author ▁ laure nha y ward ▁* ▁*/ ▁public ▁class ▁View OfficeVisit Action ▁extends ▁OfficeVisit BaseAction ▁{ ▁private ▁OfficeVisitDAO ▁ovDAO ; ▁private ▁PersonnelDAO ▁personnelDAO ; ▁private ▁PatientDAO ▁patientDAO ; ▁/** ▁* ▁S uper ▁class ▁handle s ▁validat ing ▁the ▁logged InM id ▁and ▁ovIDString ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁person ▁viewing ▁the ir ▁office ▁visits . ▁* ▁@ param ▁ovIDString ▁* ▁The ▁unique ▁identifier ▁of ▁the ▁office ▁visit ▁as ▁a ▁String . ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁View OfficeVisit Action ( DAOFactory ▁factory , ▁long ▁loggedInMID , ▁String ▁ovIDString ) ▁throw s ▁iTrustException ▁{ ▁super ( factory , ▁String . value Of ( loggedInMID ) , ▁ovIDString ); ▁this . personnelDAO ▁= ▁factory . get PersonnelDAO (); ▁this . ovDAO ▁= ▁factory . get OfficeVisitDAO (); ▁} ▁/** ▁* ▁S uper ▁class ▁handle s ▁validat ing ▁the ▁pidString ▁and ▁ovIDString . ▁U su ally ▁used ▁for ▁representing ▁a ▁patient . ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁repPIDString ▁The ▁MID ▁of ▁the ▁representative ▁viewing ▁the ▁records . ▁* ▁@ param ▁ovIDString ▁* ▁The ▁unique ▁identifier ▁of ▁the ▁office ▁visit ▁as ▁a ▁String . ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁View OfficeVisit Action ( DAOFactory ▁factory , ▁long ▁loggedInMID , ▁String ▁repPIDString , ▁String ▁ovIDString ) ▁throw s ▁iTrustException ▁{ ▁super ( factory , ▁repPIDString , ▁ovIDString ); ▁this . personnelDAO ▁= ▁factory . get PersonnelDAO (); ▁this . patientDAO ▁= ▁factory . get PatientDAO (); ▁this . ovDAO ▁= ▁factory . get OfficeVisitDAO (); ▁check Represented ( loggedInMID , ▁repPIDString ); ▁} ▁private ▁void ▁check Represented ( long ▁loggedInMID , ▁String ▁repPIDString ) ▁throw s ▁iTrustException ▁{ ▁try ▁{ ▁long ▁ rep ee ▁= ▁Long . value Of ( rep PID String ); ▁if ▁(! patientDAO . represents ( loggedInMID , ▁ rep ee )) ▁throw ▁new ▁iTrustException ( ▁Messages . get String (" View OfficeVisit Action . 0 ")); ▁// $ NON - NL S -1 $ ▁} ▁catch ▁( NumberFormat Exception ▁e ) ▁{ ▁throw ▁new ▁iTrustException ( Messages . get String (" View OfficeVisit Action . 1")); ▁// $ NON - NL S -1 $ ▁} ▁} ▁/** ▁* ▁Returns ▁the ▁office ▁visit ▁as ▁an ▁OfficeVisitBean ▁for ▁the ▁ovID ▁that ▁was ▁initial ly ▁passed ▁to ▁the ▁* ▁constructor ▁* ▁* ▁@ return ▁the ▁OfficeVisitBean ▁for ▁the ▁ovID ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁OfficeVisitBean ▁getOfficeVisit () ▁throw s ▁iTrustException ▁{ ▁return ▁ovDAO . getOfficeVisit ( ovID ); ▁} ▁/** ▁* ▁Returns ▁the ▁prescriptions ▁associate d ▁with ▁the ▁ovID ▁initial ly ▁passed ▁to ▁the ▁constructor ▁* ▁* ▁@ return ▁list ▁of ▁ PrescriptionBean s ▁for ▁the ▁ovID ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁List < PrescriptionBean > ▁ getPrescriptions () ▁throw s ▁DBException ▁{ ▁return ▁ovDAO . getPrescriptions ( ovID ); ▁} ▁/** ▁* ▁Returns ▁the ▁name ▁of ▁the ▁HCP ▁for ▁the ▁hcpID ▁passed ▁as ▁a ▁ param ▁* ▁* ▁@ param ▁hcpID ▁* ▁@ return ▁the ▁name ▁of ▁the ▁HCP ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁String ▁get HCPName ( long ▁hcpID ) ▁throw s ▁iTrustException ▁{ ▁String ▁name ▁= ▁null ; ▁try ▁{ ▁name ▁= ▁personnelDAO . getName ( hcpID ); ▁} ▁catch ▁( iTrustException ▁e ) ▁{ ▁e . print Stack T race (); ▁name ▁= ▁e . getMessage (); ▁} ▁return ▁name ; ▁} ▁}