▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁edu . nc su . cs c . itrust . RandomPassword ; ▁import ▁edu . nc su . cs c . itrust . beans . PatientBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PatientDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . AuthDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . Role ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁import ▁edu . nc su . cs c . itrust . validate . Add PatientValidator ; ▁/** ▁* ▁Used ▁for ▁Add ▁Patient ▁page ▁( addPatient . jsp ) . ▁This ▁just ▁add s ▁an ▁empty ▁patient , ▁create s ▁a ▁random ▁password ▁for ▁* ▁that ▁patient . ▁* ▁* ▁Ver y ▁similar ▁to ▁ {@ link ▁Add OfficeVisit Action } ▁* ▁* ▁@ author ▁Andy ▁Men e ely ▁* ▁*/ ▁public ▁class ▁ AddPatientAction ▁{ ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁PatientDAO ▁patientDAO ; ▁private ▁AuthDAO ▁authDAO ; ▁private ▁long ▁loggedInMID ; ▁/** ▁* ▁J ust ▁the ▁factory ▁and ▁logged ▁in ▁MID ▁* ▁* ▁@ param ▁factory ▁* ▁@ param ▁loggedInMID ▁*/ ▁public ▁ AddPatientAction ( DAOFactory ▁factory , ▁long ▁loggedInMID ) ▁{ ▁this . patientDAO ▁= ▁factory . get PatientDAO (); ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁this . loggedInMID ▁= ▁loggedInMID ; ▁this . authDAO ▁= ▁factory . get AuthDAO (); ▁} ▁/** ▁* ▁Create s ▁a ▁new ▁patient , ▁return s ▁the ▁new ▁MID . ▁Add s ▁a ▁new ▁user ▁to ▁the ▁table ▁a long ▁with ▁a ▁random ▁password . ▁* ▁* ▁@ return ▁the ▁new ▁MID ▁of ▁the ▁patient ▁* ▁@ throw s ▁DBException ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁long ▁ addPatient ( PatientBean ▁p ) ▁throw s ▁DBException , ▁ FormValidat ionException ▁{ ▁new ▁Add PatientValidator (). validate ( p ); ▁long ▁newMID ▁= ▁patientDAO . addEmpty Patient (); ▁p . set MID ( newMID ); ▁String ▁pwd ▁= ▁authDAO . add User ( newMID , ▁Role . PATIENT , ▁RandomPassword . get RandomPassword ()); ▁p . setPassword ( pwd ); ▁patientDAO . editPatient ( p ); ▁transDAO . log Transaction ( TransactionType . CRE ATE _ DISABLE _ PATIENT _ HCP , ▁loggedInMID , ▁newMID , ▁" New ▁Patient ▁Added "); ▁return ▁newMID ; ▁} ▁}