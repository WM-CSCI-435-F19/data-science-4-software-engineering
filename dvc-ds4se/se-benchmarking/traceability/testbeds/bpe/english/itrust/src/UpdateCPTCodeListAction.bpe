▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁edu . nc su . cs c . itrust . beans . ProcedureBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . CPTCodesDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁import ▁edu . nc su . cs c . itrust . validate . ProcedureBean Validator ; ▁/** ▁* ▁Updates ▁the ▁CPT ▁Code ▁( Med ical ▁Procedures ) ▁List ▁Used ▁by ▁edit CPT ProcedureCode s . jsp ▁* ▁* ▁The ▁CPT ▁code ▁set ▁a c cur ately ▁describe s ▁medical , ▁surg ical , ▁and ▁diagnos tic ▁services ▁* ▁and ▁is ▁designed ▁to ▁communicate ▁un i form ▁information ▁about ▁medical ▁services ▁and ▁procedures ▁* ▁amo ng ▁physician s , ▁code rs , ▁patients , ▁a c credit ation ▁org an iz ation s , ▁and ▁p ayers ▁for ▁administrative , ▁* ▁fina nc ial , ▁and ▁analy tical ▁purposes . ▁* ▁* ▁@ see ▁http :// w ww . ama - ass n . org / ama / pub / p hysician - resources / solution s - managing - your - pr act ice / co d ing - b ill ing - i nsurance / cpt / a b out - cpt . s html ▁* ▁@ author ▁ laure nha y ward ▁*/ ▁public ▁class ▁Update C PTCodeListAction ▁{ ▁private ▁long ▁loggedInMID ; ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁CPTCodesDAO ▁ cptDAO ; ▁private ▁ProcedureBean Validator ▁validator ▁= ▁new ▁ProcedureBean Validator (); ▁/** ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁administrator ▁who ▁is ▁updating ▁the ▁CPT s . ▁*/ ▁public ▁Update C PTCodeListAction ( DAOFactory ▁factory , ▁long ▁loggedInMID ) ▁{ ▁this . loggedInMID ▁= ▁loggedInMID ; ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁this . cptDAO ▁= ▁factory . get CPTCodesDAO (); ▁} ▁/** ▁* ▁Add s ▁a ▁new ▁cpt ▁code ▁( med ▁procedure ) ▁* ▁* ▁@ param ▁proc ▁* ▁ProcedureBean ▁that ▁hold s ▁the ▁new ▁cpt ▁code ▁* ▁@ return ▁status ▁message ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁String ▁add CPTCode ( ProcedureBean ▁proc ) ▁throw s ▁ FormValidat ionException ▁{ ▁validator . validate ( proc ); ▁try ▁{ ▁if ▁( cptDAO . add CPTCode ( proc )) ▁{ ▁transDAO . log Transaction ( TransactionType . MANA GE _ PROCEDURE _ CODE , ▁loggedInMID , ▁0 L , ▁" add ed ▁CPT ▁code ▁" ▁+ ▁proc . getCPTCode ()); ▁return ▁" Success : ▁" ▁+ ▁proc . getCPTCode () ▁+ ▁" ▁- ▁" ▁+ ▁proc . get Description () ▁+ ▁" ▁added "; ▁} ▁else ▁return ▁" The ▁database ▁has ▁become ▁corrupt . ▁P lease ▁contact ▁the ▁system ▁administrator ▁for ▁assi stance . "; ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁e . getMessage (); ▁} ▁catch ▁( iTrustException ▁e ) ▁{ ▁return ▁e . getMessage (); ▁} ▁} ▁/** ▁* ▁Updates ▁a ▁procedure ▁with ▁new ▁information ▁from ▁the ▁ProcedureBean ▁* ▁* ▁@ param ▁proc ▁* ▁ProcedureBean ▁with ▁new ▁information ▁( but ▁same ▁CPT ▁code ) ▁* ▁@ return ▁Status ▁message ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁String ▁update Information ( ProcedureBean ▁proc ) ▁throw s ▁ FormValidat ionException ▁{ ▁validator . validate ( proc ); ▁try ▁{ ▁int ▁rows ▁= ▁update Code ( proc ); ▁if ▁(0 ▁== ▁rows ) ▁{ ▁return ▁" Error : ▁Code ▁not ▁found . ▁To ▁edit ▁an ▁actual ▁code , ▁" ▁+ ▁" change ▁the ▁description ▁and ▁add ▁a ▁new ▁code ▁with ▁the ▁old ▁description "; ▁} ▁else ▁{ ▁transDAO . log Transaction ( TransactionType . MANA GE _ PROCEDURE _ CODE , ▁loggedInMID , ▁0 L , ▁" updated ▁CPT ▁code ▁" ▁+ ▁proc . getCPTCode ()); ▁return ▁" Success : ▁" ▁+ ▁rows ▁+ ▁" ▁row ( s ) ▁updated "; ▁} ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁e . getMessage (); ▁} ▁} ▁/** ▁* ▁Updates ▁the ▁cpt ▁code ▁* ▁* ▁@ param ▁proc ▁the ▁code ▁to ▁be ▁updated ▁* ▁@ return ▁updated ▁code ▁* ▁@ throw s ▁DBException ▁*/ ▁private ▁int ▁update Code ( ProcedureBean ▁proc ) ▁throw s ▁DBException ▁{ ▁return ▁ cptDAO . update Code ( proc ); ▁} ▁}