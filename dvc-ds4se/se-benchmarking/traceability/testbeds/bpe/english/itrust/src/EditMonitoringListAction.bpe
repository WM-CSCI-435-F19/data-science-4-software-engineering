▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . RemoteMonitoring DataBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . AuthDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . RemoteMonitoring DAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁/** ▁* ▁Handle s ▁changes ▁( add s ▁and ▁remove s ) ▁to ▁the ▁monitoring ▁list ▁for ▁a ▁certain ▁HCP . ▁* ▁*/ ▁public ▁class ▁Edit MonitoringList Action ▁{ ▁private ▁ RemoteMonitoring DAO ▁rmDAO ; ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁AuthDAO ▁authDAO ; ▁private ▁long ▁loggedInMID ; ▁/** ▁* ▁Constructor ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁HCP ▁editing ▁the ir ▁monitoring ▁list . ▁*/ ▁public ▁Edit MonitoringList Action ( DAOFactory ▁factory , ▁long ▁loggedInMID ) ▁{ ▁this . loggedInMID ▁= ▁loggedInMID ; ▁this . rmDAO ▁= ▁factory . get RemoteMonitoring DAO (); ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁this . authDAO ▁= ▁factory . get AuthDAO (); ▁} ▁/** ▁* ▁Add s ▁a ▁patient ▁to ▁the ▁current ▁HCP ' s ▁remote ▁monitoring ▁list ▁* ▁* ▁@ param ▁patientMID ▁the ▁patient ▁* ▁@ return ▁true ▁if ▁added ▁successfully . ▁Fal se ▁if ▁already ▁in ▁list . ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁boolean ▁add ToList ( long ▁patientMID ) ▁throw s ▁DBException ▁{ ▁transDAO . log Transaction ( TransactionType . T ELE MEDIC INE _ MONITORING , ▁loggedInMID , ▁patientMID , ▁" add "); ▁return ▁rmDAO . addPatient ToList ( patientMID , ▁loggedInMID ); ▁} ▁/** ▁* ▁Remove s ▁a ▁patient ▁from ▁the ▁current ▁HCP ' s ▁remote ▁monitoring ▁list ▁* ▁* ▁@ param ▁patientMID ▁the ▁patient ▁* ▁@ return ▁true ▁if ▁removed ▁successfully . ▁Fal se ▁if ▁not ▁in ▁list . ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁boolean ▁remove From List ( long ▁patientMID ) ▁throw s ▁DBException ▁{ ▁transDAO . log Transaction ( TransactionType . T ELE MEDIC INE _ MONITORING , ▁loggedInMID , ▁patientMID , ▁" delete "); ▁return ▁rmDAO . remove Patient From List ( patientMID , ▁loggedInMID ); ▁} ▁/** ▁* ▁Returns ▁whether ▁a ▁patient ▁is ▁in ▁an ▁HCP ' s ▁list ▁already ▁* ▁@ param ▁patientMID ▁the ▁patient ▁* ▁@ return ▁true ▁if ▁in ▁DB , ▁false ▁otherwise ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁boolean ▁is Patient In List ( long ▁patientMID ) ▁throw s ▁DBException ▁{ ▁List < RemoteMonitoring DataBean > ▁dataset ▁= ▁rmDAO . getPatient sData ( loggedInMID ); ▁for ( RemoteMonitoring DataBean ▁d : ▁dataset ) ▁{ ▁if ( d . get PatientMID () ▁== ▁patientMID ) ▁return ▁true ; ▁} ▁return ▁false ; ▁} ▁/** ▁* ▁return s ▁the ▁patient ▁name ▁* ▁* ▁@ return ▁patient ▁name ▁* ▁@ throw s ▁DBException ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁String ▁get PatientName ( long ▁pid ) ▁throw s ▁DBException , ▁iTrustException ▁{ ▁return ▁authDAO . getUserName ( pid ); ▁} ▁}