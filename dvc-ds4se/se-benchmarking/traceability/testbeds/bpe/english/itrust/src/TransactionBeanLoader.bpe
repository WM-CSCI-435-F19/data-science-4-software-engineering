▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . TransactionBean ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁/** ▁* ▁A ▁loader ▁for ▁TransactionBean s . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁TransactionBean Loader ▁implement s ▁BeanLoader < TransactionBean > ▁{ ▁public ▁List < TransactionBean > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁List < TransactionBean > ▁list ▁= ▁new ▁ArrayList < TransactionBean > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁TransactionBean ▁bean ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁public ▁TransactionBean ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁TransactionBean ▁t ▁= ▁new ▁TransactionBean (); ▁t . set A ddedInfo ( rs . get String (" a ddedInfo ")); ▁t . set LoggedInMID ( rs . getLong (" loggedInMID ")); ▁t . set S econdaryMID ( rs . getLong (" s econdaryMID ")); ▁t . set TimeLogged ( rs . get Timestamp (" timeLogged ")); ▁t . set TransactionType ( TransactionType . parse ( rs . getInt (" transaction Code ")) ); ▁t . set Transaction ID ( rs . getLong (" transactionID ")); ▁return ▁t ; ▁} ▁}