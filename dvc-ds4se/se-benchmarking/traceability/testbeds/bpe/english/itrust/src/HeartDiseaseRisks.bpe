▁p ackage ▁edu . nc su . cs c . itrust . risk ; ▁import ▁static ▁edu . nc su . cs c . itrust . enums . Ethnicity . AfricanAmerican ; ▁import ▁static ▁edu . nc su . cs c . itrust . enums . Ethnicity . AmericanIndian ; ▁import ▁static ▁edu . nc su . cs c . itrust . enums . Ethnicity . Hispanic ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . enums . Gender ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . No HealthRecords Exception ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . Age Factor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . C holesterolFactor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . EthnicityFactor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . FamilyHistory Factor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . Gender Factor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . Hy per te nsionFactor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . P atientRiskFactor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . PriorDiagnos is Factor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . SmokingFactor ; ▁import ▁edu . nc su . cs c . itrust . risk . factors . Weight Factor ; ▁/** ▁* ▁Check s ▁to ▁see ▁if ▁the ▁given ▁patient ▁is ▁at ▁risk ▁for ▁Heart ▁Disease ▁* ▁For ▁details ▁on ▁what ▁ each ▁method ▁does , ▁see ▁ {@ link ▁RiskChecker } ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁Heart DiseaseRisks ▁extends ▁RiskChecker ▁{ ▁public ▁Heart DiseaseRisks ( DAOFactory ▁factory , ▁long ▁patientID ) ▁throw s ▁DBException , ▁No HealthRecords Exception ▁{ ▁super ( factory , ▁patientID ); ▁} ▁@ O verride ▁public ▁boolean ▁qualifies For Disease () ▁{ ▁return ▁true ; ▁} ▁@ O verride ▁ protected ▁List < P atientRiskFactor > ▁getDisease RiskFactors () ▁{ ▁List < P atientRiskFactor > ▁factors ▁= ▁new ▁ArrayList < P atientRiskFactor > (); ▁factors . add ( new ▁GenderFactor ( patient , ▁Gender . Male )); ▁factors . add ( new ▁AgeFactor ( patient , ▁ 45 )); ▁factors . add ( new ▁EthnicityFactor ( patient , ▁ Hispanic , ▁ AfricanAmerican , ▁ AmericanIndian )); ▁factors . add ( new ▁WeightFactor ( current HealthRecord , ▁30 )); ▁factors . add ( new ▁Hyperte nsionFactor ( current HealthRecord )); ▁factors . add ( new ▁C holesterolFactor ( current HealthRecord )); ▁factors . add ( new ▁ SmokingFactor ( factory , ▁patient . get MID ()) ); ▁factors . add ( new ▁Prio rDiagnosisFactor ( factory , ▁patient . get MID (), ▁250.0 , ▁251.0 )); ▁factors . add ( new ▁Family HistoryFactor ( factory , ▁patient . get MID (), ▁350 . 0 , ▁4 6 0 . 0 )); ▁return ▁factors ; ▁} ▁@ O verride ▁public ▁String ▁getName () ▁{ ▁return ▁" Heart ▁Disease "; ▁} ▁}