▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . ProcedureBean ; ▁/** ▁* ▁A ▁loader ▁for ▁ProcedureBean s . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁ProcedureBean Loader ▁implement s ▁BeanLoader < ProcedureBean > ▁{ ▁private ▁boolean ▁l oadOVProcedureID ; ▁public ▁ProcedureBean Loader () ▁{ ▁this . l oadOVProcedureID ▁= ▁false ; ▁} ▁public ▁ProcedureBean Loader ( boolean ▁l oadOVProcedureID ) ▁{ ▁this . l oadOVProcedureID ▁= ▁l oadOVProcedureID ; ▁} ▁public ▁List < ProcedureBean > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ArrayList < ProcedureBean > ▁list ▁= ▁new ▁ArrayList < ProcedureBean > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁ProcedureBean ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ProcedureBean ▁procedure ▁= ▁new ▁ProcedureBean ( rs . get String (" Code ")); ▁procedure . set Description ( rs . get String (" Description ")); ▁procedure . set Attribute ( rs . get String (" Attribute ")); ▁if ▁( l oadOVProcedureID ) ▁{ ▁procedure . setOv ProcedureID ( rs . getLong (" ID ")); ▁procedure . setDate ( rs . getDate (" visitDate ")); ▁} ▁return ▁procedure ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁ProcedureBean ▁bean ) ▁throw s ▁SQLException ▁{ ▁ps . set String ( 1, ▁bean . get Description ()); ▁return ▁ps ; ▁} ▁}