▁p ackage ▁edu . nc su . cs c . itrust . validate ; ▁import ▁edu . nc su . cs c . itrust . action . Add RemoteMonitoring DataAction ; ▁import ▁edu . nc su . cs c . itrust . beans . RemoteMonitoring DataBean ; ▁import ▁edu . nc su . cs c . itrust . exception . ErrorList ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁/** ▁* ▁ Validator ▁used ▁to ▁validate ▁adding ▁new ▁remote ▁monitoring ▁data ▁in ▁ {@ link ▁Add RemoteMonitoring DataAction } ▁* ▁*/ ▁public ▁class ▁ RemoteMonitoring DataBean Validator ▁extends ▁ BeanValidator < RemoteMonitoring DataBean > ▁{ ▁/** ▁* ▁The ▁default ▁constructor . ▁*/ ▁public ▁ RemoteMonitoring DataBean Validator () ▁{ ▁} ▁/** ▁* ▁Perform s ▁the ▁act ▁of ▁validat ing ▁the ▁bean ▁in ▁question , ▁which ▁varie s ▁depend ing ▁on ▁the ▁* ▁type ▁of ▁validator . ▁If ▁the ▁validation ▁does ▁not ▁succeed , ▁a ▁ {@ link ▁ FormValidat ionException } ▁is ▁thrown . ▁* ▁* ▁@ param ▁p ▁A ▁bean ▁of ▁the ▁type ▁to ▁be ▁validated . ▁*/ ▁@ O verride ▁public ▁void ▁validate ( RemoteMonitoring DataBean ▁m ) ▁throw s ▁ FormValidat ionException ▁{ ▁ErrorList ▁errorList ▁= ▁new ▁ErrorList (); ▁errorList . add If Not Null ( check Format (" Systolic ▁Blood ▁Pressure ", ▁"" ▁+ ▁m . get Systolic BloodPressure (), ▁ ValidationFormat . SYST OLIC _ BLOOD _ PRESSURE , ▁false )); ▁errorList . add If Not Null ( check Format (" Diastolic ▁Blood ▁Pressure ", ▁"" ▁+ ▁m . get Diastolic BloodPressure (), ▁ ValidationFormat . DIA ST OLIC _ BLOOD _ PRESSURE , ▁false )); ▁errorList . add If Not Null ( check Format (" Glucose ▁Level ", ▁"" ▁+ ▁m . getG lucoseLevel (), ▁ ValidationFormat . GL UC OSE _ LEVEL , ▁false )); ▁if ▁( errorList . has Errors ()){ ▁throw ▁new ▁ FormValidat ionException ( errorList ); ▁} ▁} ▁}