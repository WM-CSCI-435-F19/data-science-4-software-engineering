▁p ackage ▁edu . nc su . cs c . itrust . beans ; ▁import ▁java . sql . Timestamp ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁/** ▁* ▁A ▁bean ▁for ▁stor ing ▁data ▁about ▁ Fake ▁Emails . ▁* ▁* ▁A ▁bean ' s ▁purpose ▁is ▁to ▁store ▁data . ▁P eriod . ▁Li t tle ▁or ▁no ▁functionality ▁is ▁to ▁be ▁added ▁to ▁a ▁bean ▁* ▁( with ▁the ▁exception ▁of ▁minor ▁formatt ing ▁suc h ▁as ▁con cate nating ▁phone ▁numbers ▁together ) . ▁* ▁A ▁bean ▁must ▁only ▁have ▁Get ters ▁and ▁Setters ▁( E cli pse ▁H int : ▁Use ▁Source ▁> ▁Generate ▁Get ters ▁and ▁Setters  ▁* ▁to ▁create ▁these ▁easily ) ▁*/ ▁public ▁class ▁Email ▁{ ▁private ▁List < String > ▁toList ▁= ▁new ▁ArrayList < String > (); ▁private ▁String ▁from ▁= ▁""; ▁private ▁String ▁subject ▁= ▁""; ▁private ▁String ▁body ▁= ▁""; ▁private ▁Timestamp ▁timeAdded ; ▁public ▁List < String > ▁ getToList () ▁{ ▁return ▁toList ; ▁} ▁public ▁void ▁set ToList ( List < String > ▁toList ) ▁{ ▁this . toList ▁= ▁toList ; ▁} ▁public ▁String ▁ getToList Str () ▁{ ▁String ▁str ▁= ▁""; ▁for ▁( String ▁addr ▁: ▁toList ) ▁{ ▁str ▁+= ▁addr ▁+ ▁"," ; ▁} ▁return ▁str . substring (0, ▁str . length () ▁- ▁1); ▁} ▁public ▁String ▁get From () ▁{ ▁return ▁from ; ▁} ▁public ▁void ▁set From ( String ▁from ) ▁{ ▁this . from ▁= ▁from ; ▁} ▁public ▁String ▁get Subject () ▁{ ▁return ▁subject ; ▁} ▁public ▁void ▁set Subject ( String ▁subject ) ▁{ ▁this . subject ▁= ▁subject ; ▁} ▁public ▁String ▁ getBody () ▁{ ▁return ▁body ; ▁} ▁public ▁void ▁set Body ( String ▁body ) ▁{ ▁this . body ▁= ▁body ; ▁} ▁public ▁Timestamp ▁ getTime Added () ▁{ ▁return ▁timeAdded ; ▁} ▁public ▁void ▁ setTime Added ( Timestamp ▁timeAdded ) ▁{ ▁this . time Added ▁= ▁timeAdded ; ▁} ▁@ O verride ▁public ▁boolean ▁equals ( Object ▁obj ) ▁{ ▁return ▁obj ▁ != ▁null ▁&& ▁obj . getClass (). equals ( this . getClass ()) ▁&& ▁this . equals ( ( Email ) ▁obj ); ▁} ▁@ O verride ▁public ▁int ▁ hashCode () ▁{ ▁assert ▁false ▁: ▁" hashCode ▁not ▁designed "; ▁return ▁42 ; ▁// ▁any ▁ arbitrary ▁const ant ▁will ▁do ▁} ▁private ▁boolean ▁equals ( Email ▁other ) ▁{ ▁return ▁from . equals ( other . from ) ▁&& ▁subject . equals ( other . subject ) ▁&& ▁body . equals ( other . body ) ▁&& ▁list E q ual s ( toList , ▁other . toList ); ▁} ▁private ▁boolean ▁list E q ual s ( List < String > ▁toList , ▁List < String > ▁other ToList ) ▁{ ▁if ▁( toList . size () ▁ != ▁other ToList . size ()) ▁return ▁false ; ▁for ▁( int ▁i ▁= ▁0; ▁i ▁< ▁toList . size (); ▁i ++) ▁{ ▁if ▁(! toList . get ( i ) . equals ( other ToList . get ( i ))) ▁return ▁false ; ▁} ▁return ▁true ; ▁} ▁@ O verride ▁public ▁String ▁to String () ▁{ ▁return ▁" FROM : ▁" ▁+ ▁from ▁+ ▁" ▁ TO : ▁" ▁+ ▁toList . to String () ▁+ ▁" ▁ SUBJECT : ▁" ▁+ ▁subject ▁+ ▁" ▁ BODY : ▁" ▁+ ▁body ; ▁} ▁}