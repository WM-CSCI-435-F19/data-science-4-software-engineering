▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . LOINCbean ; ▁/** ▁* ▁A ▁loader ▁for ▁LOINC Bean s . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁LOINCBeanLoader ▁implement s ▁BeanLoader < LOINCbean > ▁{ ▁public ▁List < LOINCbean > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ArrayList < LOINCbean > ▁list ▁= ▁new ▁ArrayList < LOINCbean > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁LOINCbean ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁LOINCbean ▁LOINC ▁= ▁new ▁LOINCbean (); ▁LOINC . set LabProcedureCode ( rs . get String (" Laboratory ProcedureCode ")); ▁LOINC . set Component ( rs . get String (" Component ")); ▁LOINC . set KindOfProperty ( rs . get String (" KindOfProperty ")); ▁LOINC . set TimeAspect ( rs . get String (" TimeAspect ")); ▁LOINC . set System ( rs . get String (" System ")); ▁LOINC . set ScaleType ( rs . get String (" ScaleType ")); ▁LOINC . set MethodType ( rs . get String (" MethodType ")); ▁return ▁LOINC ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁LOINCbean ▁bean ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁}