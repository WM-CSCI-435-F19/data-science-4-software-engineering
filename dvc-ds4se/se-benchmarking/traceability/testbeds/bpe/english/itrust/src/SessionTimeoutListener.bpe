▁p ackage ▁edu . nc su . cs c . itrust . server ; ▁import ▁java x . s ervlet . http . Ht t p S es s ion ; ▁import ▁java x . s ervlet . http . HttpSessionEvent ; ▁import ▁java x . s ervlet . http . Ht t p S es s ion List en er ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁/** ▁* ▁A ▁listen er ▁which ▁will ▁time ▁the ▁user ▁out ▁after ▁a ▁pre - specified ▁time ▁limit . ▁*/ ▁public ▁class ▁Session TimeoutListener ▁implement s ▁HttpSession List en er ▁{ ▁private ▁DAOFactory ▁factory ; ▁/** ▁* ▁The ▁default ▁constructor . ▁*/ ▁public ▁Session TimeoutListener () ▁{ ▁this . factory ▁= ▁DAOFactory . getPr oductionInstance (); ▁} ▁/** ▁* ▁The ▁special ized ▁constructor , ▁which ▁takes ▁a ▁particular ▁DAOFactory ▁to ▁be ▁used ▁when ▁checking ▁for ▁the ▁pre - specified ▁* ▁timeout ▁limit . ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁to ▁be ▁used . ▁*/ ▁public ▁Session TimeoutListener ( DAOFactory ▁factory ) ▁{ ▁this . factory ▁= ▁factory ; ▁} ▁/** ▁* ▁Call ed ▁when ▁the ▁HttpSession ▁is ▁created , ▁this ▁method ▁pull s ▁the ▁pre - specified ▁limit ▁from ▁the ▁* ▁database ▁and ▁sets ▁it ▁as ▁a ▁proper ty ▁of ▁the ▁HttpSession . ▁* ▁@ param ▁arg 0 ▁The ▁HttpSession E ve n ▁which ▁just ▁occurred . ▁*/ ▁public ▁void ▁session Create d ( HttpSessionEvent ▁arg 0 ) ▁{ ▁HttpSession ▁session ▁= ▁arg 0 . getSession (); ▁int ▁mins ▁= ▁20 ; ▁try ▁{ ▁mins ▁= ▁factory . get AccessDAO (). get SessionTimeout Min s (); ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁System . err . print ln (" U nable ▁to ▁set ▁session ▁timeout , ▁default ing ▁to ▁20 ▁minutes "); ▁e . print Stack T race (); ▁} ▁if ▁( min s ▁< ▁1) ▁mins ▁= ▁1; ▁session . set Max In act ive Int er val ( min s ▁* ▁60 ); ▁} ▁/** ▁* ▁M ust ▁be ▁declared ▁for ▁compl i ance ▁with ▁the ▁interface . ▁Not ▁implemented . ▁*/ ▁public ▁void ▁session D est ro y ed ( HttpSessionEvent ▁arg 0 ) ▁{ ▁// ▁nothing ▁to ▁do ▁here ▁} ▁}