▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . HealthRecord ; ▁/** ▁* ▁A ▁loader ▁for ▁HealthRecords . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁HealthRecords BeanLoader ▁implement s ▁BeanLoader < HealthRecord > ▁{ ▁public ▁List < HealthRecord > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ArrayList < HealthRecord > ▁list ▁= ▁new ▁ArrayList < HealthRecord > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁HealthRecord ▁bean ) ▁throw s ▁SQLException ▁{ ▁int ▁i ▁= ▁1; ▁ps . s etLong ( i ++ , ▁bean . getPatientID ()); ▁ps . set Double ( i ++ , ▁bean . get Height ()); ▁ps . set Double ( i ++ , ▁bean . get Weight ()); ▁ps . set Int ( i ++ , ▁bean . isSmoker () ▁? ▁1 ▁: ▁0); ▁ps . set Int ( i ++ , ▁bean . get BloodPressureN ()); ▁ps . set Int ( i ++ , ▁bean . get BloodPressureD ()); ▁ps . set Int ( i ++ , ▁bean . get CholesterolHDL ()); ▁ps . set Int ( i ++ , ▁bean . get CholesterolLDL ()); ▁ps . set Int ( i ++ , ▁bean . get CholesterolTri ()); ▁ps . s etLong ( i ++ , ▁bean . getPersonnelID ()); ▁return ▁ps ; ▁} ▁public ▁HealthRecord ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁HealthRecord ▁hr ▁= ▁new ▁HealthRecord (); ▁hr . set BloodPressureN ( rs . getInt (" BloodPressureN ")); ▁hr . set BloodPressureD ( rs . getInt (" BloodPressureD ")); ▁hr . set CholesterolHDL ( rs . getInt (" CholesterolHDL ")); ▁hr . set CholesterolLDL ( rs . getInt (" CholesterolLDL ")); ▁hr . set CholesterolTri ( rs . getInt (" CholesterolTri ")); ▁hr . setDate Recorded ( rs . get Timestamp (" A s Of Date ")); ▁hr . set Smoker ( rs . getInt (" Smoker ") ▁== ▁1); ▁hr . setHeight ( rs . get Double (" Height ")); ▁hr . set Weight ( rs . get Double (" Weight ")); ▁hr . s etPersonnelID ( rs . getLong (" HCPID ")); ▁hr . set PatientID ( rs . getLong (" PatientID ")); ▁return ▁hr ; ▁} ▁}