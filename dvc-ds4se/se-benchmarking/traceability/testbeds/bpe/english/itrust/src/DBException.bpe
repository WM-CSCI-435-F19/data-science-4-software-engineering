▁p ackage ▁edu . nc su . cs c . itrust . exception ; ▁import ▁java . sql . SQLException ; ▁/** ▁* ▁The ▁reason ing ▁be h in d ▁this ▁wrap per ▁exception ▁is ▁security . ▁When ▁an ▁SQL ▁Exception ▁gets ▁thrown ▁all ▁the ▁way ▁back ▁* ▁to ▁the ▁JSP , ▁we ▁begin ▁to ▁re ve al ▁details ▁about ▁our ▁database ▁( ev en ▁know ing ▁that ▁it ' s ▁My SQL ▁is ▁bad ! ) ▁S o , ▁we ▁* ▁make ▁a ▁wrap per ▁exception ▁with ▁a ▁va g ue ▁description , ▁but ▁we ▁also ▁keep ▁ tr ack ▁of ▁the ▁SQL ▁Exception ▁for ▁* ▁debug g ing ▁and ▁testing ▁purposes . ▁* ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁DBException ▁extends ▁iTrustException ▁{ ▁private ▁static ▁final ▁long ▁serial Version UID ▁= ▁- 65 5 4 1 18 5 10 5 901 18 376 L ; ▁private ▁SQLException ▁sqlException ▁= ▁null ; ▁public ▁DBException ( SQLException ▁e ) ▁{ ▁super (" A ▁database ▁exception ▁has ▁occurred . ▁P lease ▁see ▁the ▁log ▁in ▁the ▁con s ol e ▁for ▁stack t race "); ▁this . sql Exception ▁= ▁e ; ▁} ▁/** ▁* ▁@ return ▁The ▁SQL ▁Exception ▁that ▁was ▁responsible ▁for ▁this ▁error . ▁*/ ▁public ▁SQLException ▁get SQLException () ▁{ ▁return ▁sqlException ; ▁} ▁@ O verride ▁public ▁String ▁get E xtended Message () ▁{ ▁if ▁( sql Exception ▁ != ▁null ) ▁return ▁sqlException . getMessage (); ▁else ▁return ▁super . get E xtended Message (); ▁} ▁}