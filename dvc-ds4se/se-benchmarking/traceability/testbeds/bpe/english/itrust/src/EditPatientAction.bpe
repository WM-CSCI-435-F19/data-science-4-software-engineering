▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . action . base . P atientBaseAction ; ▁import ▁edu . nc su . cs c . itrust . beans . Email ; ▁import ▁edu . nc su . cs c . itrust . beans . PatientBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PatientDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁import ▁edu . nc su . cs c . itrust . validate . PatientValidator ; ▁import ▁edu . nc su . cs c . itrust . EmailUtil ; ▁/** ▁* ▁Edit s ▁a ▁patient ▁Used ▁by ▁ editPatient . jsp ▁* ▁* ▁@ author ▁ laure nha y ward ▁* ▁*/ ▁public ▁class ▁E ditPatientAction ▁extends ▁P atientBaseAction ▁{ ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁ PatientValidator ▁validator ▁= ▁new ▁ PatientValidator (); ▁private ▁PatientDAO ▁patientDAO ; ▁private ▁long ▁loggedInMID ; ▁private ▁EmailUtil ▁emailutil ; ▁/** ▁* ▁The ▁super ▁class ▁validate s ▁the ▁patient ▁id ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁for ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁user ▁who ▁is ▁authoriz ing ▁this ▁action . ▁* ▁@ param ▁pidString ▁The ▁MID ▁of ▁the ▁patient ▁being ▁edited . ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁E ditPatientAction ( DAOFactory ▁factory , ▁long ▁loggedInMID , ▁String ▁pidString ) ▁throw s ▁iTrustException ▁{ ▁super ( factory , ▁pidString ); ▁this . patientDAO ▁= ▁factory . get PatientDAO (); ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁this . loggedInMID ▁= ▁loggedInMID ; ▁emailutil ▁= ▁new ▁EmailUtil ( factory ); ▁} ▁/** ▁* ▁T akes ▁the ▁information ▁out ▁of ▁the ▁PatientBean ▁ param ▁and ▁update s ▁the ▁patient ' s ▁information ▁* ▁* ▁@ param ▁p ▁* ▁the ▁new ▁patient ▁information ▁* ▁@ throw s ▁iTrustException ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁void ▁update Information ( PatientBean ▁p ) ▁throw s ▁iTrustException , ▁ FormValidat ionException ▁{ ▁p . set MID ( pid ); ▁// ▁for ▁security ▁reasons ▁validator . validate ( p ); ▁patientDAO . editPatient ( p ); ▁transDAO . log Transaction ( TransactionType . E NTER _ EDIT _ DEMOGRAPHICS , ▁loggedInMID , ▁pid , ▁" Edit Patient ▁- ▁Ma de ▁Changes "); ▁emailutil . sendEmail ( makeEmail ()); ▁} ▁/** ▁* ▁Returns ▁a ▁PatientBean ▁for ▁the ▁patient ▁* ▁* ▁@ return ▁the ▁PatientBean ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁PatientBean ▁getPatient () ▁throw s ▁DBException ▁{ ▁transDAO . log Transaction ( TransactionType . E NTER _ EDIT _ DEMOGRAPHICS , ▁loggedInMID , ▁pid , ▁" Edit Patient ▁- ▁View ▁Patient "); ▁return ▁patientDAO . getPatient ( this . get Pid ()); ▁} ▁/** ▁* ▁Create s ▁and ▁e - mail ▁to ▁in form ▁the ▁patient ▁that ▁the ir ▁information ▁has ▁been ▁updated . ▁* ▁* ▁@ return ▁the ▁email ▁with ▁the ▁notice ▁* ▁@ throw s ▁DBException ▁*/ ▁private ▁Email ▁makeEmail () ▁throw s ▁DBException { ▁Email ▁email ▁= ▁new ▁Email (); ▁List < PatientBean > ▁reps ▁= ▁patientDAO . get Representing ( pid ); ▁PatientBean ▁pb ▁= ▁patientDAO . getPatient ( pid ); ▁List < String > ▁toAddrs ▁= ▁new ▁ArrayList < String > (); ▁toAddrs . add ( pb . getEmail ()); ▁for ▁( PatientBean ▁r : ▁reps ) ▁{ ▁toAddrs . add ( r . getEmail ()); ▁} ▁email . set From (" no - reply @ itrust . com "); ▁email . s etToList ( toAddrs ); ▁// ▁patient ▁and ▁personal ▁representative ▁email . set Subject ( String . format (" Patient ▁Information ▁Updated ")); ▁email . s etBody (" Dea r ▁" ▁+ ▁pb . getF ullName () ▁+ ▁" , \ n \ t You r ▁patient ▁record ▁information ▁has ▁been ▁updated . ▁" ▁+ ▁" P lease ▁login ▁to ▁iTrust ▁to ▁see ▁who ▁has ▁viewed ▁your ▁records . "); ▁return ▁email ; ▁} ▁public ▁void ▁edit MessageFilter ( String ▁filter ) ▁throw s ▁iTrustException , ▁ FormValidat ionException ▁{ ▁PatientBean ▁b ▁= ▁this . getPatient (); ▁b . set MessageFilter ( filter ); ▁this . update Information ( b ); ▁} ▁}