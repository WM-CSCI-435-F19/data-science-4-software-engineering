▁p ackage ▁edu . nc su . cs c . itrust . beans ; ▁import ▁java . sql . Timestamp ; ▁/** ▁* ▁A ▁bean ▁for ▁stor ing ▁data ▁about ▁a ▁lab ▁procedure . ▁* ▁* ▁A ▁bean ' s ▁purpose ▁is ▁to ▁store ▁data . ▁P eriod . ▁Li t tle ▁or ▁no ▁functionality ▁is ▁to ▁be ▁added ▁to ▁a ▁bean ▁* ▁( with ▁the ▁exception ▁of ▁minor ▁formatt ing ▁suc h ▁as ▁con cate nating ▁phone ▁numbers ▁together ) . ▁* ▁A ▁bean ▁must ▁only ▁have ▁Get ters ▁and ▁Setters ▁( E cli pse ▁H int : ▁Use ▁Source ▁> ▁Generate ▁Get ters ▁and ▁Setters  ▁* ▁to ▁create ▁these ▁easily ) ▁*/ ▁public ▁class ▁ LabProcedureBean ▁{ ▁public ▁final ▁static ▁String ▁Not _ Received ▁= ▁" NOT ▁ YET ▁RECEIVED "; ▁public ▁final ▁static ▁String ▁Pending ▁= ▁" PENDING "; ▁public ▁final ▁static ▁String ▁ Completed ▁= ▁" COMPLETED "; ▁public ▁final ▁static ▁String ▁Allow ▁= ▁" ALLOWED "; ▁public ▁final ▁static ▁String ▁Restrict ▁= ▁" RESTRICTED "; ▁/** ▁* ▁U nique ▁10 - digit ▁number ▁that ▁does ▁not ▁start ▁with ▁ 9 ▁*/ ▁private ▁long ▁pid ; ▁/** ▁* ▁U nique ▁identifier ▁for ▁a ▁l aboratory ▁procedure ▁of ▁a ▁patient ▁*/ ▁private ▁long ▁procedureID ; ▁/** ▁* ▁ Digits ▁of ▁the ▁format ▁n nnnn - n ▁*/ ▁private ▁String ▁loinc ; ▁/** ▁* ▁One ▁of ▁( NOT ▁ YET ▁RECEIVED , ▁ PENDING , ▁ COMPLETED ) ▁*/ ▁private ▁String ▁status ; ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁private ▁String ▁commentary ; ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁private ▁String ▁results ; ▁/** ▁* ▁Office ▁VisitID ▁Identifier ▁that ▁specifie s ▁the ▁office ▁visit ▁in ▁* ▁which ▁the ▁l aboratory ▁procedure ▁was ▁ordered ▁*/ ▁private ▁long ▁ovID ; ▁/** ▁* ▁Date / Time ▁of ▁last ▁status ▁update ▁Timestamp ▁*/ ▁private ▁Timestamp ▁timestamp ; ▁/** ▁* ▁permission ▁grant ed ▁by ▁l hcp ▁who ▁ordered ▁test : ▁* ▁" ALLOWED ", ▁" RESTRICTED " ▁*/ ▁private ▁String ▁rights ▁= ▁Allow ; ▁public ▁ LabProcedureBean ( ){ ▁} ▁/** ▁* ▁U nique ▁10 - digit ▁number ▁that ▁does ▁not ▁start ▁with ▁ 9 ▁*/ ▁public ▁long ▁get Pid () ▁{ ▁return ▁pid ; ▁} ▁/** ▁* ▁U nique ▁10 - digit ▁number ▁that ▁does ▁not ▁start ▁with ▁ 9 ▁*/ ▁public ▁void ▁set Pid ( long ▁pid ) ▁{ ▁this . pid ▁= ▁pid ; ▁} ▁/** ▁* ▁U nique ▁identifier ▁for ▁a ▁l aboratory ▁procedure ▁of ▁a ▁patient ▁*/ ▁public ▁long ▁get ProcedureID () ▁{ ▁return ▁procedureID ; ▁} ▁/** ▁* ▁U nique ▁identifier ▁for ▁a ▁l aboratory ▁procedure ▁of ▁a ▁patient ▁*/ ▁public ▁void ▁set ProcedureID ( long ▁procedureID ) ▁{ ▁this . procedure ID ▁= ▁procedureID ; ▁} ▁/** ▁* ▁ Digits ▁of ▁the ▁format ▁n nnnn - n ▁*/ ▁public ▁String ▁ getLo inc () ▁{ ▁return ▁loinc ; ▁} ▁/** ▁* ▁ Digits ▁of ▁the ▁format ▁n nnnn - n ▁*/ ▁public ▁void ▁set L oi nc ( String ▁loinc ) ▁{ ▁this . loinc ▁= ▁loinc ; ▁} ▁/** ▁* ▁One ▁of ▁( NOT ▁ YET ▁RECEIVED , ▁ PENDING , ▁ COMPLETED ) ▁*/ ▁public ▁String ▁get Status () ▁{ ▁return ▁status ; ▁} ▁/** ▁* ▁One ▁of ▁( NOT ▁ YET ▁RECEIVED , ▁ PENDING , ▁ COMPLETED ) ▁*/ ▁public ▁void ▁set Status ( String ▁status ) ▁{ ▁this . status ▁= ▁status ; ▁} ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁public ▁String ▁get Commentary () ▁{ ▁return ▁commentary ; ▁} ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁public ▁void ▁set Commentary ( String ▁commentary ) ▁{ ▁this . comment ary ▁= ▁commentary ; ▁} ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁public ▁String ▁get Results () ▁{ ▁return ▁results ; ▁} ▁/** ▁* ▁Up ▁to ▁500 ▁alphanumeric ▁characters ▁*/ ▁public ▁void ▁set Results ( String ▁results ) ▁{ ▁this . results ▁= ▁results ; ▁} ▁/** ▁* ▁Office ▁VisitID ▁Identifier ▁that ▁specifie s ▁the ▁office ▁visit ▁in ▁* ▁which ▁the ▁l aboratory ▁procedure ▁was ▁ordered ▁*/ ▁public ▁long ▁ getOv ID () ▁{ ▁return ▁ovID ; ▁} ▁/** ▁* ▁Office ▁VisitID ▁Identifier ▁that ▁specifie s ▁the ▁office ▁visit ▁in ▁* ▁which ▁the ▁l aboratory ▁procedure ▁was ▁ordered ▁*/ ▁public ▁void ▁setOv ID ( long ▁ovID ) ▁{ ▁this . ovID ▁= ▁ovID ; ▁} ▁public ▁Timestamp ▁get Timestamp () ▁{ ▁return ▁timestamp ; ▁} ▁public ▁void ▁set Timestamp ( Timestamp ▁timestamp ) ▁{ ▁this . timestamp ▁= ▁timestamp ; ▁} ▁/** ▁* ▁permission ▁grant ed ▁by ▁l hcp ▁who ▁ordered ▁test : ▁* ▁" ALLOWED ", ▁" RESTRICTED " ▁*/ ▁public ▁String ▁get Rights () ▁{ ▁return ▁rights ; ▁} ▁/** ▁* ▁permission ▁grant ed ▁by ▁l hcp ▁who ▁ordered ▁test : ▁* ▁" ALLOWED ", ▁" RESTRICTED " ▁*/ ▁public ▁void ▁set Rights ( String ▁rights ) ▁{ ▁this . right s ▁= ▁rights ; ▁} ▁public ▁void ▁allow ( ){ ▁this . right s ▁= ▁Allow ; ▁} ▁public ▁void ▁ restrict ( ){ ▁this . right s ▁= ▁Restrict ; ▁} ▁public ▁void ▁status Complete ( ){ ▁this . status ▁= ▁ Completed ; ▁} ▁public ▁void ▁status Pending ( ){ ▁this . status ▁= ▁Pending ; ▁} ▁public ▁void ▁status Not Received ( ){ ▁this . status ▁= ▁Not _ Received ; ▁} ▁}