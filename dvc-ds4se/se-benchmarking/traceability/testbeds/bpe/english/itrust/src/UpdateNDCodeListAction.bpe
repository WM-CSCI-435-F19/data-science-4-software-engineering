▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁edu . nc su . cs c . itrust . beans . MedicationBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . NDCodesDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁import ▁edu . nc su . cs c . itrust . validate . MedicationBean Validator ; ▁/** ▁* ▁Handle s ▁updating ▁the ▁ND ▁Code ▁( Prescription ) ▁List ▁Used ▁by ▁edit NDCodes . jsp ▁* ▁* ▁The ▁N ational ▁Drug ▁Code ▁( NDC ) ▁is ▁a ▁universal ▁product ▁identifier ▁used ▁in ▁the ▁* ▁Unit ed ▁State s ▁for ▁drugs ▁intended ▁for ▁human ▁use . ▁* ▁* ▁@ see ▁http :// w ww . fd a . g ov / Drugs / Information On Drugs / u cm 1 424 38 . htm ▁* ▁@ author ▁ laure nha y ward ▁*/ ▁public ▁class ▁Update NDCodeListAction ▁{ ▁private ▁long ▁performerID ▁= ▁0; ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁NDCodesDAO ▁ndDAO ; ▁private ▁MedicationBean Validator ▁validator ▁= ▁new ▁MedicationBean Validator (); ▁/** ▁* ▁Set ▁up ▁defaults . ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁performerID ▁The ▁MID ▁of ▁the ▁user ▁updating ▁the ▁ND ▁list s . ▁*/ ▁public ▁Update NDCodeListAction ( DAOFactory ▁factory , ▁long ▁performerID ) ▁{ ▁this . performerID ▁= ▁performerID ; ▁ndDAO ▁= ▁factory . get NDCodesDAO (); ▁transDAO ▁= ▁factory . get TransactionDAO (); ▁} ▁/** ▁* ▁Add s ▁a ▁new ▁ND ▁Code ▁( prescription ) ▁to ▁the ▁list ▁* ▁* ▁@ param ▁med ▁* ▁The ▁new ▁ND ▁Code ▁to ▁be ▁added ▁* ▁@ return ▁Status ▁message ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁String ▁add NDCode ( MedicationBean ▁med ) ▁throw s ▁ FormValidat ionException ▁{ ▁validator . validate ( med ); ▁try ▁{ ▁if ▁( n d DAO . add NDCode ( med )) ▁{ ▁transDAO . log Transaction ( TransactionType . MANA GE _ DRUG _ CODE , ▁performerID , ▁0 L , ▁" add ed ▁ND ▁code ▁" ▁+ ▁med . getNDCode ()); ▁return ▁" Success : ▁" ▁+ ▁med . getNDCode () ▁+ ▁" ▁- ▁" ▁+ ▁med . get Description () ▁+ ▁" ▁added "; ▁} ▁else ▁return ▁" The ▁database ▁has ▁become ▁corrupt . ▁P lease ▁contact ▁the ▁system ▁administrator ▁for ▁assi stance . "; ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁e . getMessage (); ▁} ▁catch ▁( iTrustException ▁e ) ▁{ ▁return ▁e . getMessage (); ▁} ▁} ▁/** ▁* ▁Updates ▁the ▁ND ▁Code ▁with ▁new ▁information ▁from ▁the ▁MedicationBean ▁* ▁* ▁@ param ▁med ▁* ▁the ▁MedicationBean ▁that ▁hold s ▁new ▁information ▁but ▁the ▁same ▁code ▁* ▁@ return ▁status ▁message ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁String ▁update Information ( MedicationBean ▁med ) ▁throw s ▁ FormValidat ionException ▁{ ▁validator . validate ( med ); ▁try ▁{ ▁int ▁rows ▁= ▁update Code ( med ); ▁if ▁(0 ▁== ▁rows ) ▁{ ▁return ▁" Error : ▁Code ▁not ▁found . "; ▁} ▁else ▁{ ▁transDAO . log Transaction ( TransactionType . MANA GE _ DRUG _ CODE , ▁performerID , ▁0 L , ▁" updated ▁ND ▁code ▁" ▁+ ▁med . getNDCode ()); ▁return ▁" Success : ▁" ▁+ ▁rows ▁+ ▁" ▁row ( s ) ▁updated "; ▁} ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁e . getMessage (); ▁} ▁} ▁/** ▁* ▁Medication ▁information ▁should ▁already ▁be ▁validated ▁* ▁* ▁@ param ▁med ▁* ▁@ return ▁* ▁@ throw s ▁DBException ▁*/ ▁private ▁int ▁update Code ( MedicationBean ▁med ) ▁throw s ▁DBException ▁{ ▁return ▁ndDAO . update Code ( med ); ▁} ▁}