▁p ackage ▁edu . nc su . cs c . itrust . risk ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . No HealthRecords Exception ; ▁/** ▁* ▁Figure s ▁out ▁which ▁risk ▁check er ▁str ate gy ▁to ▁use ▁* ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁Chronic DiseaseMediator ▁{ ▁private ▁List < RiskChecker > ▁riskCheckers ; ▁/** ▁* ▁Give n ▁a ▁factory ▁and ▁patient ▁ID , ▁and ▁sets ▁up ▁a ▁list ▁of ▁all ▁risk ▁check ers ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁to ▁be ▁used ▁in ▁creating ▁the ▁necessary ▁DAOs ▁to ▁perform ▁the ▁checks . ▁* ▁@ param ▁pid ▁The ▁MID ▁of ▁the ▁patient ▁in ▁question . ▁* ▁@ throw s ▁DBException ▁* ▁@ throw s ▁No HealthRecords Exception ▁*/ ▁public ▁Chronic DiseaseMediator ( DAOFactory ▁factory , ▁long ▁pid ) ▁throw s ▁DBException , ▁No HealthRecords Exception ▁{ ▁riskCheckers ▁= ▁new ▁ArrayList < RiskChecker > (); ▁riskCheckers . add ( new ▁Heart DiseaseRisks ( factory , ▁pid )); ▁riskCheckers . add ( new ▁Type 1 DiabetesRisks ( factory , ▁pid )); ▁riskCheckers . add ( new ▁Type 2 DiabetesRisks ( factory , ▁pid )); ▁} ▁/** ▁* ▁@ return ▁A ▁list ▁of ▁diseases ▁that ▁this ▁patient ▁is ▁at ▁risk ▁for ▁*/ ▁public ▁List < RiskChecker > ▁getDisease AtRisk () ▁{ ▁List < RiskChecker > ▁diseases ▁= ▁new ▁ArrayList < RiskChecker > (); ▁for ▁( RiskChecker ▁ diseaseChecker ▁: ▁riskCheckers ) ▁{ ▁if ▁( diseaseChecker . i sAtRisk ()) ▁diseases . add ( diseaseChecker ); ▁} ▁return ▁diseases ; ▁} ▁}