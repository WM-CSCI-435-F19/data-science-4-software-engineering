▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁edu . nc su . cs c . itrust . action . base . Personnel BaseAction ; ▁import ▁edu . nc su . cs c . itrust . beans . PersonnelBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . AuthDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PersonnelDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . Role ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁import ▁edu . nc su . cs c . itrust . validate . Personnel Validator ; ▁/** ▁* ▁Edit s ▁the ▁designated ▁personnel ▁Used ▁by ▁admin / editPersonnel . jsp , ▁staff / editM y Demographics . jsp , ▁* ▁ editPersonnel . jsp ▁* ▁* ▁@ author ▁ laure nha y ward ▁* ▁*/ ▁public ▁class ▁Edit PersonnelAction ▁extends ▁Personnel BaseAction ▁{ ▁private ▁long ▁loggedInMID ; ▁private ▁PersonnelDAO ▁personnelDAO ; ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁AuthDAO ▁authDAO ; ▁private ▁Personnel Validator ▁validator ▁= ▁new ▁Personnel Validator (); ; ▁/** ▁* ▁S uper ▁class ▁validate s ▁the ▁patient ▁id ▁* ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁for ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁user ▁editing ▁this ▁personnel . ▁* ▁@ param ▁pidString ▁The ▁ID ▁of ▁the ▁user ▁being ▁edited . ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁Edit PersonnelAction ( DAOFactory ▁factory , ▁long ▁loggedInMID , ▁String ▁pidString ) ▁throw s ▁iTrustException ▁{ ▁super ( factory , ▁pidString ); ▁this . authDAO ▁= ▁factory . get AuthDAO (); ▁long ▁pid long ▁= ▁Long . parse Long ( pidString ); ▁Role ▁ editor ▁= ▁authDAO . getUserRole ( loggedInMID ); ▁Role ▁editing ▁= ▁authDAO . getUserRole ( pid long ); ▁if ▁( editor ▁== ▁editing ▁&& ▁pid long ▁ != ▁loggedInMID ) ▁throw ▁new ▁iTrustException (" You ▁can ▁only ▁edit ▁your ▁own ▁demographic s ! "); ▁else ▁if ▁( editor ▁== ▁Role . HCP ▁&& ▁editing ▁== ▁Role . ADMIN ▁|| ▁ editor ▁== ▁Role . UAP ▁&& ▁editing ▁== ▁Role . HCP ▁|| ▁ editor ▁== ▁Role . ADMIN ▁&& ▁editing ▁== ▁Role . UAP ) ▁throw ▁new ▁iTrustException (" You ▁are ▁not ▁authorized ▁to ▁edit ▁this ▁record ! "); ▁this . personnelDAO ▁= ▁factory . get PersonnelDAO (); ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁this . loggedInMID ▁= ▁loggedInMID ; ▁} ▁/** ▁* ▁T akes ▁information ▁from ▁the ▁personnelForm ▁ param ▁and ▁update s ▁the ▁patient ▁* ▁* ▁@ param ▁personnelForm ▁* ▁PersonnelBean ▁with ▁new ▁information ▁* ▁@ throw s ▁iTrustException ▁* ▁@ throw s ▁ FormValidat ionException ▁*/ ▁public ▁void ▁update Information ( PersonnelBean ▁personnelForm ) ▁throw s ▁iTrustException , ▁ FormValidat ionException ▁{ ▁personnelForm . set MID ( pid ); ▁validator . validate ( personnelForm ); ▁personnelDAO . editPersonnel ( personnelForm ); ▁transDAO . log Transaction ( TransactionType . CRE ATE _ DISABLE _ PATIENT _ HCP , ▁loggedInMID ); ▁} ▁public ▁void ▁edit MessageFilter ( String ▁filter ) ▁throw s ▁iTrustException , ▁ FormValidat ionException ▁{ ▁PersonnelBean ▁b ▁= ▁personnelDAO . getPersonnel ( this . get Pid ()); ▁b . set MessageFilter ( filter ); ▁this . update Information ( b ); ▁} ▁}