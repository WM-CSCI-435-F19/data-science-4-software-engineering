▁p ackage ▁edu . nc su . cs c . itrust ; ▁import ▁java . sql . Connection ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁/** ▁* ▁Provide s ▁a ▁f ew ▁database ▁ util t ies ▁* ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁DBUtil ▁{ ▁/** ▁* ▁Used ▁to ▁check ▁if ▁we ▁can ▁ actually ▁obtain ▁a ▁connection . ▁* ▁* ▁@ return ▁*/ ▁public ▁static ▁boolean ▁can Obtain Pr oductionInstance () ▁{ ▁try ▁{ ▁DAOFactory . getPr oductionInstance (). get Connection (). close (); ▁return ▁true ; ▁} ▁catch ▁( SQLException ▁e ) ▁{ ▁System . out . print ln ( e ); ▁return ▁false ; ▁} ▁} ▁/** ▁* ▁ Close ▁the ▁ prepare d ▁ statement ▁and ▁the ▁connection ▁in ▁a ▁proper ▁way ▁* ▁* ▁@ param ▁conn ▁* ▁@ param ▁ps ▁*/ ▁public ▁static ▁void ▁close Connection ( Connection ▁conn , ▁P reparedStatement ▁ps ) ▁{ ▁try ▁{ ▁if ▁( ps ▁ != ▁null ) ▁ps . close (); ▁if ▁( conn ▁ != ▁null ) ▁conn . close (); ▁} ▁catch ▁( SQLException ▁e ) ▁{ ▁System . err . print ln (" Error ▁cl o s ing ▁connections "); ▁e . print Stack T race (); ▁} ▁} ▁/** ▁* ▁Returns ▁the ▁last ▁ID ▁that ▁was ▁generated ▁for ▁an ▁auto - i ncrement ▁col u m n . ▁P lease ▁note ▁that ▁this ▁does ▁NOT ▁* ▁cause ▁transaction ▁problem s ! ▁last _ insert _ id () ▁return s ▁the ▁last ▁generated ▁ID ▁on ▁a ▁per - connection ▁basis . ▁* ▁Se e ▁the ▁My SQL ▁document ation ▁at ▁the ▁following ▁location ▁to ▁confirm ▁this : ▁* ▁ {@ link ▁http :// dev . mysql . com / do c / ref man / 5 . 0 / en / getting - unique - id . html } ▁* ▁* ▁Do n ' t ▁be li e ve ▁ me ? ▁see ▁ {@ link ▁ Au to I ncrement Test } ▁* ▁* ▁@ param ▁conn ▁* ▁@ return ▁last ▁generated ▁id ▁* ▁@ throw s ▁SQLException ▁*/ ▁public ▁static ▁long ▁ getLast Insert ( Connection ▁conn ) ▁throw s ▁SQLException ▁{ ▁ResultSet ▁rs ▁= ▁conn . create Statement (). execute Query (" SEL ECT ▁ LAST _ INSERT _ ID () "); ▁rs . next (); ▁return ▁rs . getLong (1); ▁} ▁}