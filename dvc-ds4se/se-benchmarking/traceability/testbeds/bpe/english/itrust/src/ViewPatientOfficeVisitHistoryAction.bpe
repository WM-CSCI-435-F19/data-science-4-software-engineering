▁p ackage ▁edu . nc su . cs c . itrust . action ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . Iterator ; ▁import ▁java . util . List ; ▁import ▁java . util . Scanner ; ▁import ▁edu . nc su . cs c . itrust . beans . OfficeVisitBean ; ▁import ▁edu . nc su . cs c . itrust . beans . PatientBean ; ▁import ▁edu . nc su . cs c . itrust . beans . PatientVisitBean ; ▁import ▁edu . nc su . cs c . itrust . beans . PersonnelBean ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . OfficeVisitDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PatientDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . PersonnelDAO ; ▁import ▁edu . nc su . cs c . itrust . dao . mysql . TransactionDAO ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁import ▁edu . nc su . cs c . itrust . exception . iTrustException ; ▁/** ▁* ▁* ▁ Action ▁class ▁for ▁View Patient OfficeVisit H istory . jsp ▁* ▁*/ ▁public ▁class ▁View Patient OfficeVisit HistoryAction ▁{ ▁private ▁long ▁loggedInMID ; ▁private ▁PatientDAO ▁patientDAO ; ▁private ▁TransactionDAO ▁transDAO ; ▁private ▁PersonnelDAO ▁personnelDAO ; ▁private ▁OfficeVisitDAO ▁officevisitDAO ; ▁private ▁ArrayList < PatientVisitBean > ▁visits ; ▁/** ▁* ▁Set ▁up ▁defaults ▁* ▁@ param ▁factory ▁The ▁DAOFactory ▁used ▁to ▁create ▁the ▁DAOs ▁used ▁in ▁this ▁action . ▁* ▁@ param ▁loggedInMID ▁The ▁MID ▁of ▁the ▁person ▁viewing ▁the ▁office ▁visits . ▁*/ ▁public ▁View Patient OfficeVisit HistoryAction ( DAOFactory ▁factory , ▁long ▁loggedInMID ) ▁{ ▁this . loggedInMID ▁= ▁loggedInMID ; ▁this . personnelDAO ▁= ▁factory . get PersonnelDAO (); ▁this . transDAO ▁= ▁factory . get TransactionDAO (); ▁officevisitDAO ▁= ▁factory . get OfficeVisitDAO (); ▁this . patientDAO ▁= ▁factory . get PatientDAO (); ▁visits ▁= ▁new ▁ArrayList < PatientVisitBean > (); ▁} ▁/** ▁* ▁Add s ▁all ▁the ▁office ▁visits ▁for ▁the ▁logged ▁in ▁HCP ▁to ▁a ▁list . ▁* ▁* ▁@ throw s ▁iTrustException ▁*/ ▁private ▁void ▁process OfficeVisits () ▁throw s ▁iTrustException ▁{ ▁try ▁{ ▁List < OfficeVisitBean > ▁ovlist ▁= ▁officevisitDAO . get AllOfficeVisits ForLHCP ( loggedInMID ); ▁ Iterator < OfficeVisitBean > ▁it ▁= ▁ovlist . i terator (); ▁OfficeVisitBean ▁ov ; ▁ PatientVisitBean ▁visitBean ; ▁while ▁( it . has Next ()) ▁{ ▁visitBean ▁= ▁new ▁ PatientVisitBean (); ▁ov ▁= ▁it . next (); ▁PatientBean ▁pb ; ▁pb ▁= ▁patientDAO . getPatient ( ov . getPatientID ()); ▁visitBean . set Patient ( pb ); ▁visitBean . set PatientName ( pb . getF ullName ()); ▁String ▁date ▁= ▁ov . getVisitDate Str (); ▁ Scanner ▁ sc ▁= ▁new ▁ Scanner ( date ); ▁ sc . use Del im i ter ("/ "); ▁String ▁month ▁= ▁ sc . next (); ▁String ▁day ▁= ▁ sc . next (); ▁String ▁year ▁= ▁ sc . next (); ▁visitBean . set LastOVDateM ( month ); ▁visitBean . set LastOVDateD ( day ); ▁visitBean . set LastOVDateY ( year ); ▁visitBean . setLastOVDate ( year ▁+" - " ▁+ ▁month ▁+" - " ▁+ ▁date ); ▁visitBean . set Address 1 ( pb . getStreetAddress 1() ▁+" ▁" ▁+ ▁pb . getStreetAddress 2 ()); ▁visitBean . set Address 2 ( pb . get City () ▁+ ▁" ▁" ▁+ pb . get State () ▁+" ▁" ▁+ pb . getZip ()); ▁boolean ▁b ▁= ▁Patient In List ( pb , date ); ▁if ( b ▁== ▁false ) ▁visits . add ( visitBean ); ▁} ▁} ▁catch ▁( DBException ▁ dbe ) ▁{ ▁throw ▁new ▁iTrustException ( dbe . getMessage ()); ▁} ▁} ▁/** ▁* ▁Check s ▁to ▁see ▁if ▁a ▁patient ▁is ▁in ▁the ▁list ▁of ▁visits ▁* ▁@ param ▁pb ▁patient ▁to ▁check ▁* ▁@ param ▁date ▁date ▁of ▁the ▁visit ▁* ▁@ return ▁ True ▁if ▁the ▁patient ▁is ▁in ▁the ▁list ▁of ▁visits . ▁*/ ▁private ▁boolean ▁Patient In List ( PatientBean ▁pb , ▁String ▁date ) ▁{ ▁ Iterator < PatientVisitBean > ▁it ▁= ▁visits . i terator (); ▁ PatientVisitBean ▁visitBean ; ▁while ▁( it . has Next ()){ ▁visitBean ▁= ▁it . next (); ▁if ( visitBean . get PatientName (). equals ( pb . getF ullName ())){ ▁if ( visitBean . get LastOVDateY (). compareTo ( date ) ▁< ▁0){ ▁visitBean . setLastOVDate ( date ); ▁} ▁return ▁true ; ▁} ▁} ▁return ▁false ; ▁} ▁/** ▁* ▁Get ▁the ▁list ▁of ▁patients ▁an ▁HCP ▁has ▁had ▁office ▁visits ▁with ▁* ▁* ▁@ return ▁the ▁list ▁of ▁patients ▁an ▁HCP ▁has ▁had ▁office ▁visits ▁with ▁* ▁@ throw s ▁DBException ▁*/ ▁public ▁List < PatientVisitBean > ▁getPatient s () ▁throw s ▁DBException ▁{ ▁try ▁{ ▁process OfficeVisits (); ▁} ▁catch ▁( iTrustException ▁ ie ) ▁{ ▁} ▁// log ▁transaction ▁transDAO . log Transaction ( TransactionType . VI EW _ PATIENT _ LIST , loggedInMID ); ▁return ▁visits ; ▁} ▁/** ▁* ▁Returns ▁a ▁PersonnelBean ▁for ▁the ▁logged ▁in ▁HCP ▁* ▁@ return ▁PersonnelBean ▁for ▁the ▁logged ▁in ▁HCP ▁* ▁@ throw s ▁iTrustException ▁*/ ▁public ▁PersonnelBean ▁getPersonnel () ▁throw s ▁iTrustException ▁{ ▁return ▁personnelDAO . getPersonnel ( loggedInMID ); ▁} ▁}