▁p ackage ▁edu . nc su . cs c . itrust . exception ; ▁import ▁java . io . IOException ; ▁import ▁java . util . List ; ▁import ▁java x . s ervlet . jsp . JspWriter ; ▁/** ▁* ▁This ▁exception ▁is ▁used ▁specific ally ▁for ▁when ▁an ▁action ▁involve s ▁the ▁correct ▁* ▁and ▁proper ▁sub m is s ion ▁of ▁a ▁web ▁form . ▁Form ▁ Validation ▁is ▁handled ▁by ▁a ▁ series ▁of ▁* ▁other ▁class es , ▁but ▁when ▁form ▁validation ▁is ▁incorrect ▁or ▁incomplete , ▁this ▁exception ▁* ▁is ▁thrown . ▁*/ ▁public ▁class ▁ FormValidat ionException ▁extends ▁Exception ▁{ ▁private ▁static ▁final ▁long ▁serial Version UID ▁= ▁1 L ; ▁private ▁ErrorList ▁errorList ; ▁/** ▁* ▁Constructor ▁with ▁error ▁messages ▁passed ▁as ▁a ▁list ▁of ▁parameters ▁to ▁the ▁method . ▁* ▁@ param ▁errorMessage s ▁The ▁list ▁of ▁error ▁messages ▁to ▁be ▁returned ▁in ▁the ▁special ▁form ▁validation ▁box . ▁*/ ▁public ▁ FormValidat ionException ( String . . . ▁errorMessage s ) ▁{ ▁errorList ▁= ▁new ▁ErrorList (); ▁for ▁( String ▁ msg ▁: ▁errorMessage s ) ▁{ ▁errorList . add If Not Null ( msg ); ▁} ▁} ▁/** ▁* ▁Constructor ▁with ▁error ▁messages ▁as ▁a ▁special ▁ErrorList ▁data ▁type . ▁* ▁@ param ▁errorList ▁An ▁ErrorList ▁object ▁which ▁contains ▁the ▁list ▁of ▁error ▁messages . ▁*/ ▁public ▁ FormValidat ionException ( ErrorList ▁errorList ) ▁{ ▁this . errorList ▁= ▁errorList ; ▁} ▁/** ▁* ▁Returns ▁the ▁error ▁list ▁as ▁a ▁java . util . List ▁of ▁String s . ▁* ▁@ return ▁The ▁error ▁list ▁*/ ▁public ▁List < String > ▁get ErrorList () ▁{ ▁return ▁errorList . getMessage List (); ▁} ▁/** ▁* ▁The ▁error ▁message ▁will ▁be ▁displayed ▁at ▁the ▁to p ▁of ▁the ▁iTrust ▁page ▁as ▁in ▁other ▁iTrust ▁Exception s . ▁*/ ▁@ O verride ▁public ▁String ▁ getMessage () ▁{ ▁return ▁" This ▁form ▁has ▁not ▁been ▁validated ▁correctly . ▁The ▁following ▁field ▁are ▁not ▁properly ▁filled ▁in : ▁" ▁+ ▁errorList . to String (); ▁} ▁/** ▁* ▁The ▁special ▁formatt ing ▁for ▁error ▁messages ▁is ▁then ▁k e pt ▁in ▁one ▁place . ▁* ▁@ param ▁out ▁The ▁output ▁write r ▁( in ▁this ▁case ▁a ▁JSP Write r ) ▁where ▁the ▁formatt ed ▁list ▁will ▁go . ▁* ▁@ throw s ▁ IOException ▁If ▁the ▁write r ▁is ▁incorrect . ▁*/ ▁public ▁void ▁print HTML ( JspWriter ▁out ) ▁throw s ▁ IOException ▁{ ▁out . print ("< h 2> Information ▁not ▁valid </ h 2 >< div ▁class =\" errorList \">" ); ▁for ▁( String ▁errorMessage ▁: ▁errorList ) ▁{ ▁out . print ( errorMessage ▁+ ▁"< br ▁/> "); ▁} ▁out . print (" </ div >"); ▁} ▁}