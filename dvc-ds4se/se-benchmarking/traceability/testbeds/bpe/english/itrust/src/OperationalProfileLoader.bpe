▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . Ope rationalProfile ; ▁import ▁edu . nc su . cs c . itrust . enums . TransactionType ; ▁/** ▁* ▁A ▁loader ▁for ▁the ▁operational ▁profile . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁Operation alProfileLoader ▁implement s ▁BeanLoader < Ope rationalProfile > ▁{ ▁public ▁List < Ope rationalProfile > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁Ope rationalProfile ▁bean ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁public ▁Ope rationalProfile ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁Ope rationalProfile ▁op ▁= ▁new ▁Ope rationalProfile (); ▁int ▁ grandTotal ▁= ▁0; ▁int ▁ grandPatient ▁= ▁0; ▁int ▁ grandPersonnel ▁= ▁0; ▁while ▁( rs . next ()) ▁{ ▁TransactionType ▁type ▁= ▁TransactionType . parse ( rs . getInt (" Transaction Code ")); ▁int ▁totalCount ▁= ▁rs . getInt (" TotalCount "); ▁int ▁patientCount ▁= ▁rs . getInt (" PatientCount "); ▁int ▁personnelCount ▁= ▁rs . getInt (" PersonnelCount "); ▁op . get TotalCount (). put ( type , ▁totalCount ); ▁op . get PatientCount (). put ( type , ▁patientCount ); ▁op . get PersonnelCount (). put ( type , ▁personnelCount ); ▁ grandTotal ▁+= ▁totalCount ; ▁ grandPatient ▁+= ▁patientCount ; ▁ grandPersonnel ▁+= ▁personnelCount ; ▁} ▁op . setNum T otalTransactions ( grandTotal ); ▁op . set NumPatient Transactions ( grandPatient ); ▁op . setNum Personnel Transactions ( grandPersonnel ); ▁return ▁op ; ▁} ▁}