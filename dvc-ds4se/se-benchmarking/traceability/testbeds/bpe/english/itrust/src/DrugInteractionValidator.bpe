▁p ackage ▁edu . nc su . cs c . itrust . validate ; ▁import ▁edu . nc su . cs c . itrust . beans . DrugInteraction Bean ; ▁import ▁edu . nc su . cs c . itrust . exception . ErrorList ; ▁import ▁edu . nc su . cs c . itrust . exception . FormValidat ionException ; ▁/** ▁* ▁Validate s ▁a ▁drug ▁interaction ▁bean , ▁from ▁ {@ link ▁DrugInteraction Action } ▁* ▁*/ ▁public ▁class ▁DrugInteraction Validator ▁extends ▁ BeanValidator < DrugInteraction Bean > ▁{ ▁/** ▁* ▁The ▁default ▁constructor . ▁*/ ▁public ▁DrugInteraction Validator () ▁{ ▁} ▁/** ▁* ▁Perform s ▁the ▁act ▁of ▁validat ing ▁the ▁bean ▁in ▁question , ▁which ▁varie s ▁depend ing ▁on ▁the ▁* ▁type ▁of ▁validator . ▁If ▁the ▁validation ▁does ▁not ▁succeed , ▁a ▁ {@ link ▁ FormValidat ionException } ▁is ▁thrown . ▁* ▁* ▁@ param ▁d ▁A ▁bean ▁of ▁the ▁type ▁to ▁be ▁validated . ▁*/ ▁@ O verride ▁public ▁void ▁validate ( DrugInteraction Bean ▁d ) ▁throw s ▁ FormValidat ionException ▁{ ▁ErrorList ▁errorList ▁= ▁new ▁ErrorList (); ▁errorList . add If Not Null ( check Format (" FirstDrug ", ▁d . get FirstDrug (), ▁ ValidationFormat . ND , false )); ▁errorList . add If Not Null ( check Format (" SecondDrug ", ▁d . get SecondDrug (), ▁ ValidationFormat . ND , false )); ▁errorList . add If Not Null ( check Format (" description ", ▁d . get Description (), ▁ ValidationFormat . DRUG _ INT _ COMMENTS , false )); ▁if ▁( errorList . has Errors ()) ▁throw ▁new ▁ FormValidat ionException ( errorList ); ▁} ▁}