▁p ackage ▁edu . nc su . cs c . itrust . risk . factors ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁/** ▁* ▁Check s ▁for ▁prior ▁diagnoses ▁by ▁ del eg at in ▁to ▁the ▁DAO ▁* ▁Se e ▁ {@ link ▁P atientRiskFactor } ▁for ▁details ▁on ▁what ▁ each ▁method ▁typically ▁does . ▁* ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁Prio rDiagnosisFactor ▁extends ▁P atientRiskFactor ▁{ ▁private ▁long ▁patientID ; ▁private ▁DAOFactory ▁factory ; ▁private ▁double ▁lowerICDCode ; ▁private ▁double ▁upperICDCode ; ▁public ▁Prio rDiagnosisFactor ( DAOFactory ▁factory , ▁long ▁patientID , ▁double ▁lowerICDCode , ▁double ▁upperICDCode ) ▁{ ▁this . factory ▁= ▁factory ; ▁this . patientID ▁= ▁patientID ; ▁this . lower ICDCode ▁= ▁lowerICDCode ; ▁this . upper ICDCode ▁= ▁upperICDCode ; ▁} ▁public ▁String ▁get Description () ▁{ ▁return ▁" Patient ▁has ▁had ▁relat ed ▁diagnoses "; ▁} ▁public ▁boolean ▁has Factor () ▁{ ▁try ▁{ ▁return ▁factory . get RiskDAO (). h ad PriorDiagnos es ( patientID , ▁lowerICDCode , ▁upperICDCode ); ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁false ; ▁} ▁} ▁}