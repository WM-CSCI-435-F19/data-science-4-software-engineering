▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . forms . VisitReminder ReturnForm ; ▁/** ▁* ▁A ▁loader ▁for ▁VisitReminder ReturnForm s . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁VisitReminder ReturnFormLoader ▁implement s ▁BeanLoader < VisitReminder ReturnForm > ▁{ ▁public ▁List < VisitReminder ReturnForm > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ArrayList < VisitReminder ReturnForm > ▁list ▁= ▁new ▁ArrayList < VisitReminder ReturnForm > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁VisitReminder ReturnForm ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁int ▁i ▁= ▁0; ▁return ▁new ▁VisitReminder ReturnForm ( rs . getLong ( ++ i ) , / / ▁hcpid ▁rs . getLong ( ++ i ) , / / ▁patient ▁ID ▁rs . get String ( ++ i ) , / / ▁last ▁name ▁rs . get String ( ++ i ) , / / ▁first ▁rs . get String ( ++ i ) , / / ▁phone 1 ▁rs . get String ( ++ i ) , / / ▁phone 2 ▁rs . get String ( ++ i )); / / ▁ , / / ▁phone 3 ▁// ▁" diagnosis : ▁" ▁+ ▁rs . get String ( ++ i ) , ▁// ▁" last ▁visit : ▁" ▁+ ▁rs . get String ( ++ i )); ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁VisitReminder ReturnForm ▁bean ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁}