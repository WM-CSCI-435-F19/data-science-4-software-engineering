▁p ackage ▁edu . nc su . cs c . itrust . risk . factors ; ▁import ▁edu . nc su . cs c . itrust . dao . DAOFactory ; ▁import ▁edu . nc su . cs c . itrust . exception . DBException ; ▁/** ▁* ▁Check s ▁if ▁a ▁patient ▁has ▁a ▁family ▁histor y ▁of ▁a ▁given ▁diagnosis ▁range . ▁D ele g ate s ▁str a ight ▁to ▁the ▁DAO . ▁* ▁Se e ▁ {@ link ▁P atientRiskFactor } ▁for ▁details ▁on ▁what ▁ each ▁method ▁typically ▁does . ▁* ▁* ▁@ author ▁Andy ▁* ▁*/ ▁public ▁class ▁Family HistoryFactor ▁extends ▁P atientRiskFactor ▁{ ▁private ▁long ▁patientID ; ▁private ▁DAOFactory ▁factory ; ▁private ▁double ▁icdUpper ; ▁private ▁double ▁icdLower ; ▁public ▁Family HistoryFactor ( DAOFactory ▁factory , ▁long ▁patientID , ▁double ▁icdLower , ▁double ▁icdUpper ) ▁{ ▁this . factory ▁= ▁factory ; ▁this . patientID ▁= ▁patientID ; ▁this . icd Lower ▁= ▁icdLower ; ▁this . icd Up per ▁= ▁icdUpper ; ▁} ▁public ▁String ▁get Description () ▁{ ▁return ▁" Patient ▁has ▁a ▁family ▁histor y ▁of ▁this ▁disease "; ▁} ▁public ▁boolean ▁has Factor () ▁{ ▁try ▁{ ▁return ▁factory . get RiskDAO (). has FamilyHistory ( patientID , ▁icdLower , ▁icdUpper ); ▁} ▁catch ▁( DBException ▁e ) ▁{ ▁e . print Stack T race (); ▁return ▁false ; ▁} ▁} ▁}