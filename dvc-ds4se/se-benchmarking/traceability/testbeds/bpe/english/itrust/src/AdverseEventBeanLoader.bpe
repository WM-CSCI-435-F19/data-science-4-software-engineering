▁p ackage ▁edu . nc su . cs c . itrust . beans . loaders ; ▁import ▁java . sql . P reparedStatement ; ▁import ▁java . sql . ResultSet ; ▁import ▁java . sql . SQLException ; ▁import ▁java . util . ArrayList ; ▁import ▁java . util . List ; ▁import ▁edu . nc su . cs c . itrust . beans . AdverseEventBean ; ▁/** ▁* ▁A ▁loader ▁for ▁ AdverseEventBean s . ▁* ▁* ▁Load s ▁in ▁information ▁to / from ▁beans ▁using ▁ResultSet s ▁and ▁P reparedStatement s . ▁Use ▁the ▁superclass ▁to ▁enforce ▁consistency . ▁* ▁For ▁details ▁on ▁the ▁para dig m ▁for ▁a ▁loader ▁( and ▁what ▁its ▁methods ▁do ) , ▁see ▁ {@ link ▁BeanLoader } ▁*/ ▁public ▁class ▁AdverseEvent BeanLoader ▁implement s ▁BeanLoader < AdverseEventBean > ▁{ ▁public ▁List < AdverseEventBean > ▁load List ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ArrayList < AdverseEventBean > ▁list ▁= ▁new ▁ArrayList < AdverseEventBean > (); ▁while ▁( rs . next ()) ▁{ ▁list . add ( loadSingle ( rs )); ▁} ▁return ▁list ; ▁} ▁public ▁ AdverseEventBean ▁loadSingle ( ResultSet ▁rs ) ▁throw s ▁SQLException ▁{ ▁ AdverseEventBean ▁adverseEvent ▁= ▁new ▁ AdverseEventBean (); ▁adverseEvent . set MID ( rs . get String (" PatientMID ")); ▁adverseEvent . set Drug ( rs . get String (" PresImmu ")); ▁adverseEvent . set Description ( rs . get String (" Comment ")); ▁adverseEvent . set Code ( rs . get String (" Code ")); ▁adverseEvent . setDate ( rs . get Timestamp (" TimeLogged "). to String ()); ▁adverseEvent . set Id ( rs . getInt (" id ")); ▁adverseEvent . set Status ( rs . get String (" Status ")); ▁return ▁adverseEvent ; ▁} ▁public ▁P reparedStatement ▁load Parameters ( P reparedStatement ▁ps , ▁ AdverseEventBean ▁bean ) ▁throw s ▁SQLException ▁{ ▁throw ▁new ▁Illegal StateException (" un implemented ! "); ▁} ▁}